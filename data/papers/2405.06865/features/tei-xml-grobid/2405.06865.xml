<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Disrupting Style Mimicry Attacks on Video Imagery</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability  status="unknown">
					<licence/>
				</availability>
				<date type="published" when="2024-05-11">11 May 2024</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Josephine</forename><surname>Passananti</surname></persName>
							<email>josephinep@cs.uchicago.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Chicago</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Stanley</forename><surname>Wu</surname></persName>
							<email>stanleywu@cs.uchicago.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Chicago</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Shawn</forename><surname>Shan</surname></persName>
							<email>shawnshan@cs.uchicago.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Chicago</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Haitao</forename><surname>Zheng</surname></persName>
							<email>htzheng@cs.uchicago.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Chicago</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ben</forename><forename type="middle">Y</forename><surname>Zhao</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Chicago</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Disrupting Style Mimicry Attacks on Video Imagery</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2024-05-11">11 May 2024</date>
						</imprint>
					</monogr>
					<idno type="MD5">761D2B9DA075900E53689A6ABCDDFCA2</idno>
					<idno type="arXiv">arXiv:2405.06865v1[cs.CV]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.2-SNAPSHOT" ident="GROBID" when="2025-02-21T16:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Generative AI models are often used to perform mimicry attacks, where a pretrained model is fine-tuned on a small sample of images to learn to mimic a specific artist of interest. While researchers have introduced multiple anti-mimicry protection tools (Mist, Glaze, Anti-Dreambooth), recent evidence points to a growing trend of mimicry models using videos as sources of training data.</p><p>This paper presents our experiences exploring techniques to disrupt style mimicry on video imagery. We first validate that mimicry attacks can succeed by training on individual frames extracted from videos. We show that while anti-mimicry tools can offer protection when applied to individual frames, this approach is vulnerable to an adaptive countermeasure that removes protection by exploiting randomness in optimization results of consecutive (nearly-identical) frames. We develop a new, tool-agnostic framework that segments videos into short scenes based on frame-level similarity, and use a per-scene optimization baseline to remove inter-frame randomization while reducing computational cost. We show via both image level metrics and an end-to-end user study that the resulting protection restores protection against mimicry (including the countermeasure). Finally, we develop another adaptive countermeasure and find that it falls short against our framework.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>While many debate the ethical and legal issues around the training of generative image models, all agree that their arrival has dramatically disrupted a range of visual art industries, from fine art to illustrations, concept art and graphics arts. Recent works has studied the harms experienced by professional artists due to these large-scale image generators, including reputational damage, economic loss, plagiarism and copyright infringement <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b22">24]</ref>. One of the more harmful uses of these image models is "style mimicry," where someone "finetunes" a model on small samples of a specific artist's art, then uses the result to produce images in the artist's individual style without their knowledge <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b27">29,</ref><ref type="bibr" target="#b47">51]</ref>. These mimicry models (usually lightweight models known as LORAs) are hosted on sites including Civitai, Tensor.art, PromptHero and HuggingFace.</p><p>Recently, the security and machine learning communities have developed a number of tools to disrupt unauthorized style mimicry, including Glaze <ref type="bibr" target="#b39">[43]</ref>, Mist <ref type="bibr" target="#b25">[27]</ref>, and Anti-Dreambooth <ref type="bibr" target="#b45">[49]</ref>. These tools disrupt the mimicry process, by modifying images so that they misrepresent themselves in a target model's style feature space during finetuning, while constraining changes to minimize visual impact to human eyes. Since their introduction, they have been adopted widely by artists across the globe, e.g. Glaze reports more than 2.3 million downloads in a year <ref type="bibr" target="#b18">[20]</ref>.</p><p>There are signs, however, that mimicry attacks are shifting away from 2D art images and towards video content (see Figure <ref type="figure" target="#fig_0">1</ref>). Online videos such as animations, game cut-scenes, music videos and TV shows provide attractive sources for training mimicry models for several reasons. First, a single video can provide thousands of frames, each convertible to a standalone image for training. For example, YouTube videos range from 30 to 60 frames per second, and even a short 5 minute video can yield 18,000 frames for potential training. Second, extracting frames from videos provides far more flexibility to choose a specific scene, character or perspective. This offers far richer training content compared to static images like movie posters or promotional art. In fact, many new LORAs already target video games (Riot's League of Legends<ref type="foot" target="#foot_0">foot_0</ref> and Valorant<ref type="foot" target="#foot_1">foot_1</ref> , LucasArts Games<ref type="foot" target="#foot_2">foot_2</ref> , Dead Or Alive <ref type="foot" target="#foot_3">4</ref> ), TV shows (The Flash<ref type="foot" target="#foot_4">foot_4</ref> , Rick &amp; Morty <ref type="foot" target="#foot_5">6</ref> ), and movies (Hunger Games <ref type="foot" target="#foot_6">7</ref> , Jumanji <ref type="foot" target="#foot_7">8</ref> , Disney Pixar <ref type="foot" target="#foot_8">9</ref> ).</p><p>The natural question arises: what can we do to protect video creators from style mimicry attacks? This paper presents results from our efforts to answer this question, and to disrupt style mimicry attacks on video imagery. We begin by first validating the threat. Through empirical experiments on a variety of short videos, we confirm that it is possible to produce consistent, high quality mimicry models by extracting and training on frames from videos. Next, we consider the feasibility of applying existing tools like Glaze/Mist/Anti-DB to videos on a frame by frame basis. This naive approach, while computationally expensive, does indeed protect against extracting and training on video frames.</p><p>The problem, however, is that in the video domain, a naive application of anti-mimicry tools is vulnerable to an adaptive countermeasure. Because anti-mimicry tools are designed to operate on single images, they compute protection filters on each single image independently. Randomized components of these algorithms produce different optimization results on multiple runs of the same image. For medium to high frame rate videos, this means a clever attacker can take a protected video, extract consecutive frames whose originals are nearly identical, use the protected frames to identify alterations made by protection tools at the pixel level, and remove them to extract the original frames. We explore multiple versions of this adaptive attack, and show that they can effectively bypass all 3 anti-mimicry tools and produce mimicry models similar in quality to those trained from unprotected videos. Next, we develop Gimbal, an anti-mimicry framework for videos to resist this countermeasure and restore robustness of anti-mimicry tools. At a high level, we recognize commonalities across all 3 anti-mimicry tools, and extend these tools to include the notion of sequential similar video frames. Instead of computing a costly independent protection per frame, we first analyze video frames to identify scenes or frame sequences with low pixel differential across frames. The protection tool computes a single baseline perturbation for all frames in the same scene, and then performs additional local optimization on a per frame basis. The result is each new frame's protection pixels is an extension from the prior frame, removing unnecessary randomization used by the countermeasure. This new approach has the added benefit of greatly reducing time required to generate protection, often by an order of magnitude.</p><p>We evaluate the efficacy and robustness of Gimbal on a variety of videos. We validate that it integrates naturally with all 3 anti-mimicry tools. We adapt Gimbal to each tool and evaluate the robustness against video mimicry attacks using multiple imagelevel metrics, including latent 𝐿 2 norm between frames, intra-frame mean pixel difference, and CLIP-based genre shift. Most importantly, we perform a user study and ask participants to evaluate if the prototype is able to provide sufficient protection against video mimicry attacks (including the anti-mimicry countermeasure). Responses from over 500 participants confirm that not only does our robust anti-mimicry system works as intended against mimicry models, but its protection is actually more visually appealing than naive Glaze (less flickering due to randomization across frames).</p><p>Finally, we identify an advanced countermeasure against our frame-aggregation framework, where an attacker can force us to break a sequence of similar frames into multiple scenes. We show that even in these scenarios, frame aggregation prevents an attacker from extracting unprotected frames.</p><p>In summary, our paper makes the following contributions:</p><p>• We demonstrate that attackers can successfully mimic visual styles in videos by extracting and training on individual frames. • We identify and validate the efficacy of an adaptive countermeasure that exploits randomization from per-image optimizations to remove image protection and enable successful mimicry. • We propose a general anti-mimicry framework for videos that aggregates scenes of similar frames into the protection process, removing unnecessary inter-frame randomization, reducing visual artifacts and greatly reducing computation costs. • We validate the efficacy of our protection against mimicry attacks (including the adaptive countermeasure) using a variety of image metrics and two user studies of combined 525 participants.</p><p>• We propose another adaptive countermeasure on our framework, and show that it failures to extract unprotected frames for mimicry.</p><p>Our work presents an important first step towards protecting video content against visual style mimicry, by identifying and mitigating a video-specific countermeasure to anti-mimicry tools. A number of challenges remain, and more effort is needed to identify other adaptive mimicry algorithms, particularly for longer videos.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND AND RELATED WORK</head><p>We begin by providing background on style mimicry and existing image-based protection methods. Then we follow with an overview of publicly available tools that enable style mimicry attacks on the video domain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Style Mimicry and Existing Defenses</head><p>In a style mimicry attack, a bad actor finetunes a text-to-image model to generate art in a particular artist's style without their consent. Since the introduction of text-to-image diffusion <ref type="bibr" target="#b29">[31,</ref><ref type="bibr" target="#b31">34,</ref><ref type="bibr" target="#b32">36,</ref><ref type="bibr" target="#b41">45,</ref><ref type="bibr" target="#b42">46]</ref> models in 2022, style mimicry has grown significantly. There have been multiple high-profile mimicry incidents involving human artists <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b27">29,</ref><ref type="bibr" target="#b47">51]</ref>, and new companies are founded that focus purely on style mimicry <ref type="bibr" target="#b23">[25,</ref><ref type="bibr" target="#b36">40]</ref>. AI marketplaces have also recently gained traction, with websites like CivitAI <ref type="bibr" target="#b11">[12]</ref> offering over 119K ready-to-use mimicry models for people to download and use. Image-based style mimicry. Style mimicry relies on finetuning pretrained text-to-image models (e.g., stable diffusion) on a small set of images from a specific style <ref type="bibr" target="#b14">[16,</ref><ref type="bibr" target="#b15">17,</ref><ref type="bibr" target="#b34">38]</ref>. The quality of these images greatly impacts the mimicry result, and thus, attackers often scrape high quality images from artists' websites and online galleries <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b47">51]</ref>. In practice, a bad actor does not need many (less than 20 images <ref type="bibr" target="#b15">[17,</ref><ref type="bibr" target="#b39">43]</ref>) in order to successfully generate arbitrary artwork from a victim artist's style. Because of the risk of imagebased mimicry, many artists choose to reduce the amount of art they post online <ref type="bibr" target="#b13">[15]</ref>, reduce the quality of any posted art <ref type="bibr" target="#b19">[21]</ref>, and apply protection (discussed in details below) on this artwork <ref type="bibr" target="#b39">[43]</ref>. Protecting images from style mimicry. Existing work (Mist <ref type="bibr" target="#b25">[27]</ref>, Anti-Dreambooth <ref type="bibr" target="#b45">[49]</ref>, and Glaze <ref type="bibr" target="#b39">[43]</ref>) has proposed methods that leverage clean-label poisoning <ref type="bibr" target="#b35">[39,</ref><ref type="bibr" target="#b43">47,</ref><ref type="bibr" target="#b49">53]</ref> to prevent style mimicry. At a high level, these systems add small optimized perturbations to image artwork that modifies the perturbed image's feature space representation without altering its content. The altered feature space representation prevents models from learning the correct artistic style. In general, these protection tools calculate the perturbation 𝛿 𝑥 for an image 𝑥 using the following objective: min</p><formula xml:id="formula_0">𝛿 𝑥 𝐷𝑖𝑠𝑡 (Φ(𝑥 + 𝛿 𝑥 ), Φ(𝑇 )) ,<label>(1)</label></formula><formula xml:id="formula_1">subject to |𝛿 𝑥 | &lt; 𝑝,</formula><p>where Φ is a generic image feature extractor from a public textto-image model, 𝐷𝑖𝑠𝑡 (.) computes the distance between two feature representations, |𝛿 𝑥 | measures the perceptual perturbation caused by protection, and 𝑝 is the perceptual perturbation budget. 𝑇 is a "target image" that the perturbation 𝛿 𝑥 is optimized towards, such that 𝑥 + 𝛿 𝑥 resembles 𝑇 in feature space while being visually identical to 𝑥. Mist <ref type="bibr" target="#b25">[27]</ref> extends the optimization objective across the entire diffusion process, including gradient computations through the randomized diffusion denoising process. By default, Mist uses a predefined black and white patterned image as its target with the goal of producing chaotic patterns in generated images. Anti-DB (Anti-Dreambooth) <ref type="bibr" target="#b45">[49]</ref> is most similar to Mist, but modifies the optimization objective to specifically target Dreambooth <ref type="bibr" target="#b34">[38]</ref> textto-image models. There, they find that training surrogate models alongside computing image perturbations results in stronger protection, though it incurs additional computation time. Glaze <ref type="bibr" target="#b39">[43]</ref> introduces input-specific target images by performing style transfer on the input image using a contrasting artistic style. This method preserves the overall content of the input image, while changing mainly the style, which the authors argue leads to more robust protection. Glaze then attacks the image encoder of a diffusion model as detailed above.</p><p>These protection tools have been positively received by the artist community, with Glaze having been downloaded at least 2.3 million times <ref type="bibr" target="#b18">[20]</ref>. While these systems are typically too computationally expensive for artists, efforts have been made to improve accessibility <ref type="bibr">[35,</ref><ref type="bibr" target="#b46">50]</ref>. Since these systems are free and increasingly available, images may no longer be a viable data source for attackers to access artwork for fine-tuning text-to-image models.</p><p>Video protection, on the other hand, has yet to be explored. Computation time per image is already limiting for many artists, and applying the same algorithms to all frames would be many times more costly. Yet, videos represent a significant source of data, incentivizing attackers to explore publicly available video art, such as short animation, movies or video game trailers etc.. Until recently, most style mimicry models are trained on still images. This is no longer the case today because 1) artists are increasingly more reluctant to post their work on the Internet <ref type="bibr" target="#b13">[15]</ref>, 2) existing defenses ( §2.1) are effective at protecting still images against mimicry, 3) video frames offer a significantly more diverse range of images compared to still images. Video content is a promising source for mimicry.</p><p>Video content (e.g., game trailers, anime, short videos, documentary, ads) provides promising alternative data sources for two reasons. First, video contents often offer a more diverse (3D) shots of an object or style, e.g., rotating shot of an object, panning across a scene. These diverse viewpoints enable models to better learn the content during the training process <ref type="bibr" target="#b44">[48]</ref>. Second, there are significantly more video frames compared to still images and many of the videos contain unique art styles/characters. The entire Internet produces around 3.2 billions still images daily <ref type="bibr" target="#b0">[1]</ref>, while YouTube alone sees over 271,000 hours of videos (i.e., around 29 billions video frames) uploaded per day. Specifically, gaming companies and animation studios often use short videos as a way to promote new games, characters, and movies. Movie clip compilations and trailers are readily available on YouTube <ref type="bibr" target="#b10">[11]</ref>, while video game companies like Riot and Mihoyo frequently post teasers and trailers showcasing new playable content, or highly anticipated characters <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b17">19]</ref>. These videos are filled with original artwork, and contain image frames that are prime targets for style mimicry. Video-based mimicry in the real-world. Style mimicry using video content has already occurred in the real-world. Bad actors have created and distributed software that generates high quality text-to-image datasets from online videos. One GitHub tool <ref type="bibr">[14]</ref> automates the process of downloading (e.g., torrenting) Japanese Anime episodes and extracting high quality frames of desired characters. Another option <ref type="bibr" target="#b26">[28]</ref> advertised on CivitAI does the same, with the additional capability of scraping frames from screencap websites such as FanCaps <ref type="bibr" target="#b5">[6]</ref>. These tools demonstrate that there already exists sophisticated technology aimed at creating text-toimage datasets from original video content.</p><p>We also provide our own examples of this threat. We download and extract high quality frames from YouTube videos and train style mimicry models on them (Figure <ref type="figure" target="#fig_0">1</ref>). Figure <ref type="figure" target="#fig_1">2</ref> shows some examples of extracted video frames as well as mimicry results generated by the style mimicry model. We include human evaluation of the success of these style mimicry images later using user studies with both artists and the general public in §6.</p><p>While there has been recent developments in text-to-video <ref type="bibr" target="#b9">[10]</ref> and image-to-video models <ref type="bibr" target="#b7">[8]</ref>, we leave them as a topic for future work, and focus solely on text-to-image mimicry where the source of data originates from video content.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">STYLE MIMICRY ATTACKS ON EXTRACTED VIDEO FRAMES</head><p>Our work considers a previously overlooked variant of the style mimicry attack, where an attacker extracts individual frames from a video to build image-based style mimicry models. Next, we introduce the threat model and consider the limitations of a baseline defense that applies existing image-based protection tools to individual video frames.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Threat Model</head><p>Artist/Video creator. Artists want to share their video content online while disallowing unauthorized mimicry using these video frames. Artists seeks to protect their video by applying small pixel perturbations on the video frames. Following the assumptions made by existing defenses against style mimicry <ref type="bibr" target="#b39">[43]</ref>, we assume the artists:</p><p>• have access to moderate computing resources (e.g., consumergrade GPUs) commonly used for video rendering; • add perturbation to video frames before posting videos online;</p><p>• have access to some public feature extractor (e.g., open-source models such as Stable Diffusion).</p><p>Attacker. The attacker's goal is to build a text-to-image model that is able to generate images in the style of the victim artist. We assume the attacker • has access to videos from the victim and leverages frames from these videos for mimicry; • has significant computational power;</p><p>• has full access to pretrained, benign text-to-image base models.</p><p>Note that our work focuses on text-to-image mimicry, where the attacker's goal is to generate images. We leave text-to-video mimicry using video contents to future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Style Mimicry Leveraging Video Frames 3.3 A Naive Defense and Its Limitations</head><p>Given the existence of existing tools designed to disrupt art style mimicry <ref type="bibr" target="#b25">[27,</ref><ref type="bibr" target="#b39">43,</ref><ref type="bibr" target="#b45">49]</ref>, a straightforward solution to protect video imagery is to simply apply existing protection to each and every frame of a video. As discussed in §2, these defenses add highlyoptimized perturbations on each image (a video frame in our case), misleading the mimicry model to perceive each protected frame as an image with a completely different style.</p><p>Unfortunately, this "naive" application of anti-mimicry tools in the video context has multiple drawbacks, the most critical of which is vulnerability to a temporal-based adaptive countermeasure. Vulnerability to countermeasures based on temporal similarity. When applied on individual video frames without coordination, existing protection methods become vulnerable to advanced countermeasures that exploit visual similarity across consecutive video frames.</p><p>Existing anti-mimicry tools treat each input image independently, with a randomized component in their generation of perturbation targets for each image. That means even two runs on the same input image will likely output two different set of pixel changes. With this in mind, an adaptive mimicry attack could take several consecutive frames, whose original pixel values are highly similar, and use them against each other to try to cancel out the pixel changes made by the protection tools. An"averaged" or "smoothed" frame generated this way would have much weaker residue protective perturbations, and would provide a good estimate of the actual visual feature (i.e. style) carried by the original (unperturbed) video frames. An attacker can then use these frames to train a mimicry model. In §4, we provide a detailed study to validate and quantify this significant vulnerability. Other limitations: computation and video quality degradation. The naive application of protection tools leads to two other challenges. First, computing independent protection filters on each video frame is computationally very expensive. Existing protection tools (Glaze <ref type="bibr" target="#b39">[43]</ref>, Mist <ref type="bibr" target="#b25">[27]</ref> and Anti-DB <ref type="bibr" target="#b45">[49]</ref>) can takes up to 𝜏 = 1.5 minutes to protect a single frame for moderate GPUs. Protecting a 1 minute video at 30fps (1800 frames) would take 45 hours. Second, the protective pixel level perturbations are computed independently per frame and hard to detect on a still image. But when played in a video sequence, these perturbations cause noticeable flickering effects that degrade the video quality and viewer experience.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">AN ADAPTIVE MIMICRY ATTACK</head><p>In this section, we design, implement and evaluate an adaptive mimicry attack designed to bypass the naive protection method described in §3.3.</p><p>It is made possible by the fundamental temporal consistency inherent to all video content. Here, we propose Perturbation Removal Attacks (PRA) that leverage temporal consistency to remove protective perturbations on video frames, and present results measuring their efficacy using both automated metrics and human feedback.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Perturbation Removal</head><p>For naively protected video sequences, we develop an adaptive mimicry attack that uses perturbation removal methods (PRM) to recover images that closely approximate the original, unperturbed video frames. These are then used to successfully train an imagebased style mimicry model. As such, for any video sequence, a PRMs behaves like a frame extraction tool. "Combining" consecutive frames. PRMs remove protective perturbations by combining multiple consecutive video frames (that share high visual similarity) into a single frame. Intuitively, combining highly similar frames will generally preserve the common pixel values inherited from the original unprotected frames, while reducing or removing the pixel value changes made by protective tools. With this in mind, we consider three PRM approaches that employ different "combining" functions across video frames.</p><p>• Selective Pixel Averaging -This approach generates a combined image out of consecutive frames, where each pixel is the average of the corresponding pixel values across the set of frames. This pixel-level "averaging" function "smooths" out the protective perturbations. Pixel averaging can be limited to more static regions and avoid pixels that capture motion across the frames. • FILM -Frame Interpolation for Large Motion (FILM) <ref type="bibr" target="#b33">[37]</ref> is a neural network designed to generate temporally smooth videos from disjoint frames. We apply FILM to multiple perturbed frames from the same scene to reconstruct high quality images that closely resemble the original unperturbed frames, but don't retain perturbations from either input. • Linear Interpolation -Linear interpolation is a technique for generating intermediate data points between a set of known points. Like the other approaches, pixel-level linear interpolation across frames exploits lack of consistency between consecutive perturbations.</p><p>Implementing adaptive attacks. We implemented 3 adaptive mimicry attacks, each using one of the frame-aggregation approaches described above. In the rest of this section, we present detailed results on all 3 adaptive attacks. The key takeaway is that pixel averaging significantly outperforms the alternatives. For  Pixel Averaging approximates the original unprotected frame by averaging pixels across highly similar consecutive frames (see Figure <ref type="figure" target="#fig_3">3</ref>). Pixel level differences between consecutive frames come from two sources: 1) natural changes between video frames which we call movement, and 2) differences in pixel changes added by protective tools (perturbations). Protective tools seek to minimize visual impact, so the large majority of perturbation values are constrained within a specific value. Thus an attacker can examine two consecutive perturbed frames, and identify the source of each pixel difference by filtering using a simple threshold (𝜖 𝑝 ). A well chosen 𝜖 𝑝 will separate pixel differences due to movement (&gt; 𝜖 𝑝 ) from pixel differences from protective tools (&lt; 𝜖 𝑝 ). The attacker measures pixel differences (Δ 𝑝 ) between consecutive frames and only averages regions (0 &lt; Δ 𝑝 &lt; 𝜖 𝑝 ). In practice, 𝜖 𝑝 can easily be identified empirically as a transition point between two levels of region sizes. In our tests, we experimentally test pixel averaging across 𝑛 consecutive frames, and find the best results around 𝑛 = 5. We measure the quality of frames using CLIP Aesthetic predictor <ref type="bibr" target="#b38">[42]</ref> and perturbation removal using metrics described in the following section. We show detailed results of the tradeoff between perturbation removal vs. image quality in the appendix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Experimental Setup and Metrics</head><p>To validate the efficacy of multiple perturbation removal methods, we add naive protection to short scenes on an independent, perframe basis. We then test the adaptive mimicry attack by using each PRM to extract unprotected frames from each video scenes. We compare different PRMs by measure the amount of image level differences in the perturbations before vs. after our attack using several automated metrics. We also measure end-to-end success of the adaptive mimicry attack by training models on extracted frames, and conducting a user study to gather human feedback. Applying naive protection to all frames. We experiment on 5 diverse datasets containing realistic videos of scenery and human actions, artistic style videos, and video game style videos. We implement each of 3 protection tools, Mist, Anti-DB, and Glaze.</p><p>For each scene, we identify and extract scenes of highly similar frames, and apply "naive protection" by applying each of 3 protection tools to each frame in selected frames. We apply each PRM to the naively protected images to attempt to recover a good estimation of the original images. We then compare original, naively protected, and attacked naively protected images to each other. As we show below, pixel-averaging significantly outperforms FILM and linear interpolation in pixel level metrics.</p><p>Performing style mimicry. We perform style mimicry attacks under 3 "perturbation scenarios": training mimicry models on clean (unperturbed) frames, frames protected by "naive protection, " and frames extracted by adaptive attack following "naive protection." Due to high computation costs (multiple days per scene), we only compute end-end results for the Pixel Averaging attack (shown to be strongest in pixel level metrics above). For each perturbation scenario, we chose 30 scenes from a video, select (or extract) one image from each scene, and train mimicry models on this set. Further details on mimicry attack configurations are in §6. Evaluation metrics. We evaluate the strength of perturbation removal methods using pixel level metrics (Mean Pixel Difference and Latent 𝐿 2 Norm). We evaluate end-to-end results on style mimicry using human feedback (User Study). We briefly describe these metrics below, and give more details later in §6.</p><p>• Latent 𝐿 2 Norm. We employ the image encoder used in diffusion models to calculate image representations of perturbed and nonperturbed (original) frames, and then calculate the 𝐿 2 distance between them as a measure of proximity between two images. Thus, a successful perturbation removal would minimize the latent 𝐿 2 norm, while a robust system should maintain a high latent 𝐿 2 norm. • Mean Pixel-Difference. We measure differences between images at a pixel level, motivated by the 𝑙 𝑖𝑛𝑓 bounded pixel changes that all protection tools (Mist, Anti-DB, Glaze) use to limit visual artifacts. We define Mean Pixel Difference (MPD) as the average of all pixel differences between a perturbed image and clean image. Similar to the latent 𝐿 2 norm, a higher MPD signals higher protection. • Human feedback. We perform a user study to evaluate the success of adaptive mimicry attacks, by asking participants to look at images produced by a mimicry model, and compare it to original video frames. We ask participants to rate the success on a 5-level Likert scale (ranging from "not successful at all" to "very successful"). Following existing work, we define protection success rate (PSR) as the percent of participants who rated the style mimicry as "not very successful" or "Not successful at all. "</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Adaptive Mimicry Results</head><p>Next we present results of our experiments on the adaptive attack.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Naive Protection + adaptive attack</head><p>Original frames</p><p>Naive Protection</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Mimicry Images Trained on:</head><p>A) B)</p><p>Figure <ref type="figure">4</ref>: Visual examples of adaptive mimicry attack. Three rows of mimicry images generated by models trained on 1) original video frames, 2) video frames protected naively, and 3) video frames recovered after perturbation removal using pixel averaging.</p><p>Protection Tool Protected Pixel Avg FILM Interpolation Linear Interpolation Glaze 111.30 ± 12.94 90.04 ± 14.13 97.83 ± 13.73 96.16 ± 14.47 Mist 121.25 ± 9.48 107.10 ± 16.33 112.99 ± 14.36 113.03 ± 15.46 Anti-DB 124.86 ± 8.93 103.75 ± 17.70 110.29 ± 15.52 110.39 ± 16.42</p><p>Table 2: Mean Pixel Difference between original frames, protected frames, protected frames after perturbation removal.</p><p>Similarity of recovered frames to original frames. We compare latent 𝐿 2 norm between the original frames, the protected frames, and protected frames after protection removal. Table <ref type="table" target="#tab_0">1</ref> shows FILM to have minimal impact, and that Pixel averaging does the best to minimize loss for the recovered frame, suggesting that it is closer to the original frame in the feature space. We also compare mean pixel differences between the original frames, protected frames, and protected frames after protection removal. Table <ref type="table">2</ref> shows that again, pixel averaging method outperforms against all protection tools, and minimizes the pixel differences between the extracted frame and the original. Style mimicry attack on recovered images. Finally, we use a user study to evaluate the end-to-end success of the adaptive mimicry attack using pixel-averaging to overcome a per-frame application of protection tools. Table <ref type="table">3</ref> shows that users agree, the adaptive mimicry attack with pixel averaging basically produces mimicry results similar to mimicry on original unprotected video frames (PSR baseline value of 17.65 for unprotected video frames). Figure <ref type="figure">4</ref> shows samples of mimicry images from models trained on original frames, protected frames, and protected frames under adaptive attack. Clearly the adaptive attack is able to bypass protection and restore mimicry success.</p><p>These results validate our concerns, that a naive, frame by frame application of protection tools to videos is insufficient to prevent image mimicry. We need to extend these anti-mimicry tools to restore their protection in the video domain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">PROTECTING VIDEO IMAGERY WITH GIMBAL</head><p>We have identified that video imagery is susceptible to style mimicry attacks despite existing protection in image space ( §4). Although</p><p>Protection Tool Protected Protected + Pixel Averaging Glaze 70.59 ± 1.05 23.76 ± 1.14 Mist 62.90 ± 1.11 25.34 ± 1.14 Anti-DB 59.28 ± 1.18 22.62 ± 1.15</p><p>Table 3: Human feedback (Protection Success Rate) shows perturbation removal can significantly reduce effects of protection tools against style mimicry attacks. Note baseline PSR for original, unprotected frames is 17.65 ± 1.10.</p><p>current protection tools are effective for 2D art, they are no longer robust to adaptive adversaries in the video domain. In this section, we develop Gimbal, a framework that extends image-based protection tools to the video domain, resulting in improved robustness against adaptive adversaries as well as lower computation costs and improved video quality for protected videos.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Design intuition</head><p>Challenges of existing perturbation systems. Existing perturbation systems do not take into account the threat of an adversary gaining access to highly similar or even identical frames that are protected with completely independent perturbations. These systems independently optimize separate protection perturbations for each frame. This optimization process includes 1) generating a random target latent tensor, and 2) perturbing the original image by optimizing the image towards the selected target. The choice of target significantly impacts the pixel level perturbations on an image. Current systems choose targets by generating a latent representation of the original image, introducing noise, and then employing denoising autoencoders. This randomness (i.e., non-linearity) is desired for image-based protection, making it more challenging to reverse engineer or remove the perturbations. However, it also leads to each perturbation mask being entirely unique; disregarding the temporal redundancy present in the original frames. This in turn gives rise to effective countermeasures that remove the protection ( §4). Intuition. Our key intuition is that if we can create very similar perturbations on similar underlying frames, we can nullify the adversaries ability to exploit duplicity in frames. With this in mind, there are two simple options for perturbing a scene of similar frames. The first option is to re-use the same perturbation for the entire scene. Re-using the same perturbation is robust to pixel averaging attacks, but frame-specific protection weakens after small levels of movement in frames.</p><p>A second option is that if we can chose very similar targets (that guide the optimizing of perturbations) for similar frames, we can increase the consistency between perturbations. We find that reusing a single target tensor throughout a scene leads to very similar perturbations, but also makes frames less robust to style mimicry. This is because the perturbation optimization algorithm is not able to customize the embeddings of different frames to the same degree as it does for the original frame the target tensor was generated from. Thus our goal is to 1) divide videos into scenes that can share a universal target, 2) generate this "universal target" for each scene, and 3) optimize perturbations on subsequent frame to maximize protection against mimicry. 2. Generating and Optimizing Perturbation Masks Output: Protected Scenes style transfer Scene Partitioning partition frames into scenes of highly similar frames highly similar frames highly similar frames ... scene i F 1 δ 1 F 2 apply δ 1 to F 2 F i ... consecutive video frames: δ 2 apply δ i-1 to F i generate initial perturbation (δ 1 ) compute δ 1 by minimizing L 2 ((δ 1 + Φ(F 1 ), Φ( )) finetune perturbation towards F 1 F 2 F i F i-1 δ i-1 Perturbing Entire Scenes scene 1 scene 2 ... F i-1 δ i</p><p>Applying prior perturbations and optimizing on subsequent frames </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">System Design</head><p>Figure <ref type="figure" target="#fig_5">5</ref> describes our pipeline for generating robust, protected videos by partitioning them into scenes, generating a target image for each scene, and then optimizing the perturbations on each frame towards its respective target. Scene partitioning. We want to pinpoint sections of videos where using different perturbations might leave frames vulnerable to averaging attacks. We split videos into distinct scenes based on frame similarity, and considered existing scene partitioning algorithms and tools <ref type="bibr" target="#b8">[9]</ref>. Note that we require all frames in a scene to be similar enough to share a single "perturbation target." This is a stronger constraint than most prior definitions for a "scene," leading us to implement our own algorithm. We split scenes based on the mean pixel difference between two consecutive frames 𝐹 𝑖 and 𝐹 𝑖 -1 , defined by</p><formula xml:id="formula_2">𝑃𝑖𝑥𝑒𝑙 (𝐹 𝑖 , 𝐹 𝑖 -1 ) 𝑁 &lt; 𝜖 𝑠𝑐𝑒𝑛𝑒 (<label>2</label></formula><formula xml:id="formula_3">)</formula><p>where 𝑁 is the number of pixels per frame and 𝑃𝑖𝑥𝑒𝑙 (.) calculates the pixel difference between two frames, and 𝜖 𝑠𝑐𝑒𝑛𝑒 is a parameter for scene partition.</p><p>Generating a universal target. To create consistency between consecutive perturbations, we compute a single target image for all frames in a scene. This means that the target embedding needs to be close enough the embeddings of each frame in the scene, so that it can correctly guide each individual optimization. We test several approaches to generating the target tensor: 1) using the middle frame from the scene as base image, 2) generating image embeddings of each frame in the scene, calculating the centroid of these embeddings as base image, and 3) averaging all frames together as base image. We measure latent 𝐿 2 norm distance between the embedding of each unique frame in a scene and the target tensor, and find that averaging all frames in a scene leads to a target that is consistently the closest distance across all frames (Figure <ref type="figure" target="#fig_0">10</ref> in Appendix). Specifically, we compute a style transferred target image 𝑇 from the averaged image, like prior work <ref type="bibr" target="#b39">[43]</ref>. We select a video-specific prompt to guide the style transfer, for example: Japanese Anime videos use "impressionist painting by Van Gogh" as the target style. Generating and optimizing perturbation masks. We consider several factors when computing perturbations: maximizing protection, robustness against perturbation removal attacks, and finally, reducing computation costs. We balance re-using perturbations on subsequent frames which enhances robustness against removal attacks with optimizing or recomputing perturbations which maintains high protection levels against mimicry attacks. Protection success is achieved by reducing loss between a perturbed image and target image. We develop our algorithm for perturbing a scene as follows:</p><p>• Given the current scene and its corresponding 𝑀 frames {𝐹 𝑖 } 𝑀 𝑖=1 , compute the target frame 𝑇 (described above).</p><p>• For the first frame 𝐹 1 , compute an image-based perturbation 𝛿 𝑖 from scratch, optimizing towards the target frame 𝑇 , as defined by eq. ( <ref type="formula" target="#formula_0">1</ref>). • For each subsequent frame 𝑖 (𝑖 = 2..𝑀), first compute</p><formula xml:id="formula_4">𝑑 𝑖 = |𝐿 2 (Φ(𝐹 𝑖 + 𝛿 𝑖 -1 ), Φ(𝑇 )) -𝐿 2 (Φ(𝐹 𝑖 -1 + 𝛿 𝑖 -1 ), Φ(𝑇 ))| (3)</formula><p>where Φ(.) is the feature extractor used to convert an image into a latent embedding, 𝐿 2 is the L2 distance between the two embeddings. Compute 𝛿 𝑖 , the perturbation for 𝐹 𝑖 as follows:</p><p>• 𝑑 𝑖 ≤ 𝜏 1 : reuse the previous frame's perturbation, i.e. 𝛿 𝑖 = 𝛿 𝑖 -1 ; • 𝜏 1 &lt; 𝑑 𝑖 ≤ 𝜏 2 : compute 𝛿 𝑖 by performing perturbation optimization towards 𝑇 starting from 𝛿 𝑖 -1 ; • 𝑑 𝑖 &gt; 𝜏 2 , compute 𝛿 𝑖 from scratch.</p><p>Here we note that because the perturbation is generated progressively using the same target image 𝑇 , the system is able to maintain high consistency between perturbations. Setting 𝜏 1 and 𝜏 2 . Our system applies two thresholds 𝜏 1 and 𝜏 2 to guide the perturbation computation. We use grid search to identify proper values that balance robustness and computational efficiency in all videos. In practice, content creators can perform a benchmark on their own videos to select thresholds that best balance their robustness and efficiency requirements. Further details on our grid search is located in the Appendix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EVALUATION</head><p>In this section, we evaluate Gimbal's ability to protect individual video frames from style mimicry. §6.1 describes our video datasets and experimental setup. §6.2 introduces our metrics for evaluation.</p><p>§6.3-6.5 present results on Gimbal's protection and efficiency. Due to the subjective nature of interpreting successful style mimicry and visual nature of videos, we evaluate protection using both automated metrics from existing work, as well as visual judgement in a user study. Summary of results. Naive perturbations protect videos against style mimicry attempts 64.3% of the time according to surveyed users. However, perturbation removal attacks on naive perturbations successfully recover video style, causing protection rate to drop to 23.8% (compared to completely unprotected videos at 17.7%).</p><p>Gimbal is able to maintain protection even against removal attacks, restoring protection against style mimicry attempts to 64.5%. We verify that Gimbal is able to preserve image perturbations across consecutive image frames on a diverse set of videos genres and types, and is robust against our averaging attack introduced in §4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Experimental Setup</head><p>Video datasets. We evaluate the effectiveness of Gimbal on five diverse datasets, covering different animations, as well as human actions and scenery. On average, each video contains 6289 total frames. Our experiments conducted on YouTube videos are for research purposes only, and trained models are deleted at the conclusion of the study <ref type="bibr">[33]</ref>.</p><p>(1) Video Games: 20 randomly selected YouTube videos from a single channel showcasing in-game content of different video games, ranging from 2 to 6 minutes long. We include three unique animation styles, Video Game (3D rigs <ref type="bibr" target="#b37">[41]</ref>), Japanese Anime (hand drawn <ref type="bibr" target="#b12">[13]</ref>), and Animated Movies (CGI <ref type="bibr" target="#b30">[32]</ref>). The remaining two video datasets are selected to cover the other types of video imagery, including real human presence and photography/aerial footage. As a preprocessing step, we maintain consistent quality among all videos by center cropping videos to square and resizing to 512x512. Defense configuration. To showcase the generalizability of Gimbal to multiple image-based protection systems, we test Gimbal on three such algorithms: Mist, Anti-DB, and Glaze. We reimplement each defense using 𝑙 ∞ bounded projected gradient descent (PGD), and use a consistent targeted image generation method for all three <ref type="bibr" target="#b39">[43]</ref>. As is standard in image-based PGD methods, we constrain maximum absolute change in each image pixel to 0.07. Mimicry configuration. We base our style mimicry setup on existing work <ref type="bibr" target="#b25">[27,</ref><ref type="bibr" target="#b39">43,</ref><ref type="bibr" target="#b40">44,</ref><ref type="bibr" target="#b45">49]</ref> and adapt it to video frames:</p><p>(1) Split each video into partitions using our scene splitting algorithm from §5.</p><p>(2) Use the CLIP aesthetic model to identify the frame with the highest image quality score within a scene, and select the highest quality images based on scenes with the highest image quality score.</p><p>We find that all datasets could successfully train style mimicry models with 30 images, except for Animated Movies, which required 60. Here, we can apply the pixel averaging adaptive mimicry attack, finetuning on 80% of extracted images and saving the remaining 20% for testing. We use Dreambooth to finetune a Stable Diffusion 2.1 model on the finetuning dataset for 1000 steps and learning rate of 1e-5. To generate matching synthetic images, we generate captions from testing images with BLIP <ref type="bibr" target="#b24">[26]</ref>, and query the finetuned model to create a set of style mimicked images.</p><p>We evaluate Gimbal across several combinations of our proposed defense system and style mimicry configurations. For each existing perturbation algorithm, we evaluate the efficacy when perturbed images are untouched, and when our image averaging attack is used. We evaluate the efficacy of Gimbal against style mimicry only when the image averaging attack is used. We also train a style mimicry model on every video where the frames are left untouched.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Evaluation Metrics</head><p>The two key contributions of Gimbal are robustness under potential adversary attack, and reduction in computation costs, which we will evaluate using the following metrics. Robustness. We measure robustness in two ways. The first two metrics capture how well image perturbations can withstand adversarial attack. The last two measure the impact that Gimbal has on the quality of images generated by style mimicry models.</p><p>• Latent 𝐿 2 Norm: We employ the image encoder used in diffusion models to calculate latent representations of perturbed and nonperturbed (original) frames, and then calculate the 𝐿 2 distance between them as a measurement for image closeness. For example, a successful averaging attack on consecutively perturbed frames would lead to low latent 𝐿 2 norm, while a robust system should maintain a high latent 𝐿 2 norm. In particular, this metric isolates how diffusion models capture image differences. • Mean Pixel Difference: We also measure the differences between images at a pixel level, motivated by the 𝑙 ∞ bounded pixel changes that all three of our defense algorithms are constrained by. Mean Pixel Difference (MPD) is model-agnostic, and defined as the average of all pixel differences between a perturbed image and original image. Similar to the latent 𝐿 2 norm, a higher MPD between perturbed and original frames signals higher protection. • CLIP-Genre Shift: We adapt a metric used in existing work <ref type="bibr" target="#b39">[43]</ref> to demonstrate the effectiveness of Gimbal at disrupting style mimicry. Intuitively, existing image perturbation algorithms are designed to cause diffusion models to learn the wrong artistic style. Thus, we can measure the success of Gimbal's protection by calculating the percentage of generated images in which a CLIP image classifier unsuccessfully predicts the ground-truth style from training images. A higher CLIP-based Genre Shift score equates to stronger protection, while the opposite equates to stronger style mimicry. However, it is a granular metric and its correlation to visual properties might be weak.</p><p>• Human-rated protection success rate (PSR): To accurately capture end-to-end visual properties, we perform two IRB-approved user studies (more details on participants in Appendix A.4) where participants look at images generated by mimicry models and rate if the style mimicry was successful. The first asks artist volunteers to rate performance on our two "Art" datasets: Anime and Video Games. The second asks general users to rate performance on all 5 datasets. For each video, we train 10 style mimicry models, matching our experiment configuration. For each mimicry model, we show participants 5 frames from the original video next to 5 frames generated by the mimicry model. Each participant is shown one example from each experiment configuration, randomly selected from the set of 80 videos (3 datasets x 20 videos + 2 datasets x 10 videos each).</p><p>We ask participants to compare original video frames to those generated by mimicry, and rate the success on a 5-point Likert scale (ranging from "Not successful at all" to "Very successful").</p><p>Following prior work, we define protection success rate as the percent of participants who rated how well generated images mimic original style as "Not very well" or "Not well at all. " We also show artists short 10 second clips of videos glazed naively and with Gimbal. Here, we ask how noticeable the perturbations are on a 5 point Likert scale ranging from "Very noticeable" to "Not noticeable at all. " We define Noticeability Rate (NR) as the % of users that think perturbations are "Noticeable" or "Very noticeable. "</p><p>Computation efficiency: Finally, we also measure the computation speed of Gimbal. Here, we only experiment on one image perturbation algorithm due to computational constraints. Glaze is chosen due to its balance of speed (fastest of the three) and strong robustness. For each video, we conduct our measurement on a single A100 GPU.</p><p>• Speedup Factor: We compute speedup factor as time taken to apply (naive) protection to every frame, divided by time taken to protect the video using Gimbal. Because of the compute time involved, we estimate full (naive) protection by estimating per frame protection time, scaled up by number of frames in the video. • Seconds per Frame: We also report the average time it takes to perturb each frame in a video. This provides a grounding metric that is not relative like speedup factor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Robustness against Pixel-Averaging Mimicry</head><p>Gimbal prevents style mimicry. We showed in §4 that pixelaveraging attacks can remove image protection by smoothing them out across similar frames. We begin by looking at the ability of pixel-averaging methods to extract frames similar to the original, as measured by pixel level metrics in Table <ref type="table">4</ref> and <ref type="table">5</ref>. For all protection tools, across each category of videos, we see that the pixel-averaging attack significantly reduces the distance between the protected frames compared to the originals, measured by both latent 𝐿 2 norm and MPD. More importantly, we see that that same pixel-averaging attack fail when applied to frames protected by Gimbal, and it actually increases the distances from the original.</p><p>Next, we turn our attention to the ability of adaptive mimicry attacks and their ability to produce accurate end-to-end mimicry   models. Table <ref type="table">6</ref> shows the results of our two user studies, involving both a population of artists and general users (participant details in Appendix A.4). While artists' views varied somewhat from general users across categories, all users consistently provided the same feedback, that pixel-averaging broke the protection provided by naive anti-mimicry tools, but Gimbal restored that protection (and in many cases increased protection higher than naive protection levels). Table <ref type="table">7</ref> quantified the same issue of end to end protection, but using the CLIP CLIP-Genre shift metric. Results are very consistent with those from user studies. Gimbal restored protection broken by pixel-averaging attack and in many cases, improved protection beyond the original naive levels.</p><p>Finally, Figure <ref type="figure" target="#fig_8">6</ref> shows some examples of images generated by style mimicry models under our experiment configurations. Impact of perturbation budget on robustness. In Figure <ref type="figure" target="#fig_9">7</ref>, we show that robustness under Gimbal increases with perturbation budget, quickly maxing out after 0.05. This follows the same trend we see in existing image-only perturbation algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Computational Costs and Video Quality</head><p>In §3.3, we identified two additional limitations of a naive application of anti-mimicry tools: high computation overhead and poor video quality (randomness across per-frame perturbations appear as flickering snow when viewed at regular speeds). Here, we show that Gimbal significantly improves on both the computation overhead of perturbing video frames, and increases video quality over naively protected videos.</p><p>Avg. Speedup Factor Avg. Seconds per Frame Video Game 7.87 ± 2.81 5.16 ± 2.13 Japanese Anime 4.16 ± 3.19 11.25 ± 4.55 Human Action 7.37 ± 4.34 7.84 ± 6.43  Gimbal addresses directly. In our user study, we show participants 10-second clips of protected videos from our three datasets. The first video is naively protected using our implementation of Glaze, and the second video is protected with Gimbal. Participants are asked to identify how visible the perturbations are in both videos. Table <ref type="table" target="#tab_8">9</ref> presents noticeability rate, showing artists are able to notice perturbations significantly more when videos are protected naively (70%) than with Gimbal (21%).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5">Impact of Video Types on Robustness and Efficiency</head><p>Beyond examining the efficacy of Gimbal on a variety of video genres, we also examine four aspects of videos creation/distribution irrespective to genre that real-world content creators are likely to deal with while posting videos online. We investigate the effects that framerate, movement between frames, duration of scenes, and compression, have on robustness and computation efficiency. We anticipate these as questions that video content creators are likely to ask with respect to the efficacy of Gimbal. In this section, we show that Gimbal's robustness holds steady across video types, while computational efficiency is the most prone to change.</p><p>FPS Here, we evaluate the change in robustness and computation efficiency of Gimbal when videos are encoded with a different number of frames per second (fps). We evaluate Gimbal with Glaze on three different framerates, 15fps, 30fps, and 60fps, and measure its performance on four videos from the Video Game Dataset. 30fps and 60fps are widely used in the video community <ref type="bibr" target="#b48">[52]</ref>, and we also include 15 to show the effects that much a slower framerate has on robustness and computation efficiency. Our results can be found in Table <ref type="table" target="#tab_9">10</ref>, which show that framerate does not have significant impact on robustness, but that increasing framerate from 15fps to 60fps increases speedup factor from 6x to 16x. Thus, we show that Gimbal's computation performance is at its worst with low framerate, but scales well when content creators choose to increase framerate in their videos.</p><p>Action within scenes Movement within videos is difficult to capture, but we use latent 𝐿 2 norm between two image latent representations as a good approximation. Intuitively, minor movement between frames should lead to minor changes in image latent representation. In this section, we investigate the effect that latent 𝐿 2 norm between consecutive frames in video scenes has on computation efficiency. We measure the latent 𝐿 2 norm between consecutive frames in a scene for every video in the Video Game dataset, and compare the median of the latent 𝐿 2 norm across scenes to the speedup factor Gimbal with Glaze provides. In Figure <ref type="figure" target="#fig_10">8</ref>, we show that there is a negative linear correlation between 𝐿 2 latent norm and speedup factor. Intuitively, videos with higher action within scenes are more likely to require additional optimization in order to better align image perturbations across fast changing frames. Finally, we also analyze the impact of scene duration (number of frames per scene) and video compression factor (bitrate of video) on robustness and speedup factor. We found that these factors have no observable impact.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">SCENE SPLITTING ADAPTIVE ATTACK</head><p>Gimbal removes uncontrolled randomness in perturbations between similar frames, thereby disabling adaptive attacks that leverage cross frame pixel correlations. However, does its own design give rise to new countermeasures? We carefully considered this question, and discuss what we consider the strongest possible countermeasure to Gimbal. We describe the potential countermeasure and evaluate its efficacy against Gimbal.</p><p>The intuition for the countermeasure is to manipulate the scene identification process to force a scene break between highly similar frames. If this can be achieved, then the attacker could obtain two consecutive (and similar) frames that have been perturbed towards different targets. They could then apply a version of the pixelaveraging attack to restore the original, unprotected frames. We call this the scene-splitting attack, and assume a powerful attacker who can somehow force Gimbal to insert a scene break in the middle of a sequence of similar frames.</p><p>The scene splitting attack. We simulate a strong adaptive attack by dividing a single scene from a video into two subscenes, Scene 𝑆 1 and 𝑆 2 each containing 𝑀 frames. We use each subscene (Scene 𝑖 ) to generate a target tensor 𝑇 𝑖 with the aim of maximizing distance between target tensors, which should maximize the difference between perturbations generated from these targets. Now that we have obtained 𝑇 1 ,𝑇 2 , we apply Gimbal to perturb the two consecutive frames around the bad scene split. Subsequently, we perform a pixel averaging attack on these two perturbed frames, following the implementation detailed in §4. We test our adaptive attack on 20 videos from the Japanese Anime and Video Game datasets (10 videos from each dataset). We choose these two datasets because they are best aligned with current threats as explained in §1. We limit ourselves to only 10 videos from each category because of the computation time involved. Gimbal is robust to scene-splitting attack. Tables <ref type="table" target="#tab_11">11</ref> and <ref type="table" target="#tab_0">12</ref> show results that quantify the image-level difference between the original frames and the frames produced by the scene-splitting attack. They show that Gimbal is robust to the scene-splitting attack combined with pixel averaging attacks attempting to recover original frames. There is only a minimal decrease in 𝐿 2 norm and 𝑀𝑃𝐷 value when Gimbal is applied to videos under the new Adaptive Scene-Splitting Attack. In Figure <ref type="figure" target="#fig_11">9</ref>, we further verify that style mimicry using a combination of scene-splitting and pixelaveraging is still unsuccessful, through both visual examples of generated images and associated CLIP-genre shift scores, which remain unchanged under the scene splitting attack. Why does the attack fail? The failure of the scene-splitting attack makes sense, once we consider its limitations. Regardless of where the attacker forces a new scene break, frames inside the two new scenes (𝑆 1 and 𝑆 2 ) are bounded in their maximum difference</p><p>Naive Gimbal + Adaptive Attack Gimbal + Adaptive Scene-Splitting Attack Video Game 405.38 ± 19.43 421.21 ± 25.52 394.80 ± 25.16 Japanese Anime 396.76 ± 19.05 406.43 ± 24.07 387.06 ± 23.98 Table 12: MPD between original and perturbed frames across Video Games and Japanese Anime datasets. Demonstrates Scene-Splitting Adaptive Attack is not able to significantly reduce protection Gimbal offers.</p><p>from each other. Thus the two source frames for 𝑆 1 and 𝑆 2 (each computed as an average of frames in the scene) is also bounded in their dissimilarity. Thus, it is likely their resulting target tensors, and consequently the perturbations generated from them, are also small. This intuition holds even if the attacker could break a single long scene into several scenes of their choosing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">DISCUSSION AND LIMITATIONS</head><p>Our work provides a first step to addressing the rising challenge of style mimicry through training data extracted from video imagery. However, we note that this work still has significant limitations. First, we note that our work primarily targets and addresses the pixel-averaging adaptive attack. Given time, it is entirely possible for new distinct adaptive attacks to arise in the video mimicry space that Gimbal is not designed to mitigate. Similarly, it is also possible that effective countermeasures will be identified which target Gimbal itself beyond the scene-splitting attack. Second, while Gimbal reduces computation costs significantly over a naive application of anti-mimicry tools to each frame, the resulting computation is still quite significant, and likely remains out of reach for smaller video or animation creators. Finally, it is possible that image mimicry attacks might be supplanted altogether by some form of video mimicry attack in the future. Such risks and potential mitigation methods might become more clear as we learn more about generative video models and their training process.       loss <ref type="bibr" target="#b16">[18]</ref> to fill in the gap between two or more images. We implement their code to generate a single interpolated image between two images separated five frames apart. FILM is designed to handle both large and small motion, thus we find that the distance between frames does not impact the success of this removal attack. Simple Linear Interpolation We apply a simple linear interpolation function to generate a new image by smoothly blending the pixel values of two input images. We chose an interpolation factor 𝛼 = 0.5 to give equal weight to both images. Similar to our existing perturbation removal attacks, we perform simple linear interpolation between two images 5 frames apart.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3 Number of Images to use in Average Attack</head><p>Figures 13-15 plot the robustness and quality of protected images as a function of the number of consecutive frames used by our selective pixel averaging attack. Image quality begins to degrade when more than 3-5 consecutive frames are used for selective pixel averaging, with diminishing returns on recovering the correct artist style. Thus, we fix the number of averaged frames to 5 throughout our evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.4 User Study Detailed Description</head><p>Ethics We conduct two IRB-approved user studies. The first study, released on Twitter, involved 305 volunteers from the art community who rated the effectiveness of Gimbal compared to naive perturbations in protecting videos against style mimicry attempts. We only presented style-mimicked images from the Video Game and Japanese Anime datasets, chosen due to their relevance to current threats faced by video creators as discussed in §1. These datasets align with art content that existing image protection systems (Glaze, Mist, AntiDB <ref type="bibr" target="#b25">[27,</ref><ref type="bibr" target="#b39">43,</ref><ref type="bibr" target="#b45">49]</ref>) are designed to safeguard.</p><p>The second study, conducted on Prolific, involved 220 participants who were presented with style-mimicked images from videos across all 5 datasets. They were compensated at $12 per hour and</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Style mimicry scenario demonstrating pipeline for adversaries to finetune a diffusion model on video frames</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Style mimicry on clean video frames successfully mimics style of original video.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Averaging pixel values across highly similar consecutive frames successfully degrades the randomized protection pixel shifts across frames and largely restores the original unprotected frame.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Gimbal partitions videos into scenes by measuring average pixel difference. Each scene is perturbed using a two-part process: 1) A target image (𝑇 ) is computed by averaging all frames and style to a 'target style' 2) Perturbations are iteratively applied and optimized by minimizing latent 𝐿 2 norm between 𝑇 and the perturbed frame.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>( 2 ) 5 )</head><label>25</label><figDesc>Human Actions: 20 randomly selected untrimmed videos of human actions from the THUMOS-15 training dataset originally designed for action classification<ref type="bibr" target="#b21">[23]</ref>, ranging from 1 to 4 minutes long.(3) Japanese Anime: 20 randomly selected YouTube videos from different channels of Japanese animated movies and tv-shows, ranging from 1 to 5 minutes long. (4) Animated Movies: 10 randomly selected compilations of animated (Disney, Pixar, Sony) movie clips, ranging from 5 to 13 minutes long. (Nature and Wildlife: 10 randomly selected YouTube videos of animals and scenery in the wild, shot in a documentary format. Original videos are 30-60 minutes long, we clip each video to the first 2 minutes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Some visual examples of style mimicry on Gimbal showing it is robust to pixel averaging attack.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Average robustness (CLIP-Genre Shift) increases as 𝑙 ∞ perturbation budget increases on 4 Video Game videos. For comparison, mimicry on original frames produces CLIP-Genre Shift of 0.44.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Speedup factor decreases as movement increases between frames (latent 𝐿 2 norm) on all Video Game videos.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Visual examples of mimicry attempts on Clean frames and frames protected by Gimbal across the standard Adaptive Attack and the Scene-Splitting Adaptive Attack. CLIP-Genre Shift score demonstrates robust protection against Mimicry attacks under both adaptive attack scenarios.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 11 :</head><label>11</label><figDesc>Figure11: Gridsearch of Gimbal's two threshold parameters 𝜏 1 , 𝜏 2 with respect to the latent 𝐿 2 norm between perturbed frames and the target it is optimized towards. A lower latent 𝐿 2 norm equates to better optimized perturbation and stronger robust protection. Decreasing both values leads to higher number of full optimizations, and stronger robustness.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: Gridsearch of Gimbal's two threshold parameters 𝜏 1 , 𝜏 2 with respect to the computation speedup. Increasing both values leads to less number of full optimizations, and more significant speedup.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 13 :</head><label>13</label><figDesc>Figure 13: Average image quality (CLIP Aesthetic score) increases initially as the number of consecutively frames used for averaging attack increases, but decreases after too many frames are averaged for both Video Game and Japanese Anime videos.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 14 :</head><label>14</label><figDesc>Figure 14: Average robustness (CLIP-Genre Shift) decreases as the number of consecutively frames used for averaging attack increases and stagnates as more frames are used for both Video Game and Japanese Anime videos.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Figure 15 :</head><label>15</label><figDesc>Figure 15: Average latent 𝐿 2 norm between perturbed frames and clean frames initially decreases as the number of consecutive frames used for averaging attack increases. The benefit stagnates for Video Game videos, but loses effectiveness for Japanese Anime.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>± 25.17 295.55 ± 52.02 391.51 ± 62.86 355.58 ± 44.38 Mist 474.87 ± 42.14 334.62 ± 56.72 437.78 ± 64.89 411.27 ± 51.89 Anti-DB 405.17 ± 37.55 283.41 ± 58.99 378.43 ± 67.34 352.10 ± 52.30Latent 𝐿 2 Norm between original frames, protected frames and protected frames after perturbation removal.</figDesc><table><row><cell>Protection Tool</cell><cell>Protected</cell><cell>Pixel Avg</cell><cell>FILM Interpolation Linear Interpolation</cell></row><row><cell>Glaze</cell><cell>390.05</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 8 :</head><label>8</label><figDesc>Gimbal with Glaze enables significant computation speedup factor across all Video Game, Japanese Anime, and Human action videos when compared to naive video protection. For comparison, naive video protection takes on average 35 seconds per frame on a single A100 GPU.</figDesc><table><row><cell></cell><cell cols="2">% of Users Notice Perturbations</cell></row><row><cell></cell><cell cols="2">Naive Glaze Gimbal w/ Glaze</cell></row><row><cell>Video Game</cell><cell>70.30 ± 1.03</cell><cell>21.29 ± 1.06</cell></row><row><cell cols="2">Japanese Anime 48.73 ± 1.16</cell><cell>18.27 ± 1.0</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 9 :</head><label>9</label><figDesc>Our user study shows that the percentage of users who notice perturbations generated by Gimbal is significantly less than those who notice perturbations in naive video protection. (Tests implemented using Glaze).</figDesc><table><row><cell></cell><cell cols="2">CLIP-Genre Shift Speedup Factor</cell></row><row><cell>15fps</cell><cell>0.97 ± 0.04</cell><cell>6.11 ± 1.90</cell></row><row><cell>30fps</cell><cell>0.98 ± 0.02</cell><cell>9.57 ± 2.47</cell></row><row><cell>60fps</cell><cell>1.00 ± 0.00</cell><cell>15.96 ± 4.06</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 10 :</head><label>10</label><figDesc>Different framerates do not impact protection robustness (CLIP-Genre Shift), but higher framerates lead to higher speedup factor under Gimbal. (4 Video Game videos.)</figDesc><table><row><cell></cell><cell>15</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Speedup Factor</cell><cell>3 6 9 12</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>50</cell><cell>65</cell><cell>80</cell><cell>95</cell><cell>110</cell></row><row><cell></cell><cell cols="5">Median Latent L 2 Norm Between Consecutive frames</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>Table 11 :</head><label>11</label><figDesc>Latent 𝐿 2 norm between original and perturbed frames across Video Games and Japanese Anime datasets. Demonstrates Scene-Splitting Adaptive Attack is not able to significantly reduce protection Gimbal offers.</figDesc><table><row><cell></cell><cell>Naive</cell><cell>Gimbal + Adaptive Attack</cell><cell>Gimbal + Adaptive Scene-Splitting Attack</cell></row><row><cell>Video Game</cell><cell>111.58 ± 12.38</cell><cell>107.42 ± 13.47</cell><cell>100.28 ± 11.81</cell></row><row><cell cols="2">Japanese Anime 112.66 ± 11.05</cell><cell>108.57 ± 12.59</cell><cell>102.02 ± 11.43</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>https://huggingface.co/Totsukawaii/RiotDiffusion</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>https://huggingface.co/ItsJayQz/Valorant_Diffusion</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>https://civitai.com/models/270789/lucasarts-games-style</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>https://civitai.com/models/382550/kasumi-dead-or-alive-sdxl-lora-pony-diffusion</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p>https://civitai.com/models/42622/danielle-panabaker-the-flash-tv-show</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>https://huggingface.co/Madhul/Rick_and_Morty_Stable_Diffusion_LORAS</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_6"><p>https://civitai.com/models/160262/katniss-everdeen-hunger-games</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_7"><p>https://civitai.com/models/105883/ruby-roundhouse-from-jumanji-movies-karengillan</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_8"><p>https://tensor.art/models/662818547598142799</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Gimbal reduces computation overhead. We measure the computation efficiency of Gimbal on three of our datasets. As shown in Table <ref type="table">8</ref>, the Video Game and Human Actions datasets achieve 7-8x speedup factor when using Gimbal over its naive video protection, while the Japanese Anime dataset achieves just over 4x speedup factor. Gimbal would improve computation efficiency of a 5 minute 30 fps video from 88 to 11 hours. This magnitude of speedup factor greatly improves the usability of applying image-based perturbations to videos, and makes video protection more reasonable for video creators, particularly smaller or independent creator groups.</p><p>The speedup factor is lowest for Japanese anime videos, likely due to the high movement across frames. In practice, we can further improve the speedup by changing our system parameters, e.g., changing second threshold 𝜏 2 from 0.45 to 0.8, which increases speedup factor of the four slowest Japanese Anime videos from 2.12 to 3.90 with a small tradeoff in robustness (more details in Appendix A. <ref type="bibr" target="#b2">3</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>and A.7).</head><p>Gimbal is less visually disruptive/noticeable. Even though image-based perturbation methods are designed to be imperceptible, applying them naively to videos leads to protected videos that flicker and are noticeably grainy. This is a result of perturbation masks changing drastically from frame to frame, a problem that</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A APPENDIX A.1 Detailed Analysis on Universal Target Generation</head><p>The goal of a universal target is to be sufficiently close in latent image space for each frame to optimize towards. In Figure <ref type="figure">10</ref>, we plot the latent 𝐿 2 norm between each frame in a scene to a universal target generated by three different methods. We find that simple pixel averaging generates universal target images that are consistently closer to all frames in a scene, and thus adopt it for our evaluation section. A.2 Detailed Perturbation Removal Attacks FILM Frame Interpolation for Large Motion (FILM) <ref type="bibr" target="#b33">[37]</ref> is a neural network designed to generate slow motion videos from two "near duplicate" images. FILM adapts a multi-scale feature extractor to estimate scale-agnostic motion, allowing the synthesis of high quality intermediate frames. While there are many SOTA film interpolation softwares available <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b20">22,</ref><ref type="bibr" target="#b28">30]</ref>, these focus largely on estimating motion and optical flow. In contrast, FILM prioritizes generating sharp, high quality videos by using Gram matrix filtered for English-Speaking participants in the US, over the age of 18 and with over 95% approval rating on Prolific. All videos from these datasets are publicly available on YouTube, and we strictly use them for research purposes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.5 Choosing System Parameters</head><p>This is a detailed explanation on the selection of two threshold parameters introduced in §5.2. We perform a grid search on 25 combinations of Gimbal's two threshold parameters using Glaze as the image perturbation algorithm, and measure the average robustness and speedup that each achieves. In Figures <ref type="figure">12</ref> and <ref type="figure">12</ref>, we find that there is an intuitive reverse tradeoff between robustness and computation efficiency. Decreasing both parameters leads to more computations of perturbations from scratch, which benefits robustness but incurs slower speedup. Assuming that video content creators must balance these two objectives, we choose the middle parameters, 𝜏 1 = 0.06 and 𝜏 2 = 0.45, to use in our evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.6 Averaging Images Degrades Mimicry Quality</head><p>Here, we investigate the impact that our averaging attack on style mimicry models trained on clean images. We take clean unperturbed frames of four videos from the Japanese Anime dataset and perform our averaging attack on the 5 frames surrounding each high quality frame used in style mimicry. Our results show that the average attack on clean images causes CLIP-Genre Shift to increase from 0.15 to 0.19. This suggest that our average attacks slightly weakens style mimicry, which is supported by natural blurring caused by movement and inter-frame changes. Additionally, this result helps explain why averaging attack on Gimbal has higher CLIP-Genre Shift scores when compared to naive perturbation methods. Gimbal successfully protects against averaging attack, but style mimicry is also compounded by the natural degradation of image quality when averaging attack is used.</p><p>A. </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">3.2 billion images and 720,000 hours of video are shared online daily. Can you sort real from fake?</title>
		<author>
			<persName><forename type="first">Joel</forename><surname>Abrams</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note>theconversation.com</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">The Alt-Right Manipulated My Comic. Then A.I. Claimed It</title>
		<author>
			<persName><forename type="first">Sarah</forename><surname>Andersen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2022">2022</date>
			<pubPlace>New York Times</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName><forename type="first">Andrew</forename><surname>Reiner</surname></persName>
		</author>
		<ptr target="https://www.gameinformer.com/2022/07/29/genshin-impact-reveals-new-characters-and-region-in-teaser-trailer" />
		<title level="m">Genshin Impact Reveals New Characters And Region In Teaser Trailer</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Generative AI Systems: Impacts on Artists &amp; Creators and Related Gaps in the Artificial Intelligence and Data Act</title>
		<author>
			<persName><forename type="first">Blair</forename><surname>Attard-Frost</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SSRN</title>
		<imprint>
			<biblScope unit="volume">4468637</biblScope>
			<date type="published" when="2023">2023. 2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Invasive Diffusion: How one unwilling illustrator found herself turned into an AI model</title>
		<author>
			<persName><forename type="first">Andy</forename><surname>Baio</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName><forename type="first">Banning</forename><surname>Media</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Llc</forename></persName>
		</author>
		<ptr target="https://fancaps.net/" />
		<title level="m">FanCaps.net Movie, TV, Anime Images, Screencaps, Screenshots, Wallpapers</title>
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Depth-aware video frame interpolation</title>
		<author>
			<persName><forename type="first">Wenbo</forename><surname>Bao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wei-Sheng</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chao</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaoyun</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhiyong</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ming-Hsuan</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of CVPR</title>
		<meeting>of CVPR</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Stable video diffusion: Scaling latent video diffusion models to large datasets</title>
		<author>
			<persName><forename type="first">Andreas</forename><surname>Blattmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tim</forename><surname>Dockhorn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sumith</forename><surname>Kulal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><surname>Mendelevitch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Maciej</forename><surname>Kilian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dominik</forename><surname>Lorenz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yam</forename><surname>Levi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zion</forename><surname>English</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vikram</forename><surname>Voleti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Adam</forename><surname>Letts</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2311.15127</idno>
		<imprint>
			<date type="published" when="2023">2023. 2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Brandon</forename><surname>Castellano</surname></persName>
		</author>
		<ptr target="https://www.scenedetect.com/" />
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Video generation models as world simulators</title>
		<author>
			<persName><forename type="first">Tim</forename><surname>Brooks</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bill</forename><surname>Peebles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Connor</forename><surname>Holmes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Will</forename><surname>Depue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yufei</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Li</forename><surname>Jing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Schnurr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joe</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Troy</forename><surname>Luhman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Luhman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Clarence</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ricky</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aditya</forename><surname>Ramesh</surname></persName>
		</author>
		<ptr target="https://openai.com/research/video-generation-models-as-world-simulators" />
		<imprint>
			<date type="published" when="2024">2024. 2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName><forename type="first">Chad</forename><surname>Kennerk</surname></persName>
		</author>
		<ptr target="https://www.boxofficepro.com/new-trailers-deadpool-wolverine-blink-twice-i-saw-the-tv-glow-and-more/" />
		<title level="m">New Trailers: DEADPOOL &amp; WOLVERINE, BLINK TWICE, I SAW THE TV GLOW, and More</title>
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title/>
		<author>
			<persName><surname>Civitai</surname></persName>
		</author>
		<ptr target="https://civitai.com" />
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">FEATURE: How Anime Gets Animated</title>
		<author>
			<persName><surname>Crunchyroll</surname></persName>
		</author>
		<ptr target="https://www.crunchyroll.com/news/deep-dives/2023/3/22/feature-how-anime-gets-animated" />
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Artists stage mass protest against AI-generated artwork on ArtStation</title>
		<author>
			<persName><forename type="first">Benj</forename><surname>Edwards</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2022">2022</date>
			<publisher>Ars Technica</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">How to Use DreamBooth to Fine-Tune Stable Diffusion (Colab)</title>
		<ptr target="https://bytexd.com/how-to-use-dreambooth-to-fine-tune-stable-diffusion-colab/" />
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">An image is worth one word: Personalizing text-to-image generation using textual inversion</title>
		<author>
			<persName><forename type="first">Rinon</forename><surname>Gal</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2208.01618</idno>
		<imprint>
			<date type="published" when="2022">2022. 2022</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Image style transfer using convolutional neural networks</title>
		<author>
			<persName><forename type="first">Leon</forename><forename type="middle">A</forename><surname>Gatys</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><forename type="middle">S</forename><surname>Ecker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matthias</forename><surname>Bethge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of CVPR</title>
		<meeting>of CVPR</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="2414" to="2423" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName><forename type="first">Gavin</forename><surname>Sheehan</surname></persName>
		</author>
		<ptr target="https://bleedingcool.com/games/league-of-legends-reveals-all-new-artistic-hero-named-hwei/" />
		<title level="m">League Of Legends Reveals All-New Artistic Hero Named Hwei</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Glaze</forename><surname>Website</surname></persName>
		</author>
		<ptr target="https://glaze.cs.uchicago.edu/aboutus.html" />
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">Jeff</forename><surname>Hayward</surname></persName>
		</author>
		<ptr target="https://medium.com/counterarts/artists-photographers-your-low-res-images-arent-safe" />
		<title level="m">Artists/Photographers: Your Low-Res Images Aren&apos;t Safe From AI</title>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page">63</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Real-time intermediate flow estimation for video frame interpolation</title>
		<author>
			<persName><forename type="first">Zhewei</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tianyuan</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wen</forename><surname>Heng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Boxin</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shuchang</forename><surname>Zhou</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2022">2022</date>
			<publisher>Springer</publisher>
			<biblScope unit="page" from="624" to="642" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The THUMOS challenge on action recognition for videos &quot;in the wild</title>
		<author>
			<persName><forename type="first">Haroon</forename><surname>Idrees</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of CVIU</title>
		<meeting>of CVIU</meeting>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Johnathan Flowers, and Timnit Gebru. 2023. AI Art and its Impact on Artists</title>
		<author>
			<persName><forename type="first">H</forename><surname>Harry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lauren</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jessica</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mehtab</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abhishek</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Deja</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alex</forename><surname>Workman</surname></persName>
		</author>
		<author>
			<persName><surname>Hanna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of AIES</title>
		<meeting>of AIES</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title/>
		<author>
			<persName><surname>Lexica</surname></persName>
		</author>
		<ptr target="https://lexica.art/" />
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Blip: Bootstrapping language-image pre-training for unified vision-language understanding and generation</title>
		<author>
			<persName><forename type="first">Junnan</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dongxu</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Caiming</forename><surname>Xiong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Hoi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICML</title>
		<meeting>of ICML</meeting>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Adversarial example does good: Preventing painting imitation from diffusion models via adversarial examples</title>
		<author>
			<persName><forename type="first">Chumeng</forename><surname>Liang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICML</title>
		<meeting>of ICML</meeting>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Anime LoRA Dataset Automaker using original screencaps, face detection and similarity models</title>
		<ptr target="https://civitai.com/articles/1746/anime-lora-dataset-automaker-using-original-screencaps-face-detection-and-similarity-models" />
	</analytic>
	<monogr>
		<title level="m">Maximax67</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName><forename type="first">Brendan</forename><forename type="middle">P</forename><surname>Murphy</surname></persName>
		</author>
		<title level="m">Is Lensa AI Stealing From Human Art? An Expert Explains The Controversy</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
	<note>ScienceAlert</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Softmax splatting for video frame interpolation</title>
		<author>
			<persName><forename type="first">Simon</forename><surname>Niklaus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Feng</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of CVPR</title>
		<meeting>of CVPR</meeting>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="5437" to="5446" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<author>
			<persName><surname>Novelai</surname></persName>
		</author>
		<ptr target="https://novelai.net/updates" />
		<title level="m">NovelAI changelog</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">How is an Animated Film Produced?</title>
		<ptr target="https://usv.edu/blog/how-is-an-animated-film-produced/" />
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
		<respStmt>
			<orgName>University of Silicon Valley</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<author>
			<persName><forename type="first">Dustin</forename><surname>Podell</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2307.01952</idno>
		<title level="m">SDXL: Improving Latent Diffusion Models for High-Resolution Image Synthesis</title>
		<imprint>
			<date type="published" when="2023">2023. 2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Hierarchical text-conditional image generation with clip latents</title>
		<author>
			<persName><forename type="first">Aditya</forename><surname>Ramesh</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2204.06125</idno>
		<imprint>
			<date type="published" when="2022">2022. 2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Film: Frame interpolation for large motion</title>
		<author>
			<persName><forename type="first">Fitsum</forename><surname>Reda</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">DreamBooth: Fine Tuning Text-to-image Diffusion Models for Subject-Driven Generation</title>
		<author>
			<persName><forename type="first">Nataniel</forename><surname>Ruiz</surname></persName>
		</author>
		<idno>arxiv:2208.12242</idno>
		<imprint>
			<date type="published" when="2022">2022. 2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Hidden trigger backdoor attacks</title>
		<author>
			<persName><forename type="first">Aniruddha</forename><surname>Saha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Akshayvarun</forename><surname>Subramanya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hamed</forename><surname>Pirsiavash</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of AAAI</title>
		<meeting>of AAAI</meeting>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">AI-generated game assets</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">What is Video Game Animation and How Does it Work?</title>
		<author>
			<orgName type="collaboration">Toronto Film School</orgName>
		</author>
		<ptr target="https://www.torontofilmschool.ca/blog/what-is-video-game-animation-and-how-does-it-work/" />
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Laion-5b: An open large-scale dataset for training next generation image-text models</title>
		<author>
			<persName><forename type="first">Christoph</forename><surname>Schuhmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of NeurIPS</title>
		<meeting>of NeurIPS</meeting>
		<imprint>
			<date type="published" when="2022">2022. 2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Glaze: Protecting artists from style mimicry by text-to-image models</title>
		<author>
			<persName><forename type="first">Shawn</forename><surname>Shan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jenna</forename><surname>Cryan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Emily</forename><surname>Wenger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haitao</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rana</forename><surname>Hanocka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><forename type="middle">Y</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of USENIX Security</title>
		<meeting>of USENIX Security</meeting>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Prompt-specific poisoning attacks on text-to-image generative models</title>
		<author>
			<persName><forename type="first">Shawn</forename><surname>Shan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenxin</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Josephine</forename><surname>Passananti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stanley</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haitao</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><forename type="middle">Y</forename><surname>Zhao</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2310.13828</idno>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">Stable Diffusion Public Release</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">I</forename><surname>Stability</surname></persName>
		</author>
		<ptr target="https://stability.ai/blog/stable-diffusion-public-release" />
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">Stability AI releases DeepFloyd IF, a powerful text-to-image model that can smartly integrate text into images</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">I</forename><surname>Stability</surname></persName>
		</author>
		<ptr target="https://stability.ai/blog/deepfloyd-if-text-to-image-model" />
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">Clean-label backdoor attacks</title>
		<author>
			<persName><forename type="first">Alexander</forename><surname>Turner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dimitris</forename><surname>Tsipras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aleksander</forename><surname>Madry</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title level="m">Enes Sadi Uysal. 2024. Fine-Tuning Stable Diffusion with DreamBooth Method</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Anti-DreamBooth: Protecting users from personalized text-to-image synthesis</title>
		<author>
			<persName><forename type="first">Thanh</forename><surname>Van Le</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hao</forename><surname>Phung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thuan</forename><surname>Hoang Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Quan</forename><surname>Dao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ngoc</forename><forename type="middle">N</forename><surname>Tran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anh</forename><surname>Tran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICCV</title>
		<meeting>of ICCV</meeting>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title/>
		<author>
			<persName><surname>Webglaze</surname></persName>
		</author>
		<ptr target="https://glaze.cs.uchicago.edu/webglaze.html" />
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title level="m" type="main">Why Artists are Fed Up with AI Art</title>
		<author>
			<persName><forename type="first">Sam</forename><surname>Yang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
	<note>Fayden Art</note>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title level="m" type="main">YouTube recommended upload encoding settings</title>
		<author>
			<persName><surname>Youtube</surname></persName>
		</author>
		<ptr target="https://support.google.com/youtube/answer/1722171" />
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Transferable clean-label poisoning attacks on deep neural nets</title>
		<author>
			<persName><forename type="first">Chen</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ronny</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hengduo</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gavin</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christoph</forename><surname>Studer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tom</forename><surname>Goldstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICML</title>
		<meeting>of ICML</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
