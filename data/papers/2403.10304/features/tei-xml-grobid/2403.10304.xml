<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">KIF: A Wikidata-Based Framework for Integrating Heterogeneous Knowledge Sources</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability  status="unknown">
					<licence/>
				</availability>
				<date type="published" when="2024-07-24">24 Jul 2024</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Guilherme</forename><surname>Lima</surname></persName>
							<email>guilherme.lima@ibm.com</email>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research Brazil</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jo√£o</forename><forename type="middle">M B</forename><surname>Rodrigues</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research Brazil</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Marcelo</forename><surname>Machado</surname></persName>
							<email>mmachado@ibm.com</email>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research Brazil</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Elton</forename><surname>Soares</surname></persName>
							<email>eltons@ibm.com</email>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research Brazil</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Sandro</forename><forename type="middle">R</forename><surname>Fiorini</surname></persName>
							<email>srfiorini@ibm.com</email>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research Brazil</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Raphael</forename><surname>Thiago</surname></persName>
							<email>raphaelt@br.ibm.com</email>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research Brazil</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Leonardo</forename><forename type="middle">G</forename><surname>Azevedo</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research Brazil</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Viviane</forename><forename type="middle">T</forename><surname>Da Silva</surname></persName>
							<email>vivianet@br.ibm.com</email>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research Brazil</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Renato</forename><surname>Cerqueira</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research Brazil</orgName>
								<address>
									<settlement>Rio de Janeiro</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">KIF: A Wikidata-Based Framework for Integrating Heterogeneous Knowledge Sources</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2024-07-24">24 Jul 2024</date>
						</imprint>
					</monogr>
					<idno type="MD5">C0D506C5B35F6F07640401181C21BF28</idno>
					<idno type="arXiv">arXiv:2403.10304v2[cs.AI]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.2-SNAPSHOT" ident="GROBID" when="2025-02-21T16:25+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Knowledge Integration Framework</term>
					<term>Wikidata</term>
					<term>SPARQL</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We present a Wikidata-based framework, called KIF, for virtually integrating heterogeneous knowledge sources. KIF is written in Python and is released as open-source. It leverages Wikidata's data model and vocabulary plus user-defined mappings to construct a unified view of the underlying sources while keeping track of the context and provenance of their statements. The underlying sources can be triplestores, relational databases, CSV files, etc., which may or may not use the vocabulary and RDF encoding of Wikidata. The end result is a virtual knowledge base which behaves like an "extended Wikidata" and which can be queried using a simple but expressive pattern language, defined in terms of Wikidata's data model. In this paper, we present the design and implementation of KIF, discuss how we have used it to solve a real integration problem in the domain of chemistry (involving Wikidata, PubChem, and IBM CIRCA), and present experimental results on the performance and overhead of KIF.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Knowledge source integration is the problem of meaningfully combining multiple knowledge sources. The problem is harder when (i) the sources are heterogeneous, i.e., adopt different vocabularies, formats, storage technologies, etc.; and (ii) the intended integration is virtual, i.e., is to be done dynamically, at query time. In the Semantic Web, where "knowledge source" usually means a set of OWL ontologies, the integration problem is often reduced to the ontology matching problem <ref type="bibr" target="#b20">[20]</ref>. In practice, however, determining correspondences between concepts and properties in ontologies is just one of the many issues involved. More often than not, the sources to be integrated don't support OWL or even RDF (think of graph databases, relational databases, REST APIs, CSV dumps, etc.) and either are just too large or change too frequently to be converted and ingested statically into a single knowledge base.</p><p>A scenario like this requires a more comprehensive solution. One that combines virtualization mechanisms to provide federated access to the sources, mapping mechanisms to reconcile differences in their vocabularies, and provenance mechanisms to enable telling which piece of knowledge came from which source. Although there are in the literature proposals to tackle each of these tasks separately, few attempt to provide an integrated solution.</p><p>In this paper, we present KIF <ref type="foot" target="#foot_0">1</ref> , an open-source Python framework that uses Wikidata's data model and vocabulary <ref type="bibr" target="#b24">[24]</ref> as a lingua franca to integrate heterogeneous knowledge sources. KIF is our attempt at a comprehensive solution to the hard version of the knowledge integration problem-the version in which the sources are heterogeneous and the integration is virtual.</p><p>The core abstraction of KIF is the store. A store is an interface to a "Wikidata view" of a knowledge source, obtained by interpreting the source's content as a set of Wikidata-like statements. For example, KIF's built-in CSV store constructs Wikidata view of a CSV file by interpreting each of its cells (line-column pair) as a statement where the subject is given by the entity described by the line, the property is given by the header of the column, and the value by the content of the cell. Another built-in store type is the SPARQL store. It constructs a Wikidata view of a SPARQL endpoint by interpreting certain patterns in the endpoint's RDF graph as Wikidata-like statements.</p><p>Having Wikidata as the target brings some advantages. First, KIF inherits a tried-and-tested data model with native support for structured data values plus the notions of references and qualifiers, used to represent provenance and context information. Second, if desired, one can reuse Wikidata's vast vocabulary, which at the time of writing has more than 110M items and 11K properties, covering various domains. Third, one can easily combine statements produced by any KIF store with statements coming from Wikidata itself, which can be accessed via an ordinary SPARQL store. Such a combination is done using a mixer store, which virtually merges statements of one or more child stores.</p><p>The key to the flexibility of the store abstraction lies in its query interface. KIF stores are queried using a simple but expressive pattern language defined in terms of Wikidata's data model. KIF includes a pattern compiler targeting SPARQL which can be parameterized with custom mappings to generate queries in RDF encodings other than Wikidata's. A mapping to the RDF encoding of PubChem <ref type="bibr" target="#b13">[13]</ref> (a large public base of chemical knowledge) is also included in the distribution. As we discuss later, this mapping was used together with other things to build an application that integrates statements about chemical compounds coming from PubChem, Wikidata, and IBM CIRCA <ref type="bibr" target="#b11">[11]</ref> (a relational database of chemical data extracted from patents and other sources).</p><p>The rest of the paper is organized as follows. Section 2 presents some background on Wikidata. Section 3 presents the design and implementation of KIF. Section 4 discusses the evaluation of KIF over a use case in the domain of chemistry. Section 5 discusses some related work. Section 6 presents our conclusions and future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>Wikidata <ref type="bibr" target="#b24">[24]</ref> is a sister project of Wikipedia and it's also one of largest bases of structured knowledge on the Web. Although we have been using the term "Wikidata data model", the data model used by Wikidata actually comes from Wikibase, which is the open-source framework underlying Wikidata. Wikibase is a project of its own. It can be used to create other knowledge bases following the same data model as Wikidata but with different content and purposes <ref type="bibr" target="#b5">[6]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Wikibase Data Model</head><p>Wikibase's data model <ref type="bibr" target="#b17">[17]</ref> consists of entities and statements about entities. In Wikidata's UI, statements are grouped into "entity pages". Figure <ref type="figure" target="#fig_0">1</ref> shows the page of entity Q2270, which stands for the chemical compound benzene. <ref type="foot" target="#foot_1">2</ref> Every entity has a label, a description, and one or more aliases. In Figure <ref type="figure" target="#fig_0">1</ref>, these are shown in the header at the top of the page. After the header comes the "Statements" section which groups statements about the entity being described. A statement consists of two parts: subject and snak. The subject is the entity about which the statement is made. The snak is the statement's claim. It associates a property with either a specific value, some unspecified value, or no value.</p><p>Figure <ref type="figure" target="#fig_0">1</ref> depicts two statements which can be read as follows:</p><p>"benzene has an LD50 of 4,699-4,701 milligrams per kilogram" (1) "benzene has an LD50 of 87-89 milligrams per kilogram"</p><p>(2) LD50 (or median lethal dose) is a toxicity unit that measures the dose of a substance that is required to kill half the members of a tested population. The subject of statements ( <ref type="formula">1</ref>) and ( <ref type="formula">2</ref>) is the same, "benzene" (Q2270). Their snak is of the form property-value. The property of both is "median lethal dose (LD50)" (P2240). The value of (1) is "4,700 ¬±1 mg/kg" and the value of ( <ref type="formula">2</ref>) is "88 ¬±1 mg/kg". Note that the data model distinguishes between items (identified with "Q") and properties (identified with "P"). Only the latter can occur as the first component of snaks.</p><p>In Python, using the KIF constructors (see Figure <ref type="figure">2</ref>), statements (1) and ( <ref type="formula">2</ref>) are written as follows:</p><formula xml:id="formula_0">&gt;&gt;&gt; stmt1 = Statement(</formula><p>Item( benzene ), ... ValueSnak(Property( LD50 ), Quantity(4700, mg/kg , 4699, 4701))) &gt;&gt;&gt; stmt2 = Statement(Item( benzene ), ... ValueSnak(Property( LD50 ), Quantity(88, mg/kg , 87, 89)))</p><p>We write x for the URL of entity x, e.g., benzene stands for <ref type="url" target="http://www.wikidata.org/entity/Q2270">http://www.wikidata.org/entity/Q2270</ref>. Back to Figure <ref type="figure" target="#fig_0">1</ref>, the qualifiers and references associated with each statement are shown below the statement's value (see the boxes "qualifiers" and "opened references"). Qualifiers are extra snaks which qualify what is being said by the statement's main snak; references (or reference records) are sets of snaks which keep provenance information.</p><p>The qualifiers of statement <ref type="bibr" target="#b0">(1)</ref> shown in Figure <ref type="figure" target="#fig_0">1</ref> are written as follows: &gt;&gt;&gt; qualifiers_of_stmt1 = [ ... ValueSnak(Property( route of administration ), Item( oral administration )) ... ValueSnak(Property( applies to taxon ), Item( laboratory mouse ))]</p><p>Note that the qualifiers in this case convey information that is crucial to interpret the statement, namely, the route of administration and the affected animal. The references shown for statement <ref type="bibr" target="#b0">(1)</ref> in Figure <ref type="figure" target="#fig_0">1</ref> are written as follows: &gt;&gt;&gt; references_of_stmt1 = [ ... ReferenceRecord( # 1st reference ... ValueSnak(Property( stated in ), Item( PubChem )), ... ValueSnak(Property( PubChem CID ), String('241')), ... ValueSnak(Property( language of work or name ), Item( English )), ... ValueSnak(Property( retrieved ), Time('2024-04-12'))), ... ReferenceRecord( # 2nd reference ... ValueSnak(Property( reference URL ), IRI('<ref type="url" target="http://www.cdc.gov">http://www.cdc.gov</ref>...')))] stmt ::= Statement(entity , snak ) -claim about entity entity ::= item | property item ::= Item(iri ) -person or thing property ::= Property(iri ) -(binary) relation snak ::= ValueSnak(property , value) -"property has value" | SomeValueSnak(property ) -"property has some value" | NoValueSnak(property ) -"property has no value" value ::= entity | data-value data-value ::= iri | text | string | external-id | quantity | time iri ::= IRI(s) -IRI text ::= Text(s, lang?) -text in a given language string ::= String(s) -string external-id ::= ExternalId(s) -external id quantity ::= Quantity(n, item?, n?, n?) -numerical quantity time ::= Time(ts, i?, i?, item?) -date or time reference ::= ReferenceRecord(snak +) rank ::= Preferred | Normal | Deprecated Fig. 2. Constructors of data model objects in KIF. "?" means zero-or-one; "+" means one-or-more; s is a Python string; lang is a Python string containing language tag such as "en"; n is a number; i is an integer; and ts is a date-time timestamp.</p><p>The last piece of metadata associated with statements is the rank which can be either "preferred", "normal", or "deprecated". In Figure <ref type="figure" target="#fig_0">1</ref>, the rank is represented symbolically by the two triangles and circle which occur on the left of the statement's value. A filled upper triangle means preferred rank; a filled circle means normal rank; and a filled lower triangle means deprecated rank. As can be seen in Figure <ref type="figure" target="#fig_0">1</ref>, statements (1) and ( <ref type="formula">2</ref>) have normal rank.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Wikidata RDF Encoding</head><p>Wikidata defines an RDF encoding for its data model which is also adopted by Wikibase <ref type="bibr" target="#b18">[18,</ref><ref type="bibr" target="#b25">25]</ref>. The format varies slightly depending on whether it is used in a data dump or observed from Wikidata's query service. The version we describe here is that of the query service.</p><p>In Wikidata's RDF encoding, each statement is represented at two levels. The first level, called truthy, keeps a shallow representation of the statement as a single RDF triple. For example, the truthy encoding of statement (1) of Figure <ref type="figure" target="#fig_0">1</ref>, namely, "benzene (Q2270) has an LD50 (P2240) of 4,700¬±1 mg/kg", consists of the single triple: wd:Q2270 "4700"ÀÜÀÜxsd:decimal</p><formula xml:id="formula_1">wdt:P2240 ( ‚Ä†)</formula><p>The namespace wd: indicates an entity and wdt: indicates a truthy application of a property. Some statements are fully characterized at the truthy level. But, as illustrated by ( ‚Ä†), this is not always the case. Note that the unit, lower-, and upper-bounds associated with the value 4700 are not represented in ( ‚Ä†). In general, when the statement's value is a structured data-value, like a quantity or time value, a single literal is used to represent it at the truthy level. This is the so called simple value of the statement. For quantity values, the simple value is is just the numerical amount.</p><p>The second level of the encoding keeps the full representation of the statement. It uses reification to capture the deep value of the statement plus its qualifiers, references, and rank. Figure <ref type="figure">3</ref>  Fig. <ref type="figure">3</ref>. RDF representation of the statement "Benzene (Q2270) has an LD50 (P2240) of 4,700 ¬±1 mg/kg (Q21091747)" considering only the qualifier "route of administration (P636) is oral administration (Q285166)" and the reference record "reference URL (P854) is <ref type="url" target="https://www.cdc.gov/niosh-rtecs/CY155CC0.html">https://www.cdc.gov/niosh-rtecs/CY155CC0.html</ref>".</p><p>In Figure <ref type="figure">3</ref>, the shaded nodes are the reified ones. The single underscore (_) indicates that their ids are opaque (hence not shown in the figure). Node wds:_ represents the statement. Predicates p:P2240 and ps:P2240 are used to connect the subject "benzene" (wd:Q2270) to the statement and the statement to its simple value, i.e., the number 4700 in decimal notation.</p><p>The deep value of the statement is represented by node wdv:_. It has type wikibase:QuantityValue and is connected to the unit mg/kg (wd:Q21091747), the lower-bound 4699, and the upper-bound 4701. The rank of the statement is connected via predicate wikibase:rank.</p><p>Moving to qualifiers, predicate pq:P636 connects the qualifier "route of administration" (P636) with value "oral administration" (wd:Q285166) to the statement. Finally, predicate prov:wasDerivedFrom connects to the statement the reference record represented by node wdref:_. Its content (the snak "reference URL" (P854) with value "<ref type="url" target="https://www.cdc.gov/">https://www.cdc.gov/</ref>...") is encoded using predicate pr:P854 and a (simple) IRI value.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Design and Implementation</head><p>KIF is an integration framework based on Wikidata. The idea behind it is to use Wikidata to standardize the syntax and possibly the vocabulary of the underlying knowledge sources. Users can then query the sources through patterns described in terms of Wikidata's data model. The integration done by KIF is virtual in the sense that syntax and vocabulary translations happen dynamically, at query time, guided by user-provided mappings.</p><p>As we mentioned before, the core abstraction of KIF is the store. A store is an interface to a knowledge source. This can be a SPARQL endpoint, REST API, RDF file, CSV file, etc. The job of the store is to construct a "Wikidata view" of the knowledge source. The prototypical store is the SPARQL store, which we describe next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">SPARQL Store</head><p>The SPARQL store reads Wikidata-like statements from a given SPARQL endpoint. Here is how we create a SPARQL store pointing to WDQS, the public SPARQL query service of Wikidata:</p><p>&gt;&gt;&gt; from kif_lib import * &gt;&gt;&gt; Wikidata = Store('sparql', '<ref type="url" target="https://query.wikidata.org/sparql">https://query.wikidata.org/sparql</ref>')</p><p>At line 1, we import the namespace of KIF, whose Python module is called kif_lib. At line 2, we create a new store of type "sparql" pointing to WDQS and assign the result to variable Wikidata. As we did not pass an explicit mapping to the store constructor, it assumes the endpoint speaks Wikidata's RDF encoding, which is the case for WDQS.</p><p>We can read statements from the newly created Wikidata store as follows:</p><formula xml:id="formula_2">&gt;&gt;&gt; it =</formula><p>Wikidata.filter( ... subject=Item('<ref type="url" target="http://www.wikidata.org/entity/Q2270">http://www.wikidata.org/entity/Q2270</ref>'), ... property=Property('<ref type="url" target="http://www.wikidata.org/entity/P2240">http://www.wikidata.org/entity/P2240</ref>')) &gt;&gt;&gt; next(it) Statement(Item(IRI('<ref type="url" target="http://www.wikidata.org/entity/Q2270">http://www.wikidata.org/entity/Q2270</ref>')), ValueSnak(Property(IRI('<ref type="url" target="http://www.wikidata.org/entity/P2240">http://www.wikidata.org/entity/P2240</ref>')), Quantity(4700, Item(IRI('<ref type="url" target="http://www.wikidata.org/entity/Q21091747">http://www.wikidata.org/entity/Q21091747</ref>')), 4699, 4701))) ÷í‚Üí ÷í‚Üí ÷í‚Üí</p><p>At lines 3-5, we ask for statements with subject "benzene" (Q2270) and property "median lethal dose (LED50)" (P2240). The result is an iterator which is assigned to variable it. At line 6, we consume one statement from it whose content is shown in line 7. Note that this is the same statement (1) of Section 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Patterns</head><p>As we mentioned, in KIF, queries are specified as patterns defined in terms of Wikidata's data model. The filter() call in line 3 above is actually just a wrapper to a match() call, which evaluates a pattern over the knowledge source.</p><p>We can rewrite the previous filter() in terms of match() as follows:</p><formula xml:id="formula_3">&gt;&gt;&gt; x =</formula><p>Variable('x') &gt;&gt;&gt; pat = Statement(Item('<ref type="url" target="http://www.wikidata.org/entity/Q2270">http://www.wikidata.org/entity/Q2270</ref>'), ... ValueSnak(Property('<ref type="url" target="http://www.wikidata.org/entity/P2240">http://www.wikidata.org/entity/P2240</ref>'), x)) &gt;&gt;&gt; it = Wikidata.match(pat)</p><p>At line 8, we create the pattern variable x and use it to build the pattern pat in lines 9-10. KIF patterns are templates for objects of the data model, i.e., objects in which certain parts are replaced by variables. Pattern pat is a template for statements whose subject is "benzene" (Q2270) and whose snak is a value-snak with property "LD50" (P2240) and value x, i.e., any value.</p><p>Before detailing how the match() call in line 11 works (see Section 3.3), let us make a quick detour to show two other features of KIF.</p><p>The vocabulary module When writing data model or pattern objects, we can use KIF's vocabulary module to make the code less verbose. For example, we can rewrite the previous pattern pat (lines 9-10) more concisely as follows:</p><p>&gt;&gt;&gt; from kif_lib.vocabulary import wd &gt;&gt;&gt; pat1 = Statement(wd.Q(2270), ValueSnak(wd.P(2240), x))</p><p>At line 12, we import KIF's Wikidata vocabulary module wd. At line 13, we use wd.Q() and wd.P() to construct the item "benzene" (Q2270) and property "LD50" (P2240) without having to write their URLs. But we can do better:</p><formula xml:id="formula_4">&gt;&gt;&gt; pat2 = wd.median_lethal_dose(wd.Q(2270), x)</formula><p>This constructs the same pattern by applying property wd.median_lethal_dose, which is predeclared in the wd module, as if it were a Python function to arguments wd.Q(2270) and x. That the three versions construct exactly the same statement pattern object can be checked by a simple equality test:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>&gt;&gt;&gt; pat == pat1 and pat1 == pat2 True</head><p>Constraints Suppose we want to restrict the statements that match the previous pattern to those with a value in the range 4000-7000 mg/kg. We can do that by using method where() to constraint the pattern as follows: Method where() takes a boolean expression of variables. Here the resulting pattern, pat3 (lines <ref type="bibr" target="#b17">[17]</ref><ref type="bibr" target="#b18">[18]</ref><ref type="bibr" target="#b19">[19]</ref>, is a new pattern equal to pat with the added constraint that the matched statement's value must be a quantity in mg/kg with amount x such that 4000 ‚â§ x ‚â§ 7000, and with any lower-and upper-bound values. This ends our detour. We can now get back to the match() method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">The match() Method</head><p>Method match() is the workhorse of the store API. It must be implemented by all store types and is the basis of the implementation of most other store API methods, including filter().</p><p>The match() method takes a pattern p as argument and returns a match object which when iterated generates all instances of p found in the store. The actual implementation of match() varies from store to store. But the general idea can be described as follows. First, the store compiles pattern p into a query q, written in query language of knowledge source. Then it evaluates q over the source, producing a result set R such that each result b in R is a binding of variables in q. Finally, for each variable-value pair (x, v) in b, the store replaces the variable corresponding to x in p by the value v, generating a new match.</p><p>To make matters more concrete, let p be pattern pat3 defined at the end of Section 3.2 (lines 17-19). Figure <ref type="figure">4</ref> shows the steps taken by a SPARQL store evaluate the call match(p).</p><p>In step (1), the SPARQL store instantiates a new SPARQL compiler. Since no SPARQL mapping was given to the compiler, it assumes a default mapping targeting the RDF encoding of Wikidata.</p><p>In steps ( <ref type="formula">2</ref>) and ( <ref type="formula">3</ref>), the store uses the compiler to compile pattern p into a SPARQL query q and a substitution Œ∏. Note that compilation is compositional, i.e., the compilation of p is defined in terms of the compilation of its subpatterns. The substitution Œ∏ is a mapping from subpatterns of p into variables of q. For instance, the Œ∏ of Figure <ref type="figure">4</ref> specifies that variable ?x of query q corresponds to variable x of pattern p.</p><p>In steps (4) and ( <ref type="formula">5</ref>), the SPARQL store sends query q to the source's SPARQL endpoint and receives as a result the SPARQL result R. A SPARQL result is essentially a set of bindings of the variables selected by the query. Figure <ref type="figure">4</ref> shows that R contains at least two bindings for variable ?x, namely, 4700 and 6400.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SPARQL Store</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SPARQL Compiler SPARQL Endpoint</head><p>(1) match(p)</p><formula xml:id="formula_5">(2) p (3) q, Œ∏<label>(4) q</label></formula><p>(5) R = {(?x, 4700), (?x, 6400), . . .} # ?_v3 := psv:P2240 wd:Q2270 ?_v4 ?_v1 .</p><p># ?_v1 := wds:_ ?_v1 ?_v3 ?_v2 .</p><p># ?_v2 := wdv:_ ?_v1 ?_v0 ?x . ?_v2 rdf:type wikibase:QuantityValue . ?_v2 wikibase:quantityAmount ?x . ?_v2 wikibase:quantityUnit wd:Q21091747 . OPTIONAL { ?_v2 wikibase:quantityLowerBound ?_v5 . } OPTIONAL { ?_v2 wikibase:quantityUpperBound ?_v6 . } FILTER (?x &gt;= 4700 &amp;&amp; ?x &lt;= 7000) } Fig. <ref type="figure">4</ref>. Evaluation of match(p) over a SPARQL store.</p><p>Finally, in step <ref type="bibr" target="#b5">(6)</ref>, for each binding b in R, the SPARQL store replaces the SPARQL variables in Œ∏ by their values in b and applies the resulting substitution to the original pattern p to obtain a new match. For example, the first match shown in step (6) of Figure <ref type="figure">4</ref> is obtained by computing Œ∏[?x := 4700](p), i.e., replacing ?x by 4700 in Œ∏ and applying the resulting substitution to p. The result in this case is statement (1) of Section 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">SPARQL Mapping for PubChem</head><p>The SPARQL store can be used to read statements from any SPARQL endpoint, provided it is supplied with an appropriate mapping. One such mapping already included in KIF is for the RDF distribution of PubChem <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b13">13]</ref>. Here is how we create a SPARQL store pointing to a local installation of PubChem's RDF:</p><formula xml:id="formula_7">&gt;&gt;&gt;</formula><p>from kif_lib.store.sparql.mapping import PubChemMapping &gt;&gt;&gt; PubChem = Store('sparql', '<ref type="url" target="http://localhost:1234/sparql">http://localhost:1234/sparql</ref>', ... mapping=PubChemMapping()) We won't go into detail here, but object PubChemMapping() (line 22) tells the SPARQL store (actually, the SPARQL compiler) how to translate KIF patterns into graph patterns over PubChem's RDF graph. The resulting store, PubChem (line 21), behaves as an ordinary SPARQL store. We can use it, for example, to obtain the mass (P2067) of benzene from PubChem: &gt;&gt;&gt; it = PubChem.filter( ... subject=wd.InChIKey('UHOVQNZJYSORNB-UHFFFAOYSA-N'), ... property=wd.mass) &gt;&gt;&gt; next(it) == wd.mass( ... Item('<ref type="url" target="http://rdf.ncbi.nlm.nih.gov/pubchem/compound/CID241">http://rdf.ncbi.nlm.nih.gov/pubchem/compound/CID241</ref>'), ... Quantity('78.11', wd.dalton))</p><p>There are a couple of things to note here. First, the PubChem mapping provided by KIF adopts the Wikidata vocabulary whenever possible. For instance, it maps property "mass" (P2067) to the appropriate property in Pub-Chem. The mapping also uses Wikidata units, e.g., "dalton" (Q483261) above. What it doesn't do is translate the ids of PubChem compounds. This explains the non-Wikidata URL in the subject of the returned statement (line 27). This is also the reason we didn't use the Wikidata id of benzene, wd.Q(2270), in the subject of the filter() call above. Had we done that the result would be empty. Instead, we used the value-snak wd.InChIKey('UHOV...'). That is, we set the subject to any entity whose InChIKey (P235) is equal to "UHOV. . . ", which happens to be the InChIKey of benzene. InChIKey is a universal identifier for chemical compounds which is defined in both Wikidata and PubChem.</p><p>Here is the pattern corresponding to the previous filter() (lines 23-25):</p><p>&gt;&gt;&gt; x, y = Variables('x', 'y') &gt;&gt;&gt; pat4 = wd.mass(x, y).where( ... wd.InChIKey(x, 'UHOVQNZJYSORNB-UHFFFAOYSA-N'))</p><p>It now should be clear what is happening: filter() is searching for statements with subject x, property "mass", and value y, such that x is an entity with "InChIKey" equal to "UHOV. . . ". This example illustrates the use of a statement pattern (line 32) as a boolean constraint, i.e., as an argument to the where() call. The constraint in this case plays the role of a fingerprint, i.e., a test that identifies an entity indirectly, here using a universal identifier instead of a local one. The support for this kind of fingerprinting technique is crucial for enabling meaningful queries over combinations of knowledge sources, such as those obtained via mixer stores.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">The Mixer Store</head><p>The mixer store combines one or more child stores into a new store which behaves as their virtual union. For example, we can combine Wikidata (line 2) and PubChem (lines <ref type="bibr" target="#b21">[21]</ref><ref type="bibr" target="#b22">[22]</ref> into a new store mix of type "mixer" as follows: From the user's point of view, mix (line 33) is a store like any other. Its content can be thought of as the union of the statements in Wikidata and PubChem.</p><p>At lines 34-35, we ask mix for statements with subject "benzene", and assign the first two results to variables stmt1 and stmt2, respectively. One possibility here, for example, is that mix returns first a statement from Wikidata and then a statement from PubChem, say, those in lines 6-7 and 26-28.</p><p>One way to determine which statement came from which child store, is to instruct them to attach extra references to their statements. For instance, here is how we can instruct Wikidata to attach an extra reference to statements:</p><formula xml:id="formula_8">&gt;&gt;&gt; Wikidata.extra_references = [ ... ReferenceRecord(wd.reference_URL(Wikidata.iri))]</formula><p>Now every statement produced by the Wikidata store will be associated to one extra reference stating that the statement's "reference URL" (P854) is the address of the endpoint set in Wikidata. We won't go into details here, but the references of a statement can be obtained using the store API method get_annotations().</p><p>To decouple statements from qualifiers, references, and rank-and avoid opaque ids-KIF introduces the notion of an annotation. An annotation (or annotation record ) is a triple containing qualifiers (set of snaks), references (set of reference records), and rank.</p><p>In KIF, statements are identified by their content (subject and snak) and can be associated with one or more annotation records in a store. This deviates from the Wikidata RDF representation <ref type="bibr" target="#b18">[18]</ref>, in which statements are identified by opaque ids which carry its qualifiers, references, and rank. The rationale of KIF's approach is to relieve users from having to deal with opaque, meaningless ids-push this work to the framework.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">Other Store Types and Methods</head><p>Besides the SPARQL store and the mixer store, KIF comes with an RDF store and a CSV store. The RDF store reads statements from RDF files. It is essentially a SPARQL store that uses RDFLib <ref type="bibr" target="#b21">[21]</ref> to load RDF files and evaluate SPARQL queries over their contents. The CSV store reads statements from CSV files. It expects a mapping specifying how line-columns pairs are to be interpreted as statements. Currently, the CSV store is implemented as a wrapper to the RDF store which first converts the CSV to RDF before loading it. We have plans for a more direct, non-RDF-based implementation though.</p><p>All stores implement a common store API, containing core methods filter() and match() discussed before plus methods to get statement annotations (qualifiers, references, and ranks) and entity descriptors (labels, aliases, and descriptions). The store API also has convenience methods for testing and counting pattern occurrences, and methods for obtaining store metadata. For more details, see the documentation of KIF <ref type="bibr" target="#b12">[12]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Use Case and Evaluation</head><p>The research on KIF was in part motivated by the development of a chat-bot for the domain of chemistry. Depending on the user's question, the bot would retrieve statements about chemical compounds from various sources and present them as "known facts". There were three main requirements: (i) the retrieved statements should be comparable, i.e., they should use the same vocabulary when talking about the same things; (ii) their origin should be traceable, i.e., statements should come with provenance information; and (iii) it should be easy to add new sources to the system.</p><p>Figure <ref type="figure" target="#fig_5">5</ref> shows the instantiation of KIF used in the chat-bot application. A mixer store is used to combine three SPARQL stores: one pointing to a local installation of PubChem's RDF <ref type="bibr" target="#b7">[8]</ref> running on Virtuoso <ref type="bibr" target="#b6">[7]</ref>, one pointing to Wikidata's public SPARQL endpoint (WDQS), and one pointing to a local SPARQL endpoint built by Ontop over the SQL endpoint of IBM CIRCA. IBM CIRCA <ref type="bibr" target="#b11">[11]</ref> is a relational database of chemical data extracted from patents and other sources. In the chat-bot application, we used Ontop to build a Wikidata-compatible SPARQL endpoint to access parts of its schema. Ontop <ref type="bibr" target="#b27">[27]</ref> is an ontology-based data access tool. It uses R2RML <ref type="bibr" target="#b4">[5]</ref> mappings to translate SPARQL queries to SQL at query time. The R2RML mappings tell Ontop how to map tables in the relational database into concepts and properties of the target ontology (in our case, Wikidata's).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Evaluation</head><p>For the evaluation, we used the setup shown in Figure <ref type="figure" target="#fig_5">5</ref> without the IBM CIRCA part, i.e., essentially the setup shown in line 33 of Section 3.5. Our goal was to measure the overhead of KIF when evaluating simple application-level queries over the mixer. By overhead, we mean time spent in KIF (Python code) versus time spent in the SPARQL endpoints (outside the Python code). By simple application-level queries, we mean statement patterns meaningful to users.</p><p>For the experiment, we generated patterns of the forms p(x,v 1 ).where(q(x,v 2 )) and p(v 1 ,x).where(q(x,v 2 )),</p><p>where x is a pattern variable, p and q are properties, v 1 is a value or variable, and v 2 is a value. Since we wanted matches in both Wikidata and PubChem, we restricted p to the properties in PubChem whose domain or range is a chemical compound (e.g., mass (P2067), has part (P527), trading name (P6427), etc.) and q to those which are compound identifiers (e.g., InChIKey (P235), canonical SMILES (P233), ChEBI ID (P683), etc.). We evaluated each of the generated patterns over the mixer of Figure <ref type="figure" target="#fig_5">5</ref> and collected those which (i) matched at least one statement in both Wikidata and PubChem, and (ii) took at least 0.75s to run in each of the endpoints. We then sorted the patterns by number of matches and selected the last 100 patterns. We ended up with patterns Q0-Q99, whose evaluation times are shown in Figure <ref type="figure" target="#fig_6">6</ref>. For each pattern Q i in Figure <ref type="figure" target="#fig_6">6</ref>, the red line (Total) indicates the time taken to evaluate and consume all results of the call match(Q i ) over the mixer. The orange and green lines (Wikidata and PubChem) indicate the time taken to send the SPARQL queries to the endpoints and receive the results. The blue line (KIF) indicates the time spent in KIF where KIF = Total -(Wikidata + PubChem).</p><p>As expected, the bulk of the time (on average 97.9%) was spent in the endpoints, in particular, PubChem. The overhead of KIF is negligible, especially when the number of matches is smaller than the page-size configured in KIF. In this experiment, we used a page of size 100, which is the default. This means that to consume a response with 1000 matches, KIF has to perform 10 requests. This explains the increase in the overhead of KIF after Q70. Nevertheless, evaluation time is dominated by the SPARQL endpoints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Related Work</head><p>There are three classes of work related to KIF.</p><p>First, there are the ontology-based data access (OBDA) systems <ref type="bibr" target="#b26">[26]</ref>. These are systems such as Ontop <ref type="bibr" target="#b27">[27]</ref> which, given a mapping between a data source and target ontology, are able to evaluate over the data source queries written in terms of the ontology. In ODBA, the data source is a relational database, the ontology is written in a DL-Lite <ref type="bibr" target="#b1">[2]</ref> language (e.g., OWL 2 QL), the query language is SPARQL, and query evaluation is done under the SPARQL 1.1 entailment regime <ref type="bibr" target="#b26">[26]</ref>. Also, OBDA usually means virtual access: the SPARQL query is transformed into an SQL query on-the-fly and evaluated over the database. (To be feasible, the SQL query needs to be heavily optimized, as the transformation from SPARQL often leads to a blow-up in size <ref type="bibr" target="#b9">[10]</ref>.) Different from OBDA systems, KIF fixes the target syntax and (possibly) the vocabulary to those of Wikidata. Although it doesn't attempt to do any kind of reasoning on its own, its SPARQL store can be used seamlessly with any reasoning-enabled endpoint. Also, KIF doesn't attempt to provide an interface for arbitrarily complex queries. The filter() method, in particular, was inspired by the work on linked data fragments <ref type="bibr" target="#b22">[22]</ref> and TPF <ref type="bibr" target="#b23">[23]</ref>. It is a lightweight filtering interface which can be used reliably by applications.</p><p>Another thing that distinguishes the KIF from OBDA systems is that the latter largely ignore the problem of query federation <ref type="bibr" target="#b9">[10]</ref>. (One notable exception is Squerall <ref type="bibr" target="#b16">[16]</ref>.) That said, OBDA systems such as Ontop can be used to enable KIF to interface with relational databases, as illustrated in Section 4.</p><p>The second class of work related to KIF are RDF integration systems based on SPARQL query-rewriting <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b15">15]</ref>. These are similar to OBDA systems but target RDF. The system is given an RDF source, a target ontology, a mapping between the source schema and the target ontology, and a SPARQL query written in terms of the ontology. Its job is to translate the original SPARQL query into a new SPARQL query and evaluated it over the RDF source on-the-fly.</p><p>The problem of SPARQL-rewriting (or ontology-mediated query translation) is closely related to the ontology matching problem. But despite the vast liter-ature on ontology matching <ref type="bibr" target="#b20">[20]</ref>, there is little research on using the produced mappings for querying RDF sources, especially when federations of sources are considered <ref type="bibr" target="#b2">[3]</ref>. An early work that uses SPARQL rewriting for integrating multiple RDF sources is <ref type="bibr" target="#b15">[15]</ref>. However, it doesn't cover the result reconciliation problem, i.e., using the mappings to reconcile the results of the queries in the terms of the target ontology. A more recent proposal which covers query-translation and result reconciliation is <ref type="bibr" target="#b2">[3]</ref>. The previous remarks on the differences between KIF and OBDA systems also apply to SPARQL rewriting systems.</p><p>The third class of related work are knowledge graph construction (KGC) systems. These are systems like SPARQL-Generate <ref type="bibr" target="#b14">[14]</ref> and SPARQL Anything <ref type="bibr" target="#b0">[1]</ref>, which use SPARQL to describe the transformation of non-RDF sources into an RDF dataset. For this purpose, SPARQL-Generate extends the syntax of SPARQL, while SPARQL Anything overrides the SERVICE clause. Both of these systems allow users to query non-RDF resources on-the-fly. But different from KIF, they don't attempt perform any kind of ontology-mediated mapping. The user must use the vocabulary of each source and specify the desired transformations explicitly, for each query.</p><p>One problem largely ignored by the three classes of work cited above is the representation and tracking of provenance. In contrast, KIF tackles this problem from the start: statements carry provenance information which is preserved while they traverse the framework.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>This paper presented KIF, a framework that uses Wikidata to virtually integrate heterogeneous knowledge sources. Having Wikidata as the integration model brings some advantages, including a flexible data model and access to a huge vocabulary covering a wide range of topics. This is particularly important when the integration problem is open-ended: when we don't know which kind of knowledge source we might need to integrate next, or when the sources deal with completely different subjects. In the domain of chemistry, as illustrated in Section 2, when talking about toxicity we often need to refer not only to chemicals but also to things like symptoms, diseases, and even animals-all of these are already covered by Wikidata's vocabulary. That said, KIF is not restricted to Wikidata's vocabulary. If needed, the stores can extend their vocabulary with new entities and properties (cf. the use of PubChem URLs as item ids by the PubChem RDF mapping in Section 3.4).</p><p>Moving to the implementation of KIF, we are currently adding support for parallel requests to the library. This will speed up not only the mixer but also any store that needs to split large queries into multiple requests. As we mentioned in Section 3.6, we are also working on an alternative, non-RDF-based implementation of the CSV store. A more important change is the addition of a mutable store API, which will allow users write onto stores. The idea is to use SPARQL update queries in the case of the SPARQL store.</p><p>Finally, on the theoretical side we are working on the formalization of the semantics of KIF patterns, inspired by the work on WShEx <ref type="bibr" target="#b8">[9]</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Part of Wikidata's entity page of benzene. (Adapted from [19].)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><figDesc>depicts the full representation of statement (1) of Figure1considering only one qualifier and one reference record.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><figDesc>&gt;&gt;&gt; pat3 = wd.median_lethal_dose(wd.Q(2270), ... Quantity(x, wd.milligram_per_kilogram).where( ... x.ge(4000) &amp; x.le(7000)))</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><figDesc>6) Œ∏[?x := 4700](p), Œ∏[?x := 6400](p), . . . where: p = wd.median_lethal_dose(wd.Q(2270), Quantity(x, wd.milligram_per_kilogram).where(x.ge(4000) &amp; x.le(7000))) Œ∏ = {(Variable('x') , ?x)} q = SELECT * WHERE { wd:P2240 wikibase:claim ?_v4 . # ?_v4 := p:P2240 wd:P2240 wikibase:statementProperty ?_v0 . # ?_v0 := ps:P2240 wd:P2240 wikibase:statementValue ?_v3 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><figDesc>&gt;&gt;&gt; mix = Store('mixer', [Wikidata, PubChem]) &gt;&gt;&gt; stmt1, stmt2, *rest = mix.filter( ... subject=wd.InChIKey('UHOVQNZJYSORNB-UHFFFAOYSA-N'))</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. KIF instantiation integrating PubChem, Wikidata, and IBM CIRCA.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Fig.6. KIF overhead. The x-axis shows the queries sorted by number of matches. The numbers above the red line indicate the number of matches for a particular query. The y-axis shows the time in seconds (in log scale). On average, 2.1% of the time was spent in KIF, 12.4% in Wikidata, and 85.5% in PubChem.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>https://github.com/IBM/kif</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>https://www.wikidata.org/wiki/Q2270</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Knowledge graph construction with a fa√ßade: A unified method to access heterogeneous data sources on the web</title>
		<author>
			<persName><forename type="first">L</forename><surname>Asprino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Daga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mulholland</surname></persName>
		</author>
		<idno type="DOI">10.1145/3555312</idno>
		<ptr target="https://doi.org/10.1145/3555312" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Internet Technol</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2023-02">February 2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Tractable reasoning and efficient query answering in description logics: The DL-Lite family</title>
		<author>
			<persName><forename type="first">D</forename><surname>Calvanese</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">D</forename><surname>Giacomo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lembo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lenzerini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rosati</surname></persName>
		</author>
		<idno type="DOI">10.1007/s10817-007-9078-x</idno>
		<ptr target="https://doi.org/10.1007/s10817-007-9078-x" />
	</analytic>
	<monogr>
		<title level="j">J. Automat. Reason</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="385" to="429" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Considering vocabulary mappings in query plans for federations of RDF data sources</title>
		<author>
			<persName><forename type="first">S</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ferrada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Hartig</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-031-46846-9_2</idno>
		<ptr target="https://doi.org/10.1007/978-3-031-46846-9_2" />
	</analytic>
	<monogr>
		<title level="m">Cooperative Information Systems</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Sellami</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Vidal</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">B</forename><surname>Van Dongen</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">W</forename><surname>Gaaloul</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">H</forename><surname>Panetto</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2024">2024</date>
			<biblScope unit="page" from="21" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">SPARQL query rewriting for implementing data integration over linked data</title>
		<author>
			<persName><forename type="first">G</forename><surname>Correndo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Salvadores</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Millard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Glaser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shadbolt</surname></persName>
		</author>
		<idno type="DOI">10.1145/1754239.1754244</idno>
		<ptr target="https://doi.org/10.1145/1754239.1754244" />
	</analytic>
	<monogr>
		<title level="m">Proc. 2010 EDBT/ICDT Workshops. EDBT &apos;10</title>
		<meeting>2010 EDBT/ICDT Workshops. EDBT &apos;10</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">R2RML: RDB to RDF mapping language. W3C recommendation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sundara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Cyganiak</surname></persName>
		</author>
		<ptr target="https://www.w3.org/TR/r2rml/" />
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Wikibase as an infrastructure for knowledge graphs: The EU knowledge graph</title>
		<author>
			<persName><forename type="first">D</forename><surname>Diefenbach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Wilde</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Alipio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hotho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Blomqvist</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dietze</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Fokoue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Barnaghi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Haller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dragoni</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-030-88361-4_37</idno>
		<ptr target="https://doi.org/10.1007/978-3-030-88361-4_37" />
	</analytic>
	<monogr>
		<title level="m">The Semantic Web -ISWC 2021</title>
		<editor>
			<persName><forename type="first">H</forename><surname>Alani</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2021">2021</date>
			<biblScope unit="page" from="631" to="647" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Virtuoso, a hybrid RDBMS/graph column store</title>
		<author>
			<persName><forename type="first">O</forename><surname>Erling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Data Eng. Bull</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="3" to="8" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">PubChemRDF: Towards the semantic annotation of Pub-Chem compound and substance databases</title>
		<author>
			<persName><forename type="first">G</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Batchelor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dumontier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hastings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Willighagen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Bolton</surname></persName>
		</author>
		<idno type="DOI">10.1186/s13321-015-0084-4</idno>
		<ptr target="https://doi.org/10.1186/s13321-015-0084-4" />
	</analytic>
	<monogr>
		<title level="j">J. Cheminform</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">34</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">WShEx: A language to describe and validate Wikibase entities</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E L</forename><surname>Gayo</surname></persName>
		</author>
		<ptr target="CEUR-WS.org" />
	</analytic>
	<monogr>
		<title level="m">Proc. 3rd Wikidata Workshop 2022, co-located with 21st Int. Semantic Web Conference (ISWC 2022)</title>
		<editor>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Kaffee</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><surname>Razniewski</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Amaral</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Alghamdi</surname></persName>
		</editor>
		<meeting>3rd Wikidata Workshop 2022, co-located with 21st Int. Semantic Web Conference (ISWC 2022)</meeting>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Ontology-based data federation</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mosca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Xiong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Calvanese</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 11th Int. Joint Conf. Knowledge Graphs</title>
		<meeting>11th Int. Joint Conf. Knowledge Graphs</meeting>
		<imprint>
			<biblScope unit="page" from="10" to="19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Acm</forename><surname>Ijckg '22</surname></persName>
		</author>
		<author>
			<persName><forename type="first">New</forename><surname>York</surname></persName>
		</author>
		<idno type="DOI">10.1145/3579051.3579070</idno>
		<ptr target="https://doi.org/10.1145/3579051.3579070" />
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName><surname>Ibm Circa Team</surname></persName>
		</author>
		<ptr target="https://circa.res.ibm.com/" />
		<title level="m">CIRCA: Where discovery begins</title>
		<imprint>
			<date type="published" when="2024-07-25">July 25, 2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><surname>Kif Team</surname></persName>
		</author>
		<ptr target="https://ibm.github.io/kif/" />
		<title level="m">KIF: A knowledge integration framework based on Wikidata</title>
		<imprint>
			<date type="published" when="2024-07-25">July 25, 2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Pub-Chem 2023 update</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gindulyte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Shoemaker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Thiessen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zaslavsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">E</forename><surname>Bolton</surname></persName>
		</author>
		<idno type="DOI">10.1093/nar/gkac956</idno>
		<idno>1373-D1380</idno>
		<ptr target="https://doi.org/10.1093/nar/gkac956" />
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Res</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2023-10">October 2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A SPARQL extension for generating RDF from heterogeneous formats</title>
		<author>
			<persName><forename type="first">M</forename><surname>Lefran√ßois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Zimmermann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Bakerally</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Blomqvist</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Maynard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Hoekstra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Hitzler</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-58068-5_3</idno>
		<ptr target="https://doi.org/10.1007/978-3-319-58068-5_3" />
	</analytic>
	<monogr>
		<title level="m">ESWC 2017: The Semantic Web</title>
		<editor>
			<persName><forename type="first">O</forename><surname>Hartig</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="35" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">SPARQL-RW: Transparent query access over mapped RDF data sources</title>
		<author>
			<persName><forename type="first">K</forename><surname>Makris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Bikakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Gioldasis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Christodoulakis</surname></persName>
		</author>
		<idno type="DOI">10.1145/2247596.2247678</idno>
		<ptr target="https://doi.org/10.1145/2247596.2247678" />
	</analytic>
	<monogr>
		<title level="m">Proc. 15th Int. Conf. Extending Database Technology</title>
		<meeting>15th Int. Conf. Extending Database Technology</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="610" to="613" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Squerall: Virtual ontology-based access to heterogeneous and large data sources</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">N</forename><surname>Mami</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Graux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Scerri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Auer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lehmann</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-030-30796-7_15</idno>
		<ptr target="https://doi.org/10.1007/978-3-030-30796-7_15" />
	</analytic>
	<monogr>
		<title level="m">The Semantic Web -ISWC 2019</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="229" to="245" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<ptr target="https://www.mediawiki.org/wiki/Wikibase/DataModel" />
		<title level="m">MediaWiki Team: Wikibase/DataModel</title>
		<imprint>
			<date type="published" when="2024-07-25">July 25, 2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName><forename type="first">Mediawiki</forename><surname>Team</surname></persName>
		</author>
		<ptr target="https://www.mediawiki.org/wiki/Wikibase/Indexing/RDF_Dump_Format" />
		<title level="m">Wikibase/Indexing/RDF Dump Format</title>
		<imprint>
			<date type="published" when="2024-07-25">July 25, 2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Wikidata for Scholarly Communication Librarianship</title>
		<author>
			<persName><forename type="first">J</forename><surname>Odell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lemus-Rojas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Brys</surname></persName>
		</author>
		<idno type="DOI">10.7912/9Z4E-9M13</idno>
		<ptr target="https://doi.org/10.7912/9Z4E-9M13" />
		<imprint>
			<date type="published" when="2022">2022</date>
			<pubPlace>Indianapolis</pubPlace>
		</imprint>
		<respStmt>
			<orgName>IUPUI University Library</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Ontology integration: Approaches and challenging issues</title>
		<author>
			<persName><forename type="first">I</forename><surname>Osman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ben Yahia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Diallo</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.inffus.2021.01.007</idno>
		<ptr target="https://doi.org/10.1016/j.inffus.2021.01.007" />
	</analytic>
	<monogr>
		<title level="j">Inf. Fusion</title>
		<imprint>
			<biblScope unit="volume">71</biblScope>
			<biblScope unit="page" from="38" to="63" />
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">RDFLib: RDFLib is a pure Python package for working with RDF</title>
		<author>
			<persName><forename type="first">Rdflib</forename><surname>Team</surname></persName>
		</author>
		<ptr target="https://rdflib.dev/" />
		<imprint>
			<date type="published" when="2024-07-25">July 25, 2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Web-scale querying through linked data fragments</title>
		<author>
			<persName><forename type="first">R</forename><surname>Verborgh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">V</forename><surname>Sande</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Colpaert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Coppens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Mannens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">V</forename><surname>De Walle</surname></persName>
		</author>
		<ptr target="CEUR-WS.org" />
	</analytic>
	<monogr>
		<title level="m">Proc. Workshop on Linked Data on the Web co-located with 23rd Int. World Wide Web Conf. (WWW 2014)</title>
		<meeting>Workshop on Linked Data on the Web co-located with 23rd Int. World Wide Web Conf. (WWW 2014)<address><addrLine>Seoul, Korea</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014-04-08">April 8, 2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Triple pattern fragments: A low-cost knowledge graph interface for the Web</title>
		<author>
			<persName><forename type="first">R</forename><surname>Verborgh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vander Sande</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Hartig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Van Herwegen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>De Vocht</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>De Meester</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Haesendonck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Colpaert</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.websem.2016.03.003</idno>
		<ptr target="https://doi.org/10.1016/j.websem.2016.03.003" />
	</analytic>
	<monogr>
		<title level="j">J. Web Semant</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">38</biblScope>
			<biblScope unit="page" from="184" to="206" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Wikidata: A free collaborative knowledgebase</title>
		<author>
			<persName><forename type="first">D</forename><surname>Vrandeƒçiƒá</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kr√∂tzsch</surname></persName>
		</author>
		<idno type="DOI">10.1145/2629489</idno>
		<ptr target="https://doi.org/10.1145/2629489" />
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="78" to="85" />
			<date type="published" when="2014-09">September 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Westerinen</surname></persName>
		</author>
		<ptr target="https://github.com/AndreaWesterinen/Wikidata-and-OWL/" />
		<title level="m">Understanding Wikidata</title>
		<imprint>
			<date type="published" when="2024-07-25">July 25, 2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Ontology-based data access: A survey</title>
		<author>
			<persName><forename type="first">G</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Calvanese</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kontchakov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lembo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Poggi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rosati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zakharyaschev</surname></persName>
		</author>
		<idno type="DOI">10.24963/ijcai.2018/777</idno>
		<ptr target="https://doi.org/10.24963/ijcai.2018/777" />
	</analytic>
	<monogr>
		<title level="m">Proc. 27th Int. Joint Conf. Artificial Intelligence, IJCAI-18</title>
		<meeting>27th Int. Joint Conf. Artificial Intelligence, IJCAI-18</meeting>
		<imprint>
			<date type="published" when="2018-07">July 2018</date>
			<biblScope unit="page" from="5511" to="5519" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">The virtual knowledge graph system Ontop</title>
		<author>
			<persName><forename type="first">G</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kontchakov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Komla-Ebri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Gu√∫zel-Kalaycƒ±</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Corman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Cogrel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Calvanese</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Botoeva</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-030-62466-8_17</idno>
		<ptr target="https://doi.org/10.1007/978-3-030-62466-8_17" />
	</analytic>
	<monogr>
		<title level="m">The Semantic Web -ISWC 2020</title>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">Z</forename><surname>Pan</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">V</forename><surname>Tamma</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Amato</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K</forename><surname>Janowicz</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">B</forename><surname>Fu</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Polleres</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">O</forename><surname>Seneviratne</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">L</forename><surname>Kagal</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="259" to="277" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
