<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Diffusion Forcing: Next-token Prediction Meets Full-Sequence Diffusion</title>
				<funder ref="#_8Kbv3VJ">
					<orgName type="full">National Science Foundation</orgName>
				</funder>
				<funder ref="#_uw49xXG">
					<orgName type="full">Singapore DSTA</orgName>
				</funder>
				<funder ref="#_3EZRRR9">
					<orgName type="full">Intelligence Advanced Research Projects Activity (IARPA) via Department of Interior/ Interior Business Center</orgName>
					<orgName type="abbreviated">IBC</orgName>
				</funder>
				<funder ref="#_fysy6PD">
					<orgName type="full">Amazon Science Hub</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability  status="unknown">
					<licence/>
				</availability>
				<date type="published" when="2024-12-10">10 Dec 2024</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Boyuan</forename><surname>Chen</surname></persName>
							<email>boyuanc@mit.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">Technical University of Munich</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Diego</forename><forename type="middle">Marti</forename><surname>Monso</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Technical University of Munich</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yilun</forename><surname>Du</surname></persName>
							<email>yilundu@mit.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">Technical University of Munich</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Max</forename><surname>Simchowitz</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Technical University of Munich</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Russ</forename><surname>Tedrake</surname></persName>
							<email>russt@mit.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">Technical University of Munich</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Vincent</forename><surname>Sitzmann</surname></persName>
							<email>sitzmann@mit.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">Technical University of Munich</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Diffusion Forcing: Next-token Prediction Meets Full-Sequence Diffusion</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2024-12-10">10 Dec 2024</date>
						</imprint>
					</monogr>
					<idno type="MD5">424BB76BEF7BD2F2D8DECCB61AED630F</idno>
					<idno type="arXiv">arXiv:2407.01392v4[cs.LG]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.2-SNAPSHOT" ident="GROBID" when="2025-02-21T16:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Tree Search Compositionality Causal Uncertainty Flexible Horizon Diffusion Forcing Teacher Forcing Full-Seq</term>
					<term>Diffusion Comp off Train</term>
					<term>Set Comp on</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper presents Diffusion Forcing, a new training paradigm where a diffusion model is trained to denoise a set of tokens with independent per-token noise levels. We apply Diffusion Forcing to sequence generative modeling by training a causal next-token prediction model to generate one or several future tokens without fully diffusing past ones. Our approach is shown to combine the strengths of next-token prediction models, such as variable-length generation, with the strengths of full-sequence diffusion models, such as the ability to guide sampling to desirable trajectories. Our method offers a range of additional capabilities, such as (1) rolling-out sequences of continuous tokens, such as video, with lengths past the training horizon, where baselines diverge and (2) new sampling and guiding schemes that uniquely profit from Diffusion Forcing's variable-horizon and causal architecture, and which lead to marked performance gains in decision-making and planning tasks. In addition to its empirical success, our method is proven to optimize a variational lower bound on the likelihoods of all subsequences of tokens drawn from the true joint distribution. Project website: <ref type="url" target="https://boyuan.space/diffusion-forcing">https://boyuan.space/ diffusion-forcing</ref> * Work done as a visiting student at MIT. 38th Conference on Neural Information Processing Systems (NeurIPS 2024).</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Probabilistic sequence modeling plays a crucial role in diverse machine learning applications including natural language processing <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b47">48]</ref>, video prediction <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b69">70,</ref><ref type="bibr" target="#b25">26]</ref> and decision making <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b21">22]</ref>. Nexttoken prediction models in particular have a number of desirable properties. They enable the generation of sequences with varying length <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b37">38]</ref> (generating only a single token or an "infinite" number of tokens via auto-regressive sampling), can be conditioned on varying amounts of history <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b37">38]</ref>, support efficient tree search <ref type="bibr" target="#b70">[71,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b24">25]</ref>, and can be used for online feedback control <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b2">3]</ref>.</p><p>Current next-token prediction models are trained via teacher forcing <ref type="bibr" target="#b64">[65]</ref>, where the model predicts the immediate next token based on a ground truth history of previous tokens. This results in two limitations: <ref type="bibr" target="#b0">(1)</ref> there is no mechanism by which one can guide the sampling of a sequence to minimize a certain objective, and (2) current next-token models easily become unstable on continuous data. For example, when attempting to auto-regressively generate a video (as opposed to text <ref type="bibr" target="#b5">[6]</ref> or vector-quantized latents <ref type="bibr" target="#b33">[34]</ref>) past the training horizon, slight errors in frame-to-frame predictions accumulate and the model diverges.</p><p>Figure <ref type="figure">1</ref>: Diffusion Forcing capabilities. Today, different applications such as language modeling <ref type="bibr" target="#b5">[6]</ref>, planning <ref type="bibr" target="#b36">[37]</ref>, or video generation <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b69">70]</ref> rely on either auto-regressive next-token prediction or full-sequence diffusion, according to their respective unique capabilities. The proposed Diffusion Forcing is a novel sequence generative model that enjoys key strengths of both model types.</p><p>Full-sequence diffusion seemingly offers a solution. Commonly used in video generation and long-horizon planning, one directly models the joint distribution of a fixed number of tokens by diffusing their concatenation <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b0">1]</ref>, where the noise level is identical across all tokens. They offer diffusion guidance <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b15">16]</ref> to guide sampling to a desirable sequence, invaluable in decisionmaking (planning) applications <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b34">35]</ref>. They further excel at generating continuous signals such as video <ref type="bibr" target="#b31">[32]</ref>. However, full-sequence diffusion is universally parameterized via non-causal, unmasked architectures. In addition to restricting sampling to full sequences, as opposed to variable length generation, we show that this limits the possibilities for both guidance and subsequence generation (Figure <ref type="figure">1</ref>). Further, we demonstrate that a naive attempt at combining the best of both worlds by training a next-token prediction model for full-sequence diffusion leads to poor generations, intuitively because it does not model the fact that small uncertainty in an early token necessitates high uncertainty in a later one.</p><p>In this paper, we introduce Diffusion Forcing (DF), a training and sampling paradigm where each token is associated with a random, independent noise level, and where tokens can be denoised according to arbitrary, independent, per-token schedules through a shared next-or-next-few-token prediction model. Our approach is motivated by the observation that noising tokens is a form of partial masking-zero noise means a token is unmasked, and complete noise fully masks out a token. Thus, DF forces the model to learn to "unmask" any collection of variably noised tokens (Figure <ref type="figure" target="#fig_0">2</ref>). Simultaneously, by parameterizing predictions as a composition of next-token prediction models, our system can flexibly generate varying length sequences as well as compositionally generalize to new trajectories (Figure <ref type="figure">1</ref>). We implement DF for sequence generation as Causal Diffusion Forcing (CDF), in which future tokens depend on past ones via a causal architecture. We train the model to denoise all tokens of a sequence at once, with an independent noise level per token. During sampling, CDF gradually denoises a sequence of Gaussian noise frames into clean samples where different frames may have different noise levels at each denoising step. Like next-token prediction models, CDF can generate variable-length sequences; unlike next-token prediction, it does so stabily from the immediate next token to thousands of tokens in the future -even for continuous tokens. Moreover, like full-sequence diffusion it accepts guidance towards high-reward generations. Synergistically leveraging causality, flexible horizon, and variable noise schedules, CDF enables a new capability, Monte Carlo Guidance (MCG), that dramatically improves the sampling of high-reward generations compared to non-causal full-sequence diffusion models. Fig. <ref type="figure">1</ref> overviews these capabilities.</p><p>In summary, our contributions are: <ref type="bibr" target="#b0">(1)</ref> We propose Diffusion Forcing, a new probabilistic sequence model that has the flexibility of next-token prediction models while being able to perform longhorizon guidance like full-sequence diffusion models. <ref type="bibr" target="#b1">(2)</ref> Taking advantage of Diffusion Forcing's unique capabilities, we introduce a novel decision-making framework that allows us to use Diffusion Forcing as simultaneously a policy ( <ref type="bibr" target="#b9">[10]</ref>) and as a planner ( <ref type="bibr" target="#b36">[37]</ref>). <ref type="bibr" target="#b2">(3)</ref> We formally prove that, under appropriate conditions, optimizing our proposed training objective maximizes a lower bound on the likelihood of the joint distribution of all sub-sequences observed at training time. <ref type="bibr" target="#b3">(4)</ref> We empirically evaluate CDF across diverse domains such as video generation, model-based planning, visual imitation learning, and time series prediction, and demonstrate CDF's unique capabilities, In contrast, next-token prediction models, common in language modeling, are trained to predict a single next token from a ground-truth sequence (teacher forcing <ref type="bibr" target="#b64">[65]</ref>), and full-sequence diffusion, common in video generation, train non-causal architectures to denoise all frames in a sequence at once with the same noise level. Diffusion Forcing thus interleaves the time axis of the sequence and the noise axis of diffusion, unifying strengths of both alternatives and enabling completely new capabilities (see Secs. 3.2,3.4).</p><p>such as stabilizing long-rollout autoregressive video generation, composing sub-sequences of those observed at training time with user-determined memory horizon, Monte Carlo Guidance, and more.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work and Preliminaries</head><p>We discuss related work and preliminaries for our core application, sequence generative modeling; see Appendix C for further literature review.</p><p>Our method unifies two perspectives on sequence modeling: Bayesian filtering along the time axis, denoted by subscript t, and diffusion along an "uncertainty" (or noise level) axis denoted by superscript k. In the following, we denote observations as x ∈ X and latent states as z ∈ Z.</p><p>Bayesian Filtering. Given a Hidden Markov Model (HMM) defined by latent states z t and observations x t , a Bayes filter is a probabilistic method for estimating latent states recursively over time from incoming observations. A prior model p(z t+1 |z t ) infers a belief over the next state given only the current state, and an observation model infers a belief over the next observation given the current latent state p(x t |z t ). When a new observation is made, a posterior model p(z t+1 |z t , x t+1 ) provides an updated estimation of the next latent state z t+1 . When trained end-to-end with neural networks <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23]</ref>, latent states are not an estimate of any physical quantity, but a sufficiently expressive latent that summarizes past observations for predicting future observations (x t ′ ) t ′ &gt;t in the sequence.</p><p>Diffusion Models. Diffusion models <ref type="bibr" target="#b56">[57,</ref><ref type="bibr" target="#b28">29]</ref> have proven to be highly expressive and reliable generative models. We review their essentials here. Let q(x) denote a data distribution of interest, and let x 0 ≡ x ∼ q. We consider a forward diffusion process that gradually adds Gaussian noise to a data point over a series of time steps. This process is modeled as a Markov chain, where the data at each step k is noised incrementally:</p><formula xml:id="formula_0">q(x k |x k-1 ) = N (x k ; 1 -β k x k-1 , β k I) (2.1)</formula><p>where N is the normal distribution and β k is the variance of the noise added at each step controlled by a schedule {β k ∈ (0, 1)} K k=1 . The process continues until the data is converted into pure noise at x K . The reverse process is also a Markov chain and attempts to recreate the original data from the noise with a parameterized model p θ :</p><formula xml:id="formula_1">p θ (x k-1 |x k ) = N (x k-1 ; µ(x k , k), γ k I),<label>(2.2)</label></formula><p>where the mean µ is a model with a neural network, and where it is shown <ref type="bibr" target="#b29">[30]</ref> that one can set the covariance to the identity scaled by a fixed constant γ k depending on k. Adopting the standard exposition, we reparametrize the mean µ in terms of noise prediction ϵ</p><formula xml:id="formula_2">= ( √ 1 -ᾱt ) -1 x kt t - √ ᾱt µ.</formula><p>This leads <ref type="bibr" target="#b28">[29]</ref> to the following least squares objective:</p><formula xml:id="formula_3">L(θ) = E k,x 0 ,ϵ ∥ϵ k -ϵ θ (x k , k)∥ 2 ,<label>(2.3)</label></formula><p>where <ref type="bibr" target="#b28">[29]</ref>. Guidance of Diffusion Models. Guidance <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b15">16]</ref> allows biasing diffusion generation towards desirable predictions at sampling time. We focus on classifier guidance <ref type="bibr" target="#b15">[16]</ref>: given a classifier c(y|x k ) of some desired y (e.g. class or success indicator), one modifies the Langevin sampling <ref type="bibr" target="#b29">[30]</ref> </p><formula xml:id="formula_4">x k = √ ᾱt x 0 + √ 1 -ᾱt ϵ k and ϵ k ∼ N (0, I) . One can then sample from this model via Langevin dynamics x k-1 ← 1 √ α k (x k t -1-α k √ 1-ᾱk ϵ θ (x k t , k) + σ k w)</formula><formula xml:id="formula_5">gradient ϵ θ (x k , k) to be ϵ θ (x k , k) - √ 1 -ᾱk ∇ x k log c(y|x k</formula><p>). This allows sampling from the joint distribution of x and class label y without the need to train a conditional model. Other energies such as a least-squares objective comparing the model output to a desirable ground truth have been explored in applications such as decision making <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b36">37]</ref>.</p><p>Next-Token Prediction Models. Next-token prediction models are sequence models that predict the next frame x t+1 given past frames x 1:t . At training time, one feeds a neural network with x 1:t and minimizes ||x -x|| 2 for continuous data or a cross-entropy loss for discrete data <ref type="bibr" target="#b64">[65]</ref>. At sampling time, one samples the next frame xt+1 following p(x t+1 |x 1:t ). If one treats xt+1 as x t+1 , one can use the same model to predict x t+2 and repeat until a full sequence is sampled. Unlike full-sequence diffusion models, next-token models do not accept multi-step guidance, as prior frames must be fully determined to sample future frames.</p><p>Diffusion Sequence Models. Diffusion has been widely used in sequence modeling. <ref type="bibr" target="#b43">[44]</ref> use fullsequence diffusion models to achieve controllable text generation via guidance, such as generating text following specified parts of speech. <ref type="bibr" target="#b31">[32]</ref> trains full-sequence diffusion models to synthesize short videos and uses a sliding window to roll out longer conditioned on previously generated frames. <ref type="bibr" target="#b36">[37]</ref> uses full-sequence diffusion models as planners in offline reinforcement learning. This is achieved by training on a dataset of interaction trajectories with the environment and using classifier guidance at sampling time to sample trajectories with high rewards towards a chosen goal. <ref type="bibr" target="#b49">[50]</ref> modifies auto-regressive models to denoise the next token conditioned on previous tokens. It trains with teacher forcing <ref type="bibr" target="#b64">[65]</ref> and samples next-token auto-regressively for time series data. Most similar to our work is AR-Diffusion <ref type="bibr" target="#b65">[66]</ref>, which trains full-sequence text diffusion with a causal architecture with linearly dependent noise level along the time axis. We provide a detailed comparision between this approach and ours in Appendix C.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Method</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Noising as partial masking</head><p>Recall that masking is the practice of occluding a subset of data, such as patches of an image <ref type="bibr" target="#b26">[27]</ref> or timesteps in a sequence <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b48">49]</ref>, and training a model to recover unmasked portions. Without loss of generality, we can view any collection of tokens, sequential or not, as an ordered set indexed by t. Training next-token prediction with teacher forcing can then be interpreted as masking each token x t at time t and making predictions from the past x 1:t-1 . Restricted to sequences, we refer to all these practices as masking along the time axis. We can also view full-sequence forward diffusion, i.e., gradually adding noise to the data x 0 1:T ≡ x 1:T , as a form of partial masking, which we refer to as masking along the noise axis. Indeed, after K steps of noising, x K 1:T is (approximately) pure white noise without information about the original data.</p><p>We establish a unified view along both axes of masking (see Fig. <ref type="figure" target="#fig_0">2</ref>). We denote x 1:T for a sequence of tokens, where the subscript indicates the time axis. As above, x kt t denotes x t at noise level k t under the forward diffusion process (2.1); x 0 t = x is the unnoised token, and x K t is white noise N (0, I). Thus, (x kt t ) 1≤t≤T denotes a sequence of noisy observations where each token has a different noise level k t , which can be seen as the degree of partial masking applied to each token through noising.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Diffusion Forcing: different noise levels for different tokens</head><p>Diffusion Forcing (DF) is a framework for training and sampling arbitrary sequence lengths of noisy tokens (x kt t ) 1≤t≤T , where critically, the noise level k t of each token can vary by time step. In this Algorithm 1 Diffusion Forcing Training 1: loop 2: Sample tajectory of observations (x1, ..., xT ). 3: for t = 1, ..., T do 4: Sample independent noise level kt ∈ {0, 1, ..., K} 5: x k t t = ForwardDiffuse(xt, kt) 6: Define ϵt = x k t t -√ ᾱk t x t √ 1-ᾱk t 7: Update zt ∼ p θ (zt|zt-1, x k t t , kt). 8: Set εt = ϵ θ (zt-1, x k t t , kt) 9: end for 10: L =MSELoss([ε1, ..., εn] , [ϵ1, ..., ϵn]) 11: Backprop with L and update θ 12: end loop Algorithm 2 DF Sampling with Guidance 1: Input: Model θ, scheduling matrix K, initial latent z0, guidance cost c(•). 2: Initialize x1, . . . , xT ∼ N (0, σ<ref type="foot" target="#foot_0">foot_0</ref> K I). 3: for row m = M -1, ..., 0 do 4: for t = 1, . . . , T do 5: z new t ∼ p θ (zt | zt-1, xt, Km+1,t). 6:</p><p>k ← Km,t, w ∼ N (0, I). 7:</p><formula xml:id="formula_6">x new t ← 1 √ α k (xt -1-α k √ 1-ᾱk ϵ θ (z new t , xt, k)) + σ k w 8:</formula><p>Update zt ← z new t . 9: end for 10: x1:H ←AddGuidance(x new 1:H , ∇x log c(x new 1:H )) 11: end for 12: Return x1:T . paper, we focus on time series data, and thus instantiate Diffusion Forcing with causal architectures (where x kt t depends only on past noisy tokens), which we call Causal Diffusion Forcing (CDF). For simplicity, we focus on a minimal implementation with a vanilla Recurrent Neural Network (RNN) <ref type="bibr" target="#b10">[11]</ref>. Potential transformer implementation of Diffusion Forcing is also possible but we defer its discussion to Appendix B.1.</p><p>The RNN with weights θ maintains latents z t capturing the influence of past tokens, and these evolve via dynamics z t ∼ p θ (z t |z t-1 , x kt t , k t ) with a recurrent layer. When an incoming noisy observation x kt t is made, the hidden state is updated in a Markovian fashion z t ∼ p θ (z t |z t-1 , x kt t , k t ) 2 . When k t = 0, this is the posterior update in Bayes filtering; whereas when k t = K (and x K t is pure noise and thus uninformative), this is equivalent to modeling the "prior distribution" p θ (z t | z t-1 ) in Bayes filtering. Given latent z t , an observation model p θ (x 0 t |z t ) predicts x t . Training. The dynamics model p θ (z t |z t-1 , x kt t , k t ) and the observation model p θ (x 0 t |z t ) together form a RNN unit. Such unit has the same input-output behavior as a standard conditional diffusion model, using a conditioning variable z t-1 and a noisy token x kt t as input to predict the noise-free x t = x 0 t and thus, indirectly, the noise ϵ kt via affine reparametrization <ref type="bibr" target="#b29">[30]</ref>. We can thus directly train (Causal) Diffusion Forcing with the conventional diffusion training objective. We parameterize the aforementioned unit in terms of noise prediction ϵ θ (z t-1 , x kt t , k t ). We then find parameters θ by minimizing the loss</p><formula xml:id="formula_7">E kt,xt,ϵt zt∼p θ (zt|zt-1,x k t t ,kt) T t=1 ∥ϵ t -ϵ θ (z t-1 , x kt t , k t )∥ 2 ,<label>(3.1)</label></formula><p>where we sample k 1:T uniformly from [K] T , x 1:T from our training data, and ϵ t ∼ N (0, σ 2 kt I) in accordance with the forward diffusion process (see Algorithm 1 for pseudocode). Importantly, the loss (3.1) captures essential elements of Bayesian filtering and conditional diffusion. In Appendix D.1, we further re-derive common techniques in diffusion model training for Diffusion Forcing, which proves extremely useful for video prediction experiments. In Appendix B.2, we discuss the need of sampling k 1:T uniformly. Finally, we prove the validity of this objective stated informally in the following Theorem 3.1 in Appendix A. Theorem 3.1 (Informal). The Diffusion Forcing training procedure (Algorithm 1) optimizes a reweighting of an Evidence Lower Bound (ELBO) on the expected log-likelihoods ln p θ ((x kt t ) 1≤t≤T ), where the expectation is averaged over noise levels k 1:T ∼ [K] T and x kt t noised according to the forward process. Moreover, under appropriate conditions, optimizing (3.1) also maximizes a lower bound on the likelihood for all sequences of noise levels, simultaneously.</p><p>We remark that a special case of 'all sequences of noise levels' are those for which either k t = 0 or k t = K; thus, one can mask out any prior token and DF will learn to sample from the correct conditional distribution, modeling the distribution of all possible sub-sequences of the training set.</p><p>Sampling. Diffusion Forcing sampling is depicted in Algorithm 2 and is defined by prescribing a noise schedule on a 2D M × T grid K ∈ [K] M ×T ; columns correspond to time step t and rows indexed by m determine noise-level. K m,t represents the desired noise level of the time-step t token for row m. To generate a whole sequence of length T , initialize the tokens x 1:T to be white noise, corresponding to noise level k = K. We iterate down the grid row-by-row, denoising leftto-right across columns to the noise levels prescribed by K. By the last row m = 0, the tokens are clean, i.e. their noise level is K 0,t ≡ 0. Appendix D.5 discusses corner cases of this scheme; the hyperparameters (α k , ᾱk , σ k ) are set to their standard values <ref type="bibr" target="#b29">[30]</ref>. The matrix K specifies how fast each token gets denoised at every step of sequence diffusion. Since Diffusion Forcing is trained to denoise tokens of all sequences of noise levels, K can be designed to flexibly achieve different behaviors without re-training the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">New Capabilities in Sequence Generation</head><p>We now explain the new capabilities this flexible sampling paradigm has to offer. Stabilizing autoregressive generation. For high-dimensional, continuous sequences such as video, auto-regressive architectures are known to diverge, especially when sampling past the training horizon. In contrast, Diffusion Forcing can stably roll out long sequences even beyond the training sequence length by updating the latents using the previous latent associated with slightly "noisy tokens" for some small noise level 0 &lt; k ≪ K. Our experiments (Sec. 4.1) illustrates the resulting marked improvements in long-horizon generation capabilities; App. B.4 provides further intuition.</p><p>Keeping the future uncertain. Beginning from a sequence of white noise tokens [x K 1 , x K 2 , x K 3 ] ⊤ , we may denoise the first token fully and the second token partially, yielding</p><formula xml:id="formula_8">[x 0 1 , x K/2 2 , x K 3 ] ⊤ , then [x 0 1 , x 0 2 , x K/2 3</formula><p>] ⊤ , and finally denoising all tokens fully to [x 0 1 , x 0 2 , x 0 3 ] ⊤ . Interpreting the noise level as uncertainty, this "zig-zag" sampling scheme intuitively encodes the immediate future as more certain than the far future. Sec. 3.4 describes how this leads to more effective sequence guidance.</p><p>Long-horizon Guidance. In Line 10 of Algorithm 2, one may add guidance to the partially diffused trajectory x 1:T as in Sec. 2. Due to the dependency of future tokens on the past, guidance gradients from future tokens can propagate backwards in time. The unique advantage of Diffusion Forcing is that, because we can diffuse future tokens without fully diffusing the past, the gradient guides the sampling of past tokens, thereby achieving long-horizon guidance while respecting causality. We elaborate on implementation details in Appendix B.3. As we show in Section 4.2, planning in this manner significantly outperforms guided full-sequence diffusion models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Diffusion Forcing for Flexible Sequential Decision Making</head><p>The capabilities offered by Diffusion Forcing motivate our novel framework for sequential decision making (SDM), with key applications to robotics and autonomous agents.</p><p>Consider a Markov Decision Process defined by an environment with dynamics p(s t+1 |s t , a t ), observation p(o t |s t ) and reward p(r t |s t , a t ). The goal is to train a policy π(a t |o 1:t ) such that the expected cumulative reward of a trajectory E[ T t=1 r t ] is maximized. We assign tokens x t = [a t , r t , o t+1 ]. A trajectory is a sequence x 1:T , possibly of variable length; training is conducted as in Algorithm 1. At each step t of execution, past (noise-free) tokens x 1:t-1 are summarized by a latent z t-1 . Conditioned on this latent, we sample, via Algorithm 2, a plan xt:t+H , with xt = [â t , rt , ôt+1 ] ⊤ containing predicted actions, rewards and observations. H is a look-ahead window, analogous to future predictions in model predictive control [20]. After taking planned action ât , the environment produces a reward r t 496 Generations Input 500 996 1000 496 Generations Input 500 996 1000 Seq 1 Seq 2 Seq 1 Seq 2 Seq 1 Seq 2 Seq 1 Seq 2 Seq 1 Seq 2 Seq 1 Seq 2 DMLab Minecraft Diffusion Forcing Causal Full-Seq. Teacher Forcing Figure 3: Video Generation. Among tested methods, Diffusion Forcing generations are uniquely temporally consistent and do not diverge even when rolling out well past the training horizon. Please see the project website for video results. and next observation o t+1 , yielding next token x t = [â t , r t , o t+1 ] ⊤ . The latent is updated according to the posterior p θ (z t |z t-1 , x t , 0). Our framework enables functionality as both policy and planner:</p><p>Flexible planning horizon. Diffusion Forcing (a) can be deployed on tasks of variable horizon, because each new action is selected sequentially, and (b) its lookahead window H can be shortened to lower latency (using Diffusion Forcing as a policy), or lengthened to perform long-horizon planning (via guidance described below), without re-training or modifications of the architecture. Note that (a) is not possible for full-sequence diffusion models like Diffuser <ref type="bibr" target="#b36">[37]</ref> with full-trajectory generation horizons, whereas diffusion policies <ref type="bibr" target="#b9">[10]</ref> need fixed, small lookahead sizes, precluding (b).</p><p>Flexible reward guidance. As detailed in Appendix B.3, Diffusion Forcing can plan via guidance using any reward (in place of log c) specified over future steps: this includes dense per-time step rewards on the entire trajectory T t=1 r t , dense rewards on a future lookahead t+H t ′ =t r t , and sparse rewards indicating goal completion -∥o T -g∥ 2 . Per-time step policies cannot take advantage of this latter, longer horizon guidance.</p><p>Monte Carlo Guidance (MCG), future uncertainty. Causal Diffusion Forcing allows us to influence the generation of a token x k t by guidance on the whole distribution of future x t+1:T . Instead of drawing a single trajectory sample to calculate this guidance gradient, we can draw multiple samples of the future and average their guidance gradients. We call this Monte Carlo Guidance. In the spirit of so-called shooting methods like MPPI <ref type="bibr" target="#b63">[64]</ref>, x k t is then guided by the expected reward over the distribution of all future outcomes instead of one particular outcome. The effect of MCG is enhanced when combined with sampling schedules that keep the noise level of future tokens high when denoising immediate next tokens (e.g. the zig-zag schedule described in Sec. 3.3), accounting for greater uncertainty farther into the future. Appendix B.5 further justifies the significance of MCG, and why Diffusion Forcing uniquely takes advantage of it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Experiments</head><p>We extensively evaluate Diffusion Forcing's merits as a generative sequence model across diverse applications in video and time series prediction, planning, and imitation learning. Please find the dataset and reproducibility details in the Appendix, as well as video results on the project website.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Video Prediction: Consistent, Stable Sequence Generation and Infinite Rollout.</head><p>We train a convolutional RNN implementation of Causal Diffusion Forcing for video generative modeling on videos of Minecraft gameplay <ref type="bibr" target="#b68">[69]</ref> and DMLab navigation <ref type="bibr" target="#b68">[69]</ref>. At sampling time, we</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Maze2d-medium-v1</head><p>Maze2d-large-v1</p><p>D3F (Ours) Diffuser end start denoising steps denoising steps Environment MPPI CQL IQL Diffuser* Diffuser w/ diffused action Ours wo/ MCG Ours Maze2D U-Maze 33.2 5.7 47.4 113.9 ± 3.1 6.3 ± 2.1 110.1 ± 3.9 116.7 ± 2.0 Maze2D Medium 10.2 5.0 34.9 121.5 ± 2.7 13.5±2.3 136.1 ± 10.2 149.4 ± 7.5 Maze2D Large 5.1 12.5 58.6 123.0 ± 6.4 6.3 ±2.1 142.8 ± 5.6 159.0 ± 2.7 Single-task Average 16.2 7.7 47.0 119.5 8.7 129.67 141.7 Multi2D U-Maze 41.2 -24.8 128.9 ± 1.8 32.8±1.7 107.7 ± 4.9 119.1 ± 4.0 Multi2D Medium 15.4 -12.1 127.2 ± 3.4 22.0±2.7 145.6 ± 6.5 152.3 ± 9.9 Multi2D Large 8.0 -13.9 132.1 ± 5.8 6.9 ±1.7 129.8 ± 1.5 167.1 ±2.7 Multi-task Average 21.5 -16.9 129.4 20.6 127.7 146.2 Table 1: Diffusion Forcing for Planning. (top) During sampling, Diffusion Forcing allows each time step to be denoised on different noise schedules, enabling us to account for causal uncertainty during guided planning. Diffusion Forcing keeps the far future more uncertain than the near future while Diffuser [37] puts them at the same noise level during sampling. (bottom) Quantitatively, Diffusion Forcing achieves the highest average reward across runs. Diffuser fails dramatically when executing the actually generated actions, requiring a hand-crafted PD controller (indicated by the asterisk) and ignoring generated actions.</p><p>perform auto-regressive rollout with stabilization proposed in Sec. 3.3. We consider two baselines, both leveraging the same exact RNN architecture: a next-frame diffusion baseline trained with teacher forcing <ref type="bibr" target="#b64">[65]</ref> as well as a causal full-sequence diffusion model. Figure <ref type="figure">3</ref> displays qualitative results of roll-outs generated by Diffusion Forcing and baselines starting from unseen frames for both datasets. While Diffusion Forcing succeeds at stably rolling out even far beyond its training horizon (e.g. 1000 frames), teacher forcing and full-sequence diffusion baselines diverge quickly. Further, within the training horizon, we observe that full-sequence diffusion suffers from frame-to-frame discontinuity where video sequences jump dramatically, while Diffusion Forcing roll-outs show ego-motion through a consistent 3D environment. This highlights the ability of Diffusion Forcing to stabilize rollouts of high-dimensional sequences without compounding errors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Diffusion</head><p>Planning: MCG, Causal Uncertainty, Flexible Horizon Control.</p><p>Decision-making uniquely benefits from Diffusion Forcing's capabilities. We evaluate our proposed decision-making framework in a standard offline RL benchmark, D4RL <ref type="bibr" target="#b17">[18]</ref>. Specifically, we benchmark Diffusion Forcing on a set of 2D maze environments with sparse reward. An agent is tasked with reaching a designated goal position starting from a random starting position. In Appendix E.5 we provide a detailed description of the environment. The benchmark provides a dataset of random walks through mazes (thus stochastic). We train one model per maze.</p><p>We benchmark the proposed decision-making framework 3.4 with state-of-the-art offline RL methods and the recently introduced Diffuser [37], a diffusion planning framework. See Fig. <ref type="figure">1</ref> for qualitative and quantitative results: DF outperforms Diffuser and all baselines across all 6 environments.</p><p>Benefit of Monte Carlo Guidance. The typical goal for an RL problem is to find actions that maximize the expected future rewards, which we achieve through MCG. Full-sequence diffusion models such as Diffuser do not support sampling to maximize expected reward, as we formally derive in Appendix B.5. To understand MCG's importance, we ablate it in Table <ref type="table">1</ref>. Removing MCG guidance degrades our performance, though Diffusion Forcing remains competitive even then.</p><p>Predictions Input Outs. Cam Wristcam Goal State Interm. State Case A Case B 180 120 240 300 360 420 480</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Generated Video Stateful Cases</head><p>Figure <ref type="figure">4</ref>: In our real robot task, a robot arm is asked to swap the slots of two fruits using a third slot. Since the fruits are input in random slots at the beginning, one cannot determine the next steps from a single observation without knowledge of the initial placement of the fruits. As illustrated in (a) and (b), the upper observation is the same but the desired outcome illustrated below can vary-the task thus requires remembering the initial configuration. In addition, as shown in (c), the same model that generates actions also synthesizes realistic video from just a single frame.</p><p>Benefit of Modeling Causality. Unlike pure generative modeling, sequential decision-making takes actions and receives feedback. Due to compounding uncertainty, the immediate next actions are more important than those in the far future. Though Diffuser and subsequent models are trained to generate sequences of action-reward-state tuples [a t , r t , o t ], directly executing the actions will lead to a trajectory that deviates significantly from the generated states. In other words, the generated states and actions are not causally consistent with each other. To address this shortcoming, Diffuser's implementation ignores the generated actions and instead relies on a hand-crafted PD controller to infer actions from generated states. In Table <ref type="table">1</ref>, we see that Diffuser's performance drops dramatically when directly executing generated actions. In contrast, Diffusion Forcing's raw action generations are self-consistent, outperforming even actions selected by combining Diffuser's state predictions with a handcrafted PD controller.</p><p>Benefit of Flexible Horizon. Many RL tasks have a fixed horizon, requiring the planning horizon to shrink as an agent makes progress in the task. Diffusion Forcing accomplishes this by design, while full-sequence models like Diffuser perform poorly even with tweaks, as we explain in Appendix B.6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Controllable Sequential Compositional Generation</head><p>We demonstrate that by only modifying the sampling scheme, we can flexibly compose sub-sequences of sequences observed at training time. We consider a dataset of trajectories on a 2D, square plane, where all trajectories start from one corner and end up in the opposite corner, forming a cross shape. As shown in Fig. <ref type="figure">1</ref>, when no compositional behavior is desired, one can let DF keep full memory, replicating the cross-shaped distribution. When one desires compositionality, one can let the model generate shorter plans without memory using MPC, leading to the stitching of the cross's sub-trajectories, forming a V-shaped trajectory. Due to limited space, we defer the result to Appendix E.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Robotics: Long horizon imitation learning and robust visuomotor control</head><p>Finally, we illustrate that Diffusion Forcing (DF) opens up new opportunities in the visuomotor control of real-world robots. Imitation learning <ref type="bibr" target="#b9">[10]</ref> is a popular technique in robotic manipulation where one learns an observation-to-action mapping from expert demonstrations. However, the lack of memory often prevents imitation learning from accomplishing long-horizon tasks. DF not only alleviates this shortcoming but also provides a way to make imitation learning robust.</p><p>Imitation Learning with Memory. We collect a dataset of videos and actions by teleoperating with a Franka robot. In the chosen task, one needs to swap the position of an apple and an orange, using a third slot. See Fig. <ref type="figure">4</ref> for an illustration. The initial positions of the fruits are randomized such that there are two possible goal states. As illustrated in Fig. <ref type="figure">4</ref>, when one fruit is in the third slot, the desired outcome cannot be inferred from the current observation-a policy must remember the initial configuration to determine which fruit to move. In contrast to common behavior cloning methods, DF naturally incorporates memory in its latent state. We found that DF achieves 80% success rate while diffusion policy <ref type="bibr" target="#b9">[10]</ref>, a state-of-the-art imitation learning algorithm without memory, fails.</p><p>Robustness to missing or noisy observations. Because it incorporates principles from Bayes filtering, Diffusion Forcing can perform imitation learning while being robust to noisy or missing observations. We demonstrate this by adding visual distractions and even fully occluding the camera during execution. DF allows us to easily indicate these observations as "noisy" by using k &gt; 0, in which case DF relies heavily on its prior model to predict actions. Consequently, the success rate is only lowered by 4% to 76%. In contrast, a next-frame diffusion model baseline attains a success rate of 48%: it must treat perturbed observations as ground truth and suffers out-of-distribution error.</p><p>Potential for pre-training with video. Finally, in parallel to generating actions, Fig. <ref type="figure">4</ref> illustrates that Diffusion Forcing is capable of generating a video of the robot performing the task given only an initial frame, unifying diffusion policy/imitation learning and video generative modeling and paving the way to pre-training on unlabeled video.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Time Series Forecasting: Diffusion Forcing is a Good General-purpose Sequence Model</head><p>In Appendix E, we show that DF is competitive with prior diffusion <ref type="bibr" target="#b49">[50]</ref> and transformer-based <ref type="bibr" target="#b50">[51]</ref> work on multivariate time series forecasting, following the experimental setup of <ref type="bibr" target="#b53">[54]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion</head><p>Limitations. Our current causal implementation is based on an RNN. Applications to higherresolution video or more complex distributions likely require large transformer models following instructions in Appendix B.1. We do not investigate the scaling behavior of Diffusion Forcing to internet-scale datasets and tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusion.</head><p>In this paper, we introduced Diffusion Forcing, a new training paradigm where a model is trained to denoise sets of tokens with independent, per-token noise levels. Applied to time series data, we show how a next-token prediction model trained with Diffusion Forcing combines the benefits of both next-token models and full-sequence diffusion models. We introduced new sampling and guidance schemes that lead to dramatic performance gains when applied to tasks in sequential decision making. Future work may investigate the application of Diffusion Forcing to domains other than time series generative modeling, and scale up Diffusion Forcing to larger datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Theoretical Justification</head><p>In this section, we provide theoretical justification for the train of Diffusion Forcing. The main contributions can be summarized as follows:</p><p>• We show that our training methods optimize a reweighting of the Evidence Lower Bound (ELBO) on the average log-likelihood of our data. We first establish this in full generality (Theorem A.1), and then specialize to the form of Gaussian diffusion (Corollary A.2). We show that the resulting terms decouple in such a fashion that, in the limit of a fully expressive latent and model, makes the reweighting terms immaterial.</p><p>• We show that the expected likelihood over any distribution over sequences of noise levels can be lower bounded by a sum over nonnegative terms which, when reweighted, correspond to the terms optimized in the Diffusion Forcing training objective maximizes. Thus, for a fully expressive network that can drive all terms to their minimal value, Diffusion Forcing optimizes a valid surrogate of the likelihood of all sequences of noise levels simultaneously.</p><p>We begin by stating an ELBO for general Markov forward processes q(•), and generative models p θ (•), and then specialize to Gaussian diffusion, thereby recovering our loss. We denote our Markov forward process q(•) as</p><formula xml:id="formula_9">q(x 1:K | x 0 ) = K k=1 q(x k | x k-1 ), (A.1)</formula><p>and a parameterized probability model</p><formula xml:id="formula_10">p θ (((x k t ) 1≤k≤K , zt) t≥1 ) (A.2)</formula><p>We assume that p θ satisfies the Markov property that</p><formula xml:id="formula_11">p θ (zt, x k t t | z1:t-1, (x ks s ) 1≤s&lt;t ) = p θ (zt, x k t | zt-1) (A.3)</formula><p>that is, the latent codes zt-1 is a sufficient statistic for x k t given the history. We say that p θ has deterministic latents if p θ (zt | z1:t-1, (x ks s ) 1≤s&lt;t , x k t t ) is a Dirac delta. Remark 1. In order for p θ to have deterministic latents and correspond to a valid probability distribution, we need to view the latents zt not as individual variables, but as a collection of variables zt(k1:t) indexed by t ∈ [T ] and the history of noise levels k1:t ∈ {0, 1, . . . , K} t . In this case, simply setting zt(k1:t) = (k1:t, (x ks s ) 1≤s≤t tautologically produces deterministic latents. The reason for indexing zt(k1:t) with k1:t then arises because, otherwise, p θ (zt | ((x ks s ) 1≤s≤t , (x</p><formula xml:id="formula_12">k ′ s s ) 1≤s≤t</formula><p>) would be ill-defined unless ks = k ′ s for all 1 ≤ s ≤ t, and thus, p θ would not correspond to a joint probability measure. The exposition and theorem that follows allow zt(k1:t) to be indexed on past noise levels k1:t but suppresses dependence on k1:t to avoid notational confusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1 Main Results</head><p>We can now state our main theorem, which provides an evidence lower bound (ELBO) on the expected loglikelihood of partially-noised sequences (x k t t ) 1≤t≤T , under uniformly sampled levels kt and x k t t obtained by noising according to q(•) as in (A.1). Notice that this formulation does not require an explicit for of q(•) or p θ , but we will specialize to Gaussian diffusion in the following section. Theorem A.1. Fix x 0 1:T . Define the expectation over the forward process with random noise level k1:T as</p><formula xml:id="formula_13">E forward [•] := E k 1 ,...,k T unif ∼ [K] E x ks s ∼q(x ks s |x 0 s ),1≤s≤T [•], (A.4)</formula><p>and the expectation over the latents under p θ (•) conditioned on k1:T , (x</p><formula xml:id="formula_14">k t s ) 1≤t≤T as E p,z 1:T [•] := E zs∼p(zs|z s-1 ,x ks s ),s≤T • | k1:T , (x k t t ) 1≤t≤T (A.5)</formula><p>Then, as long as p θ satisfies the Markov property,</p><formula xml:id="formula_15">E forward [ln p θ ((x k t t ) 1≤t≤T )] ≥ C(x 0 1:T ) + E forward E p,z 1:T T t=1 1 K + 1 ln p θ (x 0 t | x 1 t , zt-1) + K j=2 j K + 1 D KL q(x j-1 t | x j t , x 0 t ) ∥ p θ (x j t | x j-1 t , zt-1) ,</formula><p>where C(x 0 1:T ) is a constant depending only on x 0 1:T (the unnoised data). Moreover, if the latents are deterministic (i.e. p θ (zt | zt-1, x k t t ) is a Dirac distribution), then the inequality holds with inequality if and only if q(x k t +1:</p><formula xml:id="formula_16">T t | x k t t ) ≡ p θ (x k t +1:T t | x k t t , zt<label>-1)</label></formula><p>, i.e. the variational approximation is exact.</p><p>The proof of the above theorem is given in Appendix A.2. Remarkably, it involves only two inequalities! The first holds with equality under deterministic latents and the second holds if and only if variational approximation is exact:</p><formula xml:id="formula_17">q(x k t +1:T t | x k t t ) ≡ p θ (x k t +1:T t | x k t t , zt-1)</formula><p>. This tightness of the ELBO suggests that the expression in Theorem A.1 is a relatively strong surrogate objective for optimizing the likelihoods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1.1 Specializing to Gaussian diffusion</head><p>We now special Theorem A.1 to Gaussian diffusion. For now, we focus on the "x-prediction" formulation of diffusion, which is the one used in our implementation. The "ϵ-prediction" formalism, used throughout the main body of the text, can be derived similarly (see Section 2 of <ref type="bibr" target="#b6">[7]</ref> for a clean exposition). The following theorem follows directly by apply standard likelihood and KL-divergence computations for the DDPM <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b6">7]</ref> to Theorem A.1.</p><formula xml:id="formula_18">Corollary A.2. Let q(x k+1 | x k t ) = N (x k ; 1 -β k x k-1 , β k I), (A.6)</formula><p>and define</p><formula xml:id="formula_19">α k = (1 -β k ), ᾱk = k j=1 αj. Suppose that we parameterize p θ (x j t | x j+1 t , zt-1) = N (µ θ (x j+1 t , zt-1, j), σ 2 j )</formula><p>, where further,</p><formula xml:id="formula_20">µ θ (x j t , zt-1, j) = (1 -ᾱj-1) √ αj 1 -ᾱj x j t + (1 -αj) √ ᾱj-1 1 -ᾱj xθ (x j t , zt-1, j), σ 2 j := (1 -αj)(1 - √ ᾱj-1)</formula><p>1 -ᾱj .</p><p>Then, as long as p θ satisfies the Markov property, we obtained</p><formula xml:id="formula_21">E forward [ln p θ ((x k t t ) 1≤t≤T )] + C(x 0 1:T ) ≥ E forward E p,z 1:T T t=1 j K + 1 K j=1 cj∥x 0 θ (x j t , zt-1, j) -x 0 t ∥ 2 = E forward E p,z 1:T T t=1 1{kt ≥ 1} • ktc k t ∥x 0 θ (x k t t , zt-1, kt) -x 0 t ∥ 2 ,</formula><p>where above, we define cj =</p><formula xml:id="formula_22">(1-α j ) 2 ᾱj-1 2σ 2 (1-ᾱj ) 2 .</formula><p>Proof. The first inequality follows from the standard computations for the "x-prediction" formulation of Diffusion (see Section 2.7 of <ref type="bibr" target="#b6">[7]</ref> and references therein). The second follows by replacing the sum over j with an expectation over kt unif ∼ {0, 1, . . . , K}.</p><p>We make a couple of remarks:</p><p>• As noted above, Corollary A.2 can also be stated for ϵ-prediction, or the so-called "v-prediction" formalism, as all are affinely related.</p><p>• Define an idealized latent zt-1 consisting of all past tokens (x k t t ) as well as of their noise levels kt. This is a sufficient statistic for zt-1, and thus we can always view x0 θ (x k t t , zt-1, kt) = x0 θ (x k t t , zt-1, kt), where zt-1 is just compressing zt-1. When applying the expectation of x1:T ∼ q to both sides of the bound in Corollary A.2, and taking an infimum over possible function approximator x0 θ , we obtain inf</p><formula xml:id="formula_23">p θ E q E forward E p,z 1:T ∥x 0 θ (x k t t , zt-1, kt) -x 0 t ∥ 2 = inf p θ E q E forward E p,z 1:T ∥x 0 θ (x k t t , zt-1) -x 0 t ∥ 2 = Varq[x 0 t | (x ks s ) 1≤s≤t , k1, . . . , kt]</formula><p>. This leads to a striking finding: with expressive enough latents and p θ , we can view the maximization of each term in Corollary A.2 separately across time steps. The absence of this coupling means that the weighting terms are immaterial to the optimization, and thus can be ignored.</p><p>• Given the above remarks, we can optimize the ELBO by taking gradients through the objective specified by Corollary A.2, and are free to drop any weighting terms (or rescale them) as desired. Backpropagation through Ep,z 1:T is straightforward due to deterministic latents. This justifies the correctness of our training objective (3.1) and protocol Algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1.2 Capturing all subsequences</head><p>Theorem A.1 stipulates that, up to reweighting, the Diffusion Forcing objective optimizes a valid ELBO on the expected log-likelihoods over uniformly sampled noise levels. The following theorem can be obtained by a straightforward modification of the proof of Theorem A.1 generalizes this to arbitrary (possibly temporally correlated) sequences of noise. [ln p θ ((</p><formula xml:id="formula_24">x k t t ) 1≤t≤T )] ≥ C(x 0 1:T ) + E forward,D E p,z 1:T T t=1</formula><p>Ξt , where</p><formula xml:id="formula_25">Ξt := Pt(1 | k1:t-1) ln p θ (x 0 t | x 1 t , zt-1) + K j=2 jPt(j | k1:t-1)D KL q(x j-1 t | x j t , x 0 t ) ∥ p θ (x j t | x j-1 t , zt-1) ,</formula><p>where C(x 0 1:T ) is a constant depending only on x 0 1:T (the noise-free data), and where the inequality is an equality under the conditions that (a) p θ (zt | zt-1, x k t t ) is a Dirac distribution (deterministic latents), and (b)</p><formula xml:id="formula_26">q(x k t +1:T t | x k t t ) ≡ p θ (x k t +1:T t | x k t t , zt-1), i.e</formula><p>. the variational approximation is sharp. In particular, in the Gaussian case of Corollary A.2, we have</p><formula xml:id="formula_27">E forward,D [ln p θ ((x k t t ) 1≤t≤T )] + C(x 0 1:T ) ≥ E forward,D E p,z 1:T T t=1 1{kt ≥ 1}ktc k t ∥x 0 θ (x k t t , zt-1, kt) -x 0 t ∥ 2 ,</formula><p>The most salient case for us is the restriction of D to fixed sequences of noise k1, . . . , kT (i.e. Dirac distributions on [K] T ). In this case, Pt(j | k1:t-1) = 0 for all but j = kt, and thus our training objective need not be a lower bound on E forward,D [ln p θ ((x k t t ) 1≤t≤T )]. However, the terms in the lower bound are, up to reweighting, an subset of those terms optimized in the training objective. Thus, in light of the remarks following Corollary A.2, a fully expressive network can optimize all the terms in the loss simultaneously. We conclude that, for a fully expressive neural network, optimizing the training objective (3.1) is a valid surrogate for maximizing the likelihood of all possible noise sequences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 Proof of Theorem A.1</head><p>Define E&lt;t[•] as shorthand for E</p><formula xml:id="formula_28">k 1:s unif ∼ [K] E x ks s ∼q(x ks s |x 0 s ),1≤s≤t-1 E zs∼p(zs|z s-1 ,x ks s ),s≤t [•].</formula><p>We begin with the following claim Claim 1 (Expanding the latents). The following lower bound holds:</p><formula xml:id="formula_29">E forward [ln p θ ((x k t t ) 1≤t≤T )] ≥ T t=1 E &lt;t E k t unif ∼ {0,1,...,K} E x k t t ∼q(x k t t |x 0 t ) ln p θ (x k t t | zt-1) , (A.9)</formula><p>Moreover, this lower bound holds with equality if zs ∼ p(zs | zs-1, x ks s ) is a Dirac distribution (i.e., deterministic latents).</p><p>Proof. Let's fix a sequence k1:T . It holds that</p><formula xml:id="formula_30">p θ ((x k t t ) 1≤t≤T ) = z 1:T T t=1 p(x k t t , zt | (x ks s , zs)s&lt;t) = z 1:T T t=1 p(x k t t , zt | zt-1) (Markov Property) = z 1:T (k) T t=1 p(zt | zt-1, x k t t )p θ (x k t t | zt-1) = E zs∼p(zs|z s-1 ,x ks s ),s≤T T t=1 p θ (x k t t | zt-1). (Importance Sampling)</formula><p>Thus, by Jensen's inequality,</p><formula xml:id="formula_31">ln p θ ((x k t t ) 1≤t≤T ) ≥ E zs∼p(zs|z s-1 ,x ks s ),s≤T T t=1 ln p θ (x k t t | zt-1) = E p,z 1:T T t=1 ln p θ (x k t t | zt-1) ,</formula><p>where the inequality is and equality when p θ (zs | zs-1, x ks s ) is a Dirac distribution. By applying E forward to both sides of the above display, and invoking the Markov property of the latents, we conclude that</p><formula xml:id="formula_32">E forward [ln p θ ((x k t t ) 1≤t≤T )] ≥ E forward E p,z 1:T T t=1 ln p θ (x k t t | zt-1) = T t=1 E &lt;t E k t unif ∼ {0,1,...,K} E x k t t ∼q(x k t t |x 0 t ) ln p θ (x k t t | zt-1)</formula><p>.</p><p>We now unpack the terms obtained from the preceding claim. Claim 2 (ELBO w.r.t. q). It holds that</p><formula xml:id="formula_33">E x k t t ∼q(x k t t |x 0 t ) ln p θ (x k t t | zt-1) ≥ C1(x0, kt) + E x k t :K t ∼q(x k t :K t |x 0 t ) ln p θ (x k t :K t | zt-1) q(x k t +1:K t | x 0 t )</formula><p>.</p><p>where C1(x0, kt) is a constant depending only on x0 and kt, and where the inequality holds with equality if and only if q(x k t +1:</p><formula xml:id="formula_34">T t | x k t t ) ≡ p θ (x k t +1:T t | x k t t , zt-1).</formula><p>Proof. We have that</p><formula xml:id="formula_35">E x k t t ∼q(x k t t |x 0 t ) ln p θ (x k t t | zt-1) = E x k t t ∼q(x k t t |x 0 t ) ln p θ (x k t :K t | zt-1)dx k t +1:K t = E x k t t ∼q(x k t t |x 0 t ) ln E x k t +1:K t ∼q(x k t +1:K t |x k t t ) p θ (x k t :K t | zt-1) q(x k t +1:K t | x k t t ) ≥ E x k t t ∼q(x k t t |x 0 t ) E x k t +1:K t ∼q(x k t +1:K t |x k t t ) ln p θ (x k t :K t | zt-1) q(x k t +1:K t | x k t t ) ((Jensen's inequality)) = E x k t :K t ∼q(x k t :K t |x 0 t ) ln p θ (x k t :K t | zt-1) q(x k t +1:K t | x k t t ) (Markov property of q(•)) = C1(x0, kt) + E x k t :K t ∼q(x k t :K t |x 0 t ) ln p θ (x k t :K t | zt-1) q(x k t +1:K t | x 0 t )</formula><p>,</p><formula xml:id="formula_36">where the constant C1(x0, kt) = E x k t :K t ∼q(x k t :K t |x 0 t ) ln q(x k t +1:K t |x 0 t ) q(x k t +1:K t |x k t t )</formula><p>depends only on x0 and kt. To check the conditions for equality, note that if q(x k t +1:</p><formula xml:id="formula_37">T t | x k t t ) ≡ p θ (x k t +1:T t | x k t t , zt-1), then E x k t +1:K t ∼q(x k t +1:K t |x k t t ) ln p θ (x k t :K t | zt-1) q(x k t +1:K t | x k t t ) = ln p θ (x k t t | zt-1) + E x k t +1:K t ∼q(x k t +1:K t |x k t t ) ln p θ (x k t +1:K t | zt-1, x k t t ) Since ln(•) is strictly concave, E x k t +1:K t ∼q(x k t +1:K t |x k t t ) ln p θ (x k t t | zt-1) = 0 if and only if p θ (x k t +1:K t | zt-1, x k t t ) = q(x k t +1:K t | x k t t ). Claim 3 (Computing the expected ELBO). E x k t :K t ∼q(x k t :K t |x 0 t ) ln p θ (x k t :K t | zt-1) q(x k t +1:K t | x 0 t ) = C3(x0, kt) + 1{kt = 0} ln p θ (x 0 t | x 1 t , zt-1) + K-1 j=1 1{j ≥ kt}D KL q(x j t | x j+1 t , x 0 t ) ∥ p θ (x j t | x j+1 t , zt-1) ,</formula><p>where C2(x0, kt) is some other constant depending on x0 and kt.</p><p>noise. By labeling the future as full white noise, there is no information leaked into the past tokens. By labeling future tokens as free of noise, we make the model completely non-causal. By labeling the future tokens as noisy, a slight amount of information about the future is provided for the prediction of past tokens. This effectively states that one only needs a non-causal architecture, but controlling fractional noise of the future, to achieve partial or complete causality. These extensions are beyond the scope of this paper, but we already verified their effectiveness and thus provide them as intuitions for future works.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.2 The need for independent noise levels</head><p>When training Diffusion Forcing, we choose to sample per-token noise level following i.i.d uniform distribution from [1, 2...K]. One may wonder about the necessity of this choice. Here we discuss the unique abilities of independent noise and the compute overhead added by it.</p><p>The use of independent noise confers a number of special capabilities in our model, including stabilization of autoregressive rollout 3.3, modeling causal uncertainty 3.3, and removing the need for expensive reconstruction guidance when conditioning on context B.6. None of these capabilities can be achieved by full-sequence diffusion. AR-diffusion <ref type="bibr" target="#b66">[67]</ref> and Rolling Diffusion <ref type="bibr" target="#b51">[52]</ref> can only achieve the first and third one. There are more sampling-time applications such as flexible frame interpolation. Finally, we also saw the practical benefits of using independent noise in hyperparameter tuning. One can simply try different sampling schemes to figure out the most effective one for their applications. All these capabilities only require training the model once with Diffusion Forcing. In contrast, any tuning of the sampling scheme would require re-training the model for AR-diffusion and Rolling Diffusion.</p><p>On the other hand, we didn't observe much computing overhead when comparing Diffusion Forcing to fullsequence diffusion, as soon as one closely follows our training techniques like D.1. The empirical evidence is based on our experiments with an experimental transformer implementation of Diffusion Forcing and is thus not fully consistent with the main paper. However, we present the high-level descriptions below for readers interested in more insights: The complexity added by independent noise levels is in the temporal dimension. Therefore, we first adopt a standard technique for video diffusion models -image pre-training, to abstract away the complexity of the image pixels themselves. Then the complexity left is temporal prediction only. We then take the pre-trained image-only model and continue training it on video data. It turns out the sampling result of Diffusion Forcing with fewer training steps in this second stage is already better than that of full-sequence diffusion at convergence. We speculate that the better result is due to the same data-augmentation effect described in prior works <ref type="bibr" target="#b39">[40]</ref>. This shows that the overhead added by independent noise is well-warranted when considering the overall training compute (including image pre-training).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.3 Guidance as planning</head><p>As stated in Section 2, one can use the gradient of the logarithmic of a classifier log c(y|x k t ) to guide the sampling process of diffusion model towards samples with a desired attribute y. For example, y can refer to the indicator of a success event. However, we can consider the logarithmic of a more general energy function c(x k t ). This has the interpretation as Pr y|x k t , where Pr y = 1 | x k t = e c(x k t ) . Some popular candidate energies include</p><formula xml:id="formula_38">c(x k t ) = E t ′ &gt;t r′ (x k t ′ t ′ ) | x k t , (B.1)</formula><p>corresponding to a cost-to-go; we can obtain unbiased estimates of this gradient by using cumulative reward c(</p><formula xml:id="formula_39">x k t ) = t ′ &gt;t r′ (x k t ′ t ′ ).</formula><p>We can also use goal distance c = -∥x k T T -g∥ 2 as a terminal reward. We provide details about the guidance function deployed in the maze2d planning experiment in Appendix D.5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.4 Noising and stabilizing long-horizon generations</head><p>Here, we explain in detail how we use noising to stabilize long-horizon generation. At each time t, during the denoising, we maintain a latent z k small t-1 from the previous time step, with 0 &lt; k small ≪ K corresponding to some small amount of noise. We then do next token diffusion to diffuse the token xt across noise levels x K t , x K-1 t , . . . , x 0 t (corresponding to Algorithm 2 with horizon T = 1, initial latent z k t-1 , and noise schedule Km,1 = m); this process also produces latents z K t , z K-1 t , . . . , z 0 t associated with each noise level. From these, we use the latent z k small t to repeat the process. This noised latent can be interpreted as an implementation of conditioning on x k small t in an autoregressive process. In a potential transformer implementation of Diffusion Forcing as we discussed in Appendix B.1, one can instead run a forward diffusion on a fully diffused token to achieve stabilization.</p><p>It is widely appreciated that adding noise to data ameliorates long-term compounding error in behavior cloning applications <ref type="bibr" target="#b38">[39,</ref><ref type="bibr" target="#b42">43]</ref>, and even induces robustness to non-sequential adversarial attacks <ref type="bibr" target="#b12">[13]</ref>. In autoregressive Then, it feeds the diffused x 0 2 into the model but tells it is of a higher noise level, as x 1 2 .</p><p>[</p><formula xml:id="formula_40">x 1 1 , x 1 2 , x K//2 3 ] ⊤ , [x 1 1 , x 1 2 , x 0 3 ] ⊤ .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C Extended Related Work</head><p>Reconstructing masked tokens. Masked Autoencoders for images <ref type="bibr" target="#b26">[27]</ref> and videos <ref type="bibr" target="#b16">[17]</ref> are a popular method for representation learning in pixel space. They have been extended to perform diffusion to generate masked patches conditioned on unmasked ones <ref type="bibr" target="#b62">[63,</ref><ref type="bibr" target="#b18">19]</ref>.</p><p>Casting Image Generation as Sequence Generation. <ref type="bibr" target="#b60">[61,</ref><ref type="bibr" target="#b7">8]</ref> show that even generative modeling of non-sequential data, such as images, can be fruitfully cast as sequence generative modeling.</p><p>Non-Diffusion Probabilistic Sequence Models. <ref type="bibr" target="#b11">[12]</ref> parameterize token-to-token transitions via a variational auto-encoder. This makes them probabilistic, but does not directly maximize the joint probability of sequences, but rather, enables sampling from the distribution of single-step transitions.</p><p>Sequence Diffusion with Varying Noise Levels. Most similar to our work is AR-Diffusion <ref type="bibr" target="#b65">[66]</ref> which similarly aims to train next-token prediction models for sequence diffusion. Key differences are that AR-Diffusion proposes a noise level that is linearly dependent on the position of each word in the sequence, while our critical contribution is to have each noise level be independent, as this uniquely enables our proposed sampling schemes, such as stabilizing auto-regressive generation and conditioning on corrupted observations. Further, AR-Diffusion only explores language modeling and does not explore guidance, while we investigate Diffusion Forcing as a broadly applicable sequence generative model with particular applications to sequential decision-making. In particular, we introduce Monte-Carlo Guidance as a novel guidance mechanism. Another closely related work is Rolling Diffusion <ref type="bibr" target="#b51">[52]</ref>, which proposes to diffuse a sequence with near future more certain and far future more uncertain, resembling the causally uncertain sampling scheme of Diffusion Forcing. Like AR-Diffussion, Rolling Diffusion's training noise levels are linearly dependent on the positions of tokens and must use the exact same noise level scheme at sampling time. It, therefore, shares the aforementioned limitations of AR-Diffusion as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D Additional Method Details D.1 Fused SNR reweighting</head><p>SNR reweighting <ref type="bibr" target="#b23">[24]</ref> is a widely used technique to accelerate the convergence of image diffusion models. In short, it reweighs the diffusion loss proportional to the signal-to-noise ratio (SNR) of noisy x k . In Diffusion Forcing, conditioning variable zt-1 can also contain a non-trivial amount of information about xt, in addition to x k t t . For example, in a deterministic markovian system, if</p><formula xml:id="formula_41">x k t-1</formula><p>t-1 has its noise level kt-1 = 0, the posterior state zt-1 contains all the information needed to predict x 0 t regardless of the noise level of x k t t . Therefore we re-derive SNR reweighting to reflect this change in Diffusion Forcing. We call this technique Fused SNR reweighting. We follow the intuition of original SNR reweighting to loosely define SNR in a sequence with independent levels of noises at different time steps. Denote St as the normalized SNR reweighting factor for x k t t following its normal derivation in diffusion models. For example, if one uses min snr strategy <ref type="bibr" target="#b23">[24]</ref>, its reweighting factor will always fall between [0, C] which we divide by C to get St ∈ [0, 1]. Define signal decay factor 0 &lt; γ &lt; 1, measuring what proportion of signal in x k t-1 t-1 contribute to denoising x k t t . This is the simple exponential decay model of sequential information. Now, define cumulated SNR recursively as the running mean of St: St = γ St-1 + (1 -γ)St to account for signals contributed by the entire noisy history to the denoising at time step t. The other factor that contributes to the denoising is St of noisy observation x k t t . To combine them, we use a simplified model for independent events. Notice St and St always falls in range [0, 1], and therefore can be reinterpreted as probabilities of having all the signal one needs to perfect denoise x k t t . Since the noise level at t is independent of prior noise levels, we can view St and St-1 as probabilities of independent events and thus can composed to define a joint probability</p><formula xml:id="formula_42">S ′ t = 1 -(1 -St)(1 -St-1</formula><p>), and we use this S ′ t as our fused SNR reweighting factor for diffusion training. In our experiments, we choose to follow the min-SNR reweighting strategy <ref type="bibr" target="#b23">[24]</ref> to derive the S. Our Fused SNR reweighting proves extremely useful to accelerate the convergence of video prediction, while we didn't observe a boost on non-image domains so we didn't use it there.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.2 Architecture</head><p>Video Diffusion We choose both the raw image x and latent state z to be 2D tensors with channel, width, and height. For simplicity, we use the same width and height for x and z. We then implement the transition model p(x k t t |zt-1) with a typical diffusion U-net <ref type="bibr" target="#b46">[47]</ref>. We use the output of the U-net as the input to a gated recurrent unit (GRU) and use zt-1 as the hidden state feed into a GRU. The output of GRU is treated as zt. For observation model p(xt|zt), we use a 1-layer resnet <ref type="bibr" target="#b27">[28]</ref> followed by a conv layer. We combine these two models to create an RNN layer, where the latent of a particular time step is zt-1, input is x k t t and output is x. One can potentially obtain better results by training Diffusion Forcing with a causal transformer architecture. However, since RNN is more efficient for online decision-making, we also stick with it for video prediction and it already gives us satisfying results.</p><p>We choose the number of channels in z to be 16 for DMlab and 32 for Minecraft. In total, our Minecraft model consists of 36 million parameters and our DMlab model consists of 24 million parameters. We can potentially obtain a better Minecraft video prediction model with more parameters, but we defer that to future works to keep the training duration reasonable (&lt; 1 day). In maze planning, the number of total parameters is 4.33 million.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Non-Video Diffusion</head><p>For non-spatial x that is not video nor images, we use residue MLPs <ref type="bibr" target="#b59">[60]</ref> instead of Unet as the backbone for the dynamics model. Residue MLP is basically the ResNet <ref type="bibr" target="#b27">[28]</ref> equivalent for MLP. Similar to video prediction, we feed the output of resMLP into a GRU along with zt-1 to get zt. Another ResMLP serves as the observation model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.3 Diffusion parameterization</head><p>In diffusion models, there are three equivalent prediction objectives, x0, ϵ <ref type="bibr" target="#b28">[29]</ref>, and v parameterization <ref type="bibr" target="#b52">[53]</ref>. Different objectives lead to different reweighting of loss at different noise levels, together with SNR reweighting. For example, ϵ parameterization and v parameterization are essential in generating pixel data that favors high-frequency details.</p><p>In our experiments, we use v parameterization for video prediction and found it essential to both convergence speed and quality.</p><p>We observe that x0 parameterization is strongly favorable in planning and imitation learning, likely because they don't favor an artificial emphasis on high-frequency details. We observe the benefits of v-parameterization in time-series prediction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.4 Noise schedule</head><p>We use sigmoid noise schedule <ref type="bibr" target="#b8">[9]</ref> for video prediction, linear noise schedule for maze planning, and cosine schedule for everything else.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.5 Implementation Details of Sampling with Guidance</head><p>Corner case of sampling noise In our sampling algorithm, due to the flexibility of the scheduling matrix K, there are corner cases when x k t t is required to stay at its same noise level during a sampling step. The core question of this corner case is whether we should updatex k t t at all. One option is just copying over the old value. The other option is to run a backward diffusion followed by a forward diffusion back to its old noise level to resample under the diffusion process. While we conclude this can be an open question, we prefer the later approach, resampling, and use it in Monte Carlo Guidance to generate multiple samples. We note that even if one takes the first approach, the guidance gradient can still flow back in the time steps before t as the dynamics model p(zt|x k t t , zt-1) can still propagate the guidance gradient to zt-1. Other than Monte Carlo Guidance, this corner case only happens when kt = 0 or kt = K throughout our experiments. That is, we chose our K such that once any token gets diffused slightly, it will keep diffusing. In the case of kt = K, keeping x k t t at the same noise level implies it will stay as white noise, and we don't even need to sample another white noise. In case kt = 0, the time step is already completely diffused either approach should give us the same result so we just opt for copying over for simplicity.</p><p>Guidance for maze planning In maze planning, our main baseline Diffuer <ref type="bibr" target="#b36">[37]</ref> discards the reward from the dataset and directly plans with the goal position and velocity. We adopt the same convention for Diffusion Forcing. One can perform guidance on goal position using log-likelihood ||pT -g||, but a flexible horizon model should not require users to manually specify a T to reach its goal, instead we want it to try to reach the goal for any possible horizon. Therefore we use the reward model t ||pT -g|| so any time step can be the final step to reach the goal. This objective is challenging due to the non-convex nature of 2D maze, but we found Diffusion Forcing can still reliably find plans without bumping into walls. However, we also observe that the agent tend to leave the goal location due to the nature of the provided dataset -the goal location is just one possible waypoint for the robot to pass through, and there are no trajectories that simply stay at the goal. We also tried this reward for guidance with Diffuser, but it didn't work even with a good amount of tuning.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.6 Performance Optimization</head><p>Accelerating the diffusion sampling of Diffusion Forcing is similar to that of normal diffusion models. We adopt DDIM <ref type="bibr" target="#b57">[58]</ref> sampling for the diffusion of each token. While we use K = 1000 steps of diffusion, we sample with only 100 DDIM for video prediction and 50 for non-video domains.</p><p>While Diffusion Forcing can be implemented with transformers, we use an RNN as the backbone for Diffusion Forcing experiments it's widely used in decision-making for its flexibility and efficiency in online decisionmaking systems. To further reduce training time and GPU memory usage, we use frame-stacking to stack multiple observed images as a single x. This is due to the fact that adjacent tokens can be very similar -e.g. recording the same motion at higher fps can lead to this. We deem that it's wasteful if we roll out the dynamics model multiple times to generate almost identical tokens. For video datasets, we manually examine how many time steps it takes to require a minimal level of prediction power instead of copying frames over. There is another reason why we use frame stacking -many diffusion model techniques such as different noise schedules are designed to model x with correlated elements or redundancy. Low-dimensional systems may need drastically different hyperparameters when they lack the data redundancy these techniques are tested on. Frame stacking is thus also helpful for our non-image experiments so we can start with canonical hyperparameters of diffusion models. We use a frame stack of 4 for DMlab video prediction, 8 for Minecraft, and 10 for maze planning.</p><p>At sampling time, we also have a design choice to reduce compute usage, as reflected in line 8 of Algorithm 2. In line 8, we directly assign z new t to zt, instead of recalculating zt with posterior model p(zt|zt-1, x new t , k -1). Since the model is trained to condition on zt estimated from arbitrary noisy history, we recognize that both are valid approaches. The reason why the choose line 8 is twofold. First, it cuts the compute by half, avoiding computing posterior every step. Second, this happens to be what we want for stabilization -z new t already contains the information of the clean x new t under our simplified observation model, and happens to be estimated with k = kt, a noise level higher than that of x new t . This happens to implement the behavior we want for stabilization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.7 Sampling schedule for causal uncertainty</head><p>Inference is depicted in Algorithm 2 and Figure <ref type="figure" target="#fig_0">2</ref>. In Equation D.1, we illustrate a specific instantiation of the K matrix we used for causal planning. For simplicity, we denote the case where a latent z0 is given and aim to generate x1:H+1.</p><formula xml:id="formula_43">K pyramid =                K K K ... K K -1 K K ... K K -2 K -1 K ... K . . . . . . . . . . . . . . . 1 2 3 ... H 0 1 2 ... H -1 . . . . . . . . . . . . . . . 0 0 0 ... 1 0 0 0 ... 0                (D.1)</formula><p>Diffusion Forcing begins by sampling our sequences as white noise with noise level K. It then denoises along each row m = 1, . . . , M of K in decreasing order. It does so by proceeding sequentially through frames t = 1, . . . , T , updating the latent (Line 5 of Algorithm 2), and then partially applying the backward process to noise level k = Km,t dictated by the scheduling matrix K (Line 6-7 of Algorithm 2). We call a K like this pyramid scheduling, as the tokens in the far future are kept at higher noise level than near future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.8 Metrics for Maze Planning</head><p>We report the episode reward of Diffusion Forcing for different maze planning environments in Table <ref type="table">1</ref>. However, we found that the episode reward isn't necessarily a good metric: Intuitively, maze planning should reward smart agents that can find the fastest route to the goal, not a slow-walking agent that goes there at the end of the episode. The dataset never contains data on the behavior of staying at the goal, so agents are supposed to walk away after reaching the goal with sequence planning methods. Diffuser may had an unfair advantage of just generating slow plans, which happens to let the agent stay in the neighborhood of the goal for more steps and get a very high reward as a result. This metric seems to exploit flaws in the environment design -a good design would involve a penalty of longer time taken to reach the goal. Therefore, in future works based on our paper, we encourage alternative metrics like the time it takes to reach the goal for the first time, which Diffusion Forcing excels at. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.9 Implementation Details of Timeseries Regression</head><p>We follow the implementation of pytorch-ts, where the validation set is a random subset of the training set with the same number of sequences as the test set. We use early stopping when validation crps-sum hasn't increased for 6 epochs. We leverage the same architecture (1 mlp and 4 grus) as well as a batch size of 32.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.10 Compute Resources</head><p>All of our experiments use f p16 mixed precision training. Time series, maze planning, compositionally, and visual imitation experiments can be trained with a single 2080T i with 11GB of memory. We tune the batch size such that we fully use the memory of GPUs. This translates to a batch size of 2048 for maze planning and compositional experiments, and 32 for visual imitation learning. While we use early stopping on the validation set for time series experiments, we did not carefully search for the minimal number of training steps required, though the model usually converges between 50k to 100k steps. The above environments thus usually take 4 -8 hours to train although there is without doubt a significant potential for speed up.</p><p>Video prediction is GPU intensive. We use 8 A100 GPUs for both video prediction datasets. We train for 50K steps with a batch size of 8 × 16. It usually takes 12 hours to converge at 40K steps of training (occasional validation time also included).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E Additional Experiment Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E.1 Multivariate Probabilistic Time Series Forecasting</head><p>To illustrate Diffusion Forcing's new training objective does not degrade it as a generic sequence model, we evaluate Diffusion Forcing on high-dimensional and long-horizon sequence prediction tasks in time series prediction. We adopt multiple time series datasets with real-world applications from GluonTS <ref type="bibr" target="#b1">[2]</ref> and evaluate Diffusion Forcing with strong baselines with standard metrics in this domain. In this section, we mainly focus on the results and analysis. For a detailed description of datasets and the metric, we refer the reader to Appendix F.4.</p><p>Problem Formulation Let X = {xt} T t=1 be a sequence (multivariate time series) of D-dimensional observations xt ∈ R D of some underlying dynamical process, sampled in discrete time steps t ∈ {1, . . . , T }, where T ∈ N. In the problem setting of probabilistic time series forecasting, the sequence X = {Xc, Xp} is split into two subsequences at time step t0 ∈ N with 1 &lt; t0 ≤ T : the context window Xc := {xt} t 0 -1 t=1 (also called history or evidence) of length t0 -1, and the prediction window Xp := {xt} T t=t 0 of length T -t0 + 1</p><p>(also known as the prediction horizon). Then, the task is to model the conditional joint probability distribution</p><formula xml:id="formula_44">q(xt 0 :T | x1:t 0 -1) := T t=t 0 q(xt | x1:t-1) (E.1)</formula><p>over the samples in the prediction window. If we know the distribution in (E.1), we can sample forecast prediction sequences given some initial context from the evidence sequence. However, most time-dependent data generation processes in nature have complex dynamics and no tractable formulation of q(xt 0 :T | x1:t 0 -1).</p><p>Instead, we construct a statistical model that approximates the generative process in (E.1) and estimates quantiles via Monte Carlo sampling of simulated trajectories. In this way, confidence levels or uncertainty measures can be calculated, and point forecasts can be produced as the mean or median trajectory <ref type="bibr" target="#b35">[36]</ref>. The features of each dataset are detailed in Table <ref type="table" target="#tab_6">3</ref>. We access the datasets from GluonTS <ref type="bibr" target="#b1">[2]</ref>, and set the context and prediction windows to the same length for each dataset. Additionally, we employ the same covariates as <ref type="bibr" target="#b49">[50]</ref>. We evaluate the performance of the model quantitatively by estimating the Summed Continuous Ranked Probability Score CRPSsum via quantiles. As a metric, CRPSsum measures how well a forecast distribution matches the ground truth distribution. We provide detailed descriptions of the metric in Appendix F.4. We benchmark with other diffusion-based methods in time series forecastings, such as TimeGrad <ref type="bibr" target="#b49">[50]</ref> and the transformer-based Transformer-MAF <ref type="bibr" target="#b50">[51]</ref>. In particular, the main baseline of interest, TimeGrad <ref type="bibr" target="#b49">[50]</ref>, is a nexttoken diffusion sequence model trained with teacher forcing. We track the CRPSsum metric on the validation set and use early stopping when the metric has not improved for 6 consecutive epochs, while all epochs are fixed to 100 batches across datasets. We then measure the CRPSsum on the test set at the end of the training, which we report in Table <ref type="table" target="#tab_5">2</ref>. We use the exact same architecture and hyperparameters for all time series datasets and experiments. Diffusion Forcing outperforms all prior methods except for <ref type="bibr" target="#b67">[68]</ref> with which Diffusion Forcing is overall tied, except for the Wikipedia dataset, on which Diffusion Forcing takes fourth place. Note that time series is not the core application of Diffusion Forcing, and that we merely seek to demonstrate that the Diffusion Forcing objective is applicable to diverse domains with no apparent trade-off in performance over baseline objectives.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E.2 Additional results in compositional generation</head><p>Since Diffusion Forcing models the joint distribution of any subset of a sequence, we can leverage this unique property to achieve compositional behavior -i.e., Diffusion Forcing can sample from the distribution of subsets of the trajectory and compose these sub-trajectories into new trajectories.</p><p>In particular, we show that we can also have flexible control over how compositional Diffusion Forcing is. As shown in 7, consider a dataset of trajectories on a 2D, square plane, where all trajectories start from one corner and end up in the opposite corner, forming a cross shape. When no compositional behavior is desired, one can let the models replicate the cross-shaped distribution by allowing full memory of the HMM model. When one desires compositional such as generating a V-shaped trajectory, which stitches two sub-trajectories together, one can let the model generate shorter plans with no-memory context using MPC. (Add figures). That is, we run Diffusion Forcing's RNN continuously without ever reinitializing z0. This is a surprising effect we observed from the rollout stabilization property of Diffusion Forcing. In Figure <ref type="figure" target="#fig_5">8</ref>, 10, we use Diffusion Forcing to generate video sequences of length 180 and visualize subsampled sequences. Notably, Diffusion Forcing used in these visualizations is trained with a maximum length of 72 frames for Minecraft and 36 frames for DMLab, illustrating it can rollout 2x-5x times longer than it's trained on without sliding window. In addition, we also tried rolling these models out for 2000 frames and without seeing the model blowing up on both datasets. There are occasional cases where the Minecraft agent gets stuck and the entire screen is the "dirt" block, but this is more of a dataset issue E.5 and the agent is able to recover after it turns around.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E.4 Additional results in planning</head><p>We provide some additional visualizations of causal planning in 15. We also present additional visualization of Diffusion Forcing performing model predictive control in action. As shown in figure <ref type="figure">14</ref>, Diffusion Forcing can generate plans of shorter horizons since it's flexible horizon. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E.5 Real robot experiment setup</head><p>In Figure <ref type="figure" target="#fig_11">16</ref> we visualize our robot experiment setup with corruption on observation. The dataset is collected when the target bag isn't present, while we test with such a bag in the scene zero-shot for the imitation learning experiment with observation corruption. The typical failure mode is when the robot no longer reacts to the visual clues of the randomized location of objects. We didn't observe the robot act wildly due to visual distractors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F Additional details about datasets F.1 Dataset for video diffusion</head><p>We adopt the video prediction dataset Minecraft and DMlab used by TECO <ref type="bibr" target="#b68">[69]</ref>. One problem we noticed about the dataset is when the agent runs into obstacles with a height of 2 blocks or more. In this case, the agent will get stuck and the entire video sequence will consist of grey granite patterns or brown dirty patterns. This leads to a huge amount of frames with these patterns, making video models predict meaningless frames. Yet, we deem this as a problem of this dataset itself. DMLab Navigation Deepmind Lab navigation dataset consists of random walks in a 3D maze environment.</p><p>For DMLab, the resolution is 64 pixels and we use subsequences of 48 frames. We also disregard the provided actions due to training.</p><p>We note that the VQ-VAE latent that stable video diffusion <ref type="bibr" target="#b3">[4]</ref> diffuses is also only 128 × 128 × 3, indicating Diffusion Forcing has the potential to scale up to higher resolution images with pre-trained image encoder and decoders. Due to the sheer size of the datasets, we only use about 10% of the total data sequences for training due to limited computing, as we observe that doing so already allows us to make good generations from initial frames from the test set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F.2 Dataset for planning</head><p>D4RL <ref type="bibr" target="#b17">[18]</ref> is a standard offline RL benchmark featuring a wide range of reinforcement learning environments. Each environment is associated with a provided dataset of offline interactions with the environment featuring state, action, and reward trajectories.</p><p>Like Diffuer <ref type="bibr" target="#b36">[37]</ref>, we choose the 3 maze environments as they are challenging long-horizon, multi-modal, sparse reward problems uniquely suited for visualization and evaluating planning algorithms. The IDs for the 3 used environments are "maze2d-medium-v1", "maze2d-large-v1", "maze2d-umaze-v1". In each environment, one controls the acceleration of a robot to walk it towards a goal. The observation space is 4 dimensional, featuring 2D location and velocity. The action space is 2D acceleration. The agent always receives a random start location and the goal is to reach a fixed goal position for each maze. The agent receives a reward of 1 if it is within a circle of radius 0.5 centered at the goal state, and 0 otherwise. The offline RL dataset for the maze environments consists of random walks in the maze. Specifically, the authors first designate all intersections and turn in the maze as waypoints and code an agent to navigate between waypoints with some randomization. As a result, the random walks are generated in a way that the path is collision-free with the walls. The random walks introduce stochasticity to the dataset, as trajectories in the dataset are never towards a specific goal.</p><p>There are a few choices adopted from our main baseline Diffuser <ref type="bibr" target="#b36">[37]</ref>: we disregard the reward in the dataset and plan with goals only. We also evaluate a multi-goal variant of each environment (labeled as "multi" in Table <ref type="table">1</ref>), where the goal is randomized just like the starting position.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F.3 Dataset for robot learning</head><p>We choose a long horizon robotic manipulation task as described in Section 4.4: Consider a tabletop with three slots where we can place objects. One places an apple at slot A or slot B randomly, and then places an orange at the other slot between A and B. A robot is challenged to swap the position of two fruits using the third slot C. That is, it can only move a fruit to an empty slot at a time. For example, when the apple is at slot A and the orange is at slot B, it may move the apple to slot C, leaving slot A empty. Then move the orange to slot A and finally move the apple from slot C to slot B. In figure <ref type="figure">4</ref>, we illustrate the non-markovian property of the task: When the apple is at slot B and the orange is at slot C, one cannot tell what the immediate action is without knowing the initial positions of objects.</p><p>We put stickers on the table indicating a circular region occupied by any slot. Each circular region is designed to be about double the diameter of a fruit. To make sure the task requires visual feedback, we also randomize the location of a fruit inside the slot. We collected 150 expert demonstrations of a Franka robot performing the task using VR teleoperation and impedance control. Among them, each initial slot configuration makes up half of the dataset. We record videos from two camera views, one from a hand camera and one in the front capturing all three slots. Each demonstration also comes with 6 dof actions of the robot hand. During the data collection, since one successful demonstration will swap the position of two objects, its end configuration will naturally serve as the starting configuration of the other randomized location, which we leverage to save time.</p><p>Each demonstration comprises 500 -600 frames and actions. We train Diffusion Forcing on the entire sequence. However, since adjacent frames are visually close, we pad and downsample the videos to 40 frames where each frame is bundled with 15 actions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F.4 Dataset for time series</head><p>We use a set of time series datasets accessible via GluonTS <ref type="bibr" target="#b1">[2]</ref>, which are adopted from prior works like <ref type="bibr" target="#b71">[72,</ref><ref type="bibr" target="#b41">42,</ref><ref type="bibr" target="#b55">56]</ref>. These datasets capture real-world data of high-dimensional dynamics like monetary exchange rates or the electricity grid. In Table <ref type="table" target="#tab_6">3</ref>, we provide a summary of the features of these datasets, such as the dimensionality, the domains, the sampling frequency, the length of the multivariate sequence in the training set, and the prediction length. We access the datasets in Table <ref type="table" target="#tab_6">3</ref> via GluonTS and wrap the data processing functions implemented in GluonTS in our own dataloaders. Each dataset consists of one long multivariate sequence, which  being modeled. Therefore, covariates are known for the entire interval [1, T ], even at inference. We can easily incorporate covariates into the probabilistic framework as The benefit obtained from covariates is highly dependent on the characteristics of both the dataset and the model used, as well as the feature engineering practices followed.</p><p>Metric The Continuous Ranked Probability Score (CRPS) <ref type="bibr" target="#b45">[46]</ref> is a scoring function that measures how well the forecast distribution matches the ground truth distribution:</p><formula xml:id="formula_45">CRPS(F, x) = R (F (z) -I {x ≤ z}) 2 dz ,</formula><p>where F (z) is the univariate cumulative distribution function (CDF) over the predicted value, x is a ground truth observation, and I {x ≤ z} is the indicator function that is one if x ≤ z and zero otherwise. By summing the D-dimensional time series along the feature dimension for simulated samples (resulting in Fsum(t)) and ground truth data (as i x 0 i,t ), we can report the CRPSsum CRPSsum = E t∼U (t 0 ,T ) CRPS Fsum(t), as the average over the prediction window. The lower the CRPSsum value, the better the predicted distribution match the data distribution.</p><p>First, we manually sum the time series along the feature dimension and estimate the CDF Fsum(t) via 19 quantile levels at each time step t from 100 sampled trajectories. We then use the implementation in GluonTs <ref type="bibr" target="#b1">[2]</ref> to compute the CRPS, which we report as CRPSsum in Table <ref type="table" target="#tab_5">2</ref>. While we aggregate the data manually, we verify that the numerical error relative to the GluonTS implementation remains orders of magnitude below the precision threshold of the reported metric.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Method Overview. Diffusion Forcing trains causal sequence neural networks (such as an RNN or a masked transformer) to denoise flexible-length sequences where each frame of the sequence can have a different noise level.In contrast, next-token prediction models, common in language modeling, are trained to predict a single next token from a ground-truth sequence (teacher forcing<ref type="bibr" target="#b64">[65]</ref>), and full-sequence diffusion, common in video generation, train non-causal architectures to denoise all frames in a sequence at once with the same noise level. Diffusion Forcing thus interleaves the time axis of the sequence and the noise axis of diffusion, unifying strengths of both alternatives and enabling completely new capabilities (see Secs. 3.2,3.4).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Theorem A. 3 . 7 )</head><label>37</label><figDesc>Let D be an arbitrary distribution over [K] T , and define Pt(j | k1:t-1) := PrD[kt = j | k1:t-1]. Fix x 0 1:T . Define the expectation over the forward process with random noise level k1:T as E and the expectation over the latent under p θ (•) conditioned on k1:T , (x k t s )• | k1:T , (x k t t ) 1≤t≤T (A.8)Then, as long as p θ satisfies the Markov property, E forward,D</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Prediction intervals of Diffusion Forcing for the first prediction window of the test set in the Electricity time series dataset. Only the first 16 features out of 370 are plotted.</figDesc><graphic coords="26,108.00,72.00,396.00,237.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Given a dataset of trajectories (a), Diffusion Forcing models the joint distribution of all subsequences of arbitrary length. At sampling time, we can sample from the trajectory distribution by sampling Diffusion Forcing with full horizon (b) or recover Markovian dynamics by disregarding previous states (c).</figDesc><graphic coords="28,125.31,72.00,118.80,118.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Visualization shows Diffusion Forcing trained on 72 frames is able to rollout 180 frames on Minecraft dataset without sliding window. The visualization shows a non-cherry-picked subsampling of these 180 frames, although Diffusion Forcing can roll out much longer (such as 2000 frames) on this dataset.</figDesc><graphic coords="28,108.00,409.00,396.00,220.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Diffusion Forcing trained on 72 frames is able to rollout 180 frames on Minecraft dataset without sliding window. The visualization shows a non-cherry-picked subsampling of these 180 frames, although Diffusion Forcing can roll out much longer (such as 2000 frames) on this dataset. The first few frames marked in red are the ground truth images of the dataset used for conditioning.</figDesc><graphic coords="29,108.00,72.00,396.00,220.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: Visualization shows Diffusion Forcing trained on 36 frames is able to rollout 180 frames on DMLab dataset without sliding window. The visualization shows a non-cherry-picked subsampling of these 180 frames, although Diffusion Forcing can roll out almost infinitely on this dataset. The first few frames marked in red are the ground truth images of the dataset used for conditioning.</figDesc><graphic coords="30,108.00,72.00,396.00,440.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: Visualization shows Diffusion Forcing trained on 36 frames is able to rollout 180 frames on DMLab dataset without sliding window. The visualization shows a non-cherry-picked subsampling of these 180 frames, although Diffusion Forcing can roll out almost infinitely on this dataset. The first few frames marked in red are the ground truth images of the dataset used for conditioning.</figDesc><graphic coords="31,108.00,72.00,396.00,440.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: Additional non-cherry-picked video prediction results on DMLab dataset, generated within maximum training length. The first few frames marked in red are the ground truth images of the dataset used for conditioning.</figDesc><graphic coords="32,108.00,249.00,396.00,176.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 13 :</head><label>13</label><figDesc>Figure 13: Additional non-cherry-picked video prediction results on the Minecraft dataset, generated within maximum training length. The first few frames marked in red are the ground truth images of the dataset used for conditioning.</figDesc><graphic coords="33,108.00,160.99,396.00,88.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 16 :</head><label>16</label><figDesc>Figure16: We randomly throw a target bag on the table as a strong visual distractor. Diffusion Forcing can be prompted to treat observation as corrupted rather than ground truth.</figDesc><graphic coords="35,207.00,72.01,197.97,148.48" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>q(xt 0</head><label>0</label><figDesc>:T | x1:t 0 -1, c1:T ) := T t=t 0 q(xt | x1:t 0 -1, c1:T ).(F.1)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><graphic coords="34,108.00,72.00,396.00,346.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 2 :</head><label>2</label><figDesc>Results for time series forecasting. We report the test set CRPS sum (the lower, the better) of comparable methods on six time series datasets. We measure the mean and standard deviation of our method from five runs trained with different seeds.We evaluate the effectiveness of Diffusion Forcing as a sequence model on the canonical task of multivariate time series forecasting by following the experiment setup of<ref type="bibr" target="#b53">[54,</ref><ref type="bibr" target="#b50">51,</ref><ref type="bibr" target="#b49">50,</ref><ref type="bibr" target="#b58">59,</ref><ref type="bibr" target="#b67">68]</ref> Concretely, we benchmark Diffusion Forcing on the datasets Solar, Electricity, Traffic, Taxi, and Wikipedia. These datasets have different dimensionality, domains, and sampling frequencies, and capture seasonal patterns of different lengths.</figDesc><table><row><cell>Method</cell><cell>Exchange</cell><cell>Solar</cell><cell>Electricity</cell><cell>Traffic</cell><cell>Taxi</cell><cell>Wikipedia</cell></row><row><cell>VES [36]</cell><cell>0.005 ± 0.000</cell><cell>0.900 ± 0.003</cell><cell>0.880 ± 0.004</cell><cell>0.350 ± 0.002</cell><cell>-</cell><cell>-</cell></row><row><cell>VAR [45]</cell><cell>0.005 ± 0.000</cell><cell>0.830 ± 0.006</cell><cell>0.039 ± 0.001</cell><cell>0.290 ± 0.001</cell><cell>-</cell><cell>-</cell></row><row><cell>VAR-Lasso [45]</cell><cell>0.012 ± 0.000</cell><cell>0.510 ± 0.006</cell><cell>0.025 ± 0.000</cell><cell>0.150 ± 0.002</cell><cell>-</cell><cell>3.100 ± 0.004</cell></row><row><cell>GARCH [62]</cell><cell>0.023 ± 0.000</cell><cell>0.880 ± 0.002</cell><cell>0.190 ± 0.001</cell><cell>0.370 ± 0.001</cell><cell>-</cell><cell>-</cell></row><row><cell>DeepAR [55]</cell><cell>-</cell><cell>0.336 ± 0.014</cell><cell>0.023 ± 0.001</cell><cell>0.055 ± 0.003</cell><cell>-</cell><cell>0.127 ± 0.042</cell></row><row><cell>LSTM-Copula [54]</cell><cell>0.007 ± 0.000</cell><cell>0.319 ± 0.011</cell><cell>0.064 ± 0.008</cell><cell>0.103 ± 0.006</cell><cell>0.326 ± 0.007</cell><cell>0.241 ± 0.033</cell></row><row><cell>GP-Copula [54]</cell><cell>0.007 ± 0.000</cell><cell>0.337 ± 0.024</cell><cell>0.025 ± 0.002</cell><cell>0.078 ± 0.002</cell><cell>0.208 ± 0.183</cell><cell>0.086 ± 0.004</cell></row><row><cell>KVAE [41]</cell><cell>0.014 ± 0.002</cell><cell>0.340 ± 0.025</cell><cell>0.051 ± 0.019</cell><cell>0.100 ± 0.005</cell><cell>-</cell><cell>0.095 ± 0.012</cell></row><row><cell>NKF [14]</cell><cell>-</cell><cell>0.320 ± 0.020</cell><cell>0.016 ± 0.001</cell><cell>0.100 ± 0.002</cell><cell>-</cell><cell>0.071 ± 0.002</cell></row><row><cell>Transformer-MAF [51]</cell><cell>0.005 ± 0.003</cell><cell>0.301 ± 0.014</cell><cell>0.021 ± 0.000</cell><cell>0.056 ± 0.001</cell><cell>0.179 ± 0.002</cell><cell>0.063 ± 0.003</cell></row><row><cell>TimeGrad [50]</cell><cell>0.006 ± 0.001</cell><cell>0.287 ± 0.020</cell><cell>0.021 ± 0.001</cell><cell>0.044 ± 0.006</cell><cell>0.114 ± 0.020</cell><cell>0.049 ± 0.002</cell></row><row><cell>ScoreGrad sub-VP SDE [68]</cell><cell>0.006 ± 0.001</cell><cell>0.256 ± 0.015</cell><cell>0.019 ± 0.001</cell><cell>0.041 ± 0.004</cell><cell>0.101 ± 0.004</cell><cell>0.043 ± 0.002</cell></row><row><cell>Ours</cell><cell>0.003 ± 0.001</cell><cell>0.289 ± 0.002</cell><cell>0.023 ± 0.001</cell><cell>0.040 ± 0.004</cell><cell>0.075 ± 0.002</cell><cell>0.085 ± 0.007</cell></row><row><cell>Results.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 3 :</head><label>3</label><figDesc>Characteristics of the GluonTS datasets used to benchmark Diffusion Forcing in the domain of time series forecasting.</figDesc><table><row><cell>Dataset</cell><cell>Dimension</cell><cell>Domain</cell><cell>Frequency</cell><cell>Steps</cell><cell>Prediction length</cell></row><row><cell>Exchange</cell><cell>8</cell><cell>R +</cell><cell>BUSINESS DAY</cell><cell>6,071</cell><cell>30</cell></row><row><cell>Solar</cell><cell>137</cell><cell>R +</cell><cell>HOUR</cell><cell>7,009</cell><cell>24</cell></row><row><cell>Electricity</cell><cell>370</cell><cell>R +</cell><cell>HOUR</cell><cell>5,833</cell><cell>24</cell></row><row><cell>Traffic</cell><cell>963</cell><cell>(0,1)</cell><cell>HOUR</cell><cell>4,001</cell><cell>24</cell></row><row><cell>Taxi</cell><cell>1,214</cell><cell>N</cell><cell>30-MIN</cell><cell>1,488</cell><cell>24</cell></row><row><cell>Wikipedia</cell><cell>2,000</cell><cell>N</cell><cell>DAY</cell><cell>792</cell><cell>30</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0"><p>We implement zt = p θ (zt|zt-1, x k t t , kt) to be deterministic, with zt representing a distribution over beliefs rather than a sample from it. This allows training by backpropogating through the latent dynamics in Eq.(3.1).</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><p>Acknowledgements. This work was supported by the <rs type="funder">National Science Foundation</rs> under Grant No. <rs type="grantNumber">2211259</rs>, by the <rs type="funder">Singapore DSTA</rs> under <rs type="grantNumber">DST00OECI20300823</rs> (<rs type="grantNumber">3D</rs> <rs type="projectName">Self-Supervised Learning for Label-Efficient Vision</rs>), by the <rs type="funder">Intelligence Advanced Research Projects Activity (IARPA) via Department of Interior/ Interior Business Center (DOI/IBC)</rs> under <rs type="grantNumber">140D0423C0075</rs>, and by the <rs type="funder">Amazon Science Hub</rs>.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_8Kbv3VJ">
					<idno type="grant-number">2211259</idno>
				</org>
				<org type="funding" xml:id="_uw49xXG">
					<idno type="grant-number">DST00OECI20300823</idno>
				</org>
				<org type="funded-project" xml:id="_3EZRRR9">
					<idno type="grant-number">3D</idno>
					<orgName type="project" subtype="full">Self-Supervised Learning for Label-Efficient Vision</orgName>
				</org>
				<org type="funding" xml:id="_fysy6PD">
					<idno type="grant-number">140D0423C0075</idno>
				</org>
			</listOrg>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Proof. The proof invokes similar manipulations to the standard ELBO derivation for diffusion, but with a few careful modifications to handle the fact that we only noise to level kt. As is standard, we require the identity q(x j t | x j-1 t , x 0 t ) = q(x j-1 t | x j t , x 0 t ) • q(x j t | x 0 t ) q(x j-1 t | x 0 t ) .</p><p>(A.10)</p><p>Part 1: Expanding the likelihood ratios . Using the above identity, we obtain</p><p>= ln p(x K t | zt-1) + ln</p><p>= ln p(x K t | zt-1) + ln</p><p>, where (i) uses A.10, (ii) invokes a cancellation in the telescoping sum, and the final display follows from the computation</p><p>Observe that, because we don't parameterize p(</p><p>can be regarded as some constant</p><p>Part 2: Taking expecations. We can now simplify to taking expectations. Observe that</p><p>and similarly,</p><p>Finally,</p><p>) depending only on kt, x0. Thus, from (A.12)</p><p>Completing the proof of the ELBO. We are now ready to complete the proof. By combining the previous two claims, we have</p><p>where C3(x0, kt) = C1(x0, kt) + C2(x0, kt) and where again, the above is an equality when q(x k t +1:</p><p>. Taking an expectation over kt unif ∼ {0, 1, . . . , K}, we have</p><p>and consequently,</p><p>We conclude by observing that T t=1 E&lt;t C4(x 0 t ) is a constant C(x 0 1:T ), and that</p><p>since both terms only depend on k1:t-1, (x ks s ) 1≤s≤t-1 and z1:t-1. We conclude then that</p><p>as needed. Lastly, we recall that the above is an equality under the conditions that (a)</p><p>, and we reindex j ← j + 1 to ensure consistency with indexing in standard expositions of the diffusion ELBO.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B Additional Intuitions and Explainations</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.1 Extension to transformer backbone</head><p>While this paper focuses on a causal implementation of Diffusion Forcing with RNNs, it's easy to adopt Diffusion Forcing with modern architectures like transformers. One can simply modify a transformer-based sequence diffusion model to train with independent noise levels across tokens and follow the techniques listed in Section D.1. A strict implementation of causal Diffusion Forcing would involve a causal attention mask on the transformer. However, Diffusion Forcing's fractional masking can do something more interesting: Consider the scenario that we use a transformer without a causal mask. We can still implement causality by controlling  video generation, the noised x k small t is in-distribution for training, because Diffusion Forcing trains from noisy past observation in its training objective. Hence, this method can be interpreted as a special case of the DART algorithm for behavior cloning <ref type="bibr" target="#b42">[43]</ref>, where the imitiator (in our case, video generator) is given actions (in our case, next video frames) from noisy observations (in our case, noised previous frames). Somewhat more precisely, because we use both tokens at training time to train Diffusion Forcing, and using slightly noised tokens for autoregression at test time, our approach inherits the theoretical guarantee of the HINT algorithm <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.5 Why Monte Carlo Guidance relies on Diffusion Forcing</head><p>Monte Carlo Guidance provides substantial variance reduction in our estimate of cost-to-go guidance (B.1). This technique crucially relies on the ability to roll out future tokens from current ones to use these sample rollouts to get Monte Carlo estimates for gradients. This is not feasible with full-sequence diffusion, because this requires denoising all tokens in tandem; thus, for a given fixed noise level, there is no obvious source of randomness to use for the Monte Carlo estimate. It may be possible to achieve variable horizon via the trick proposed in the following subsection to simulate future rollouts, but to our knowledge, this approach is nonstandard.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.6 Does the replacement technique lead to flexible horizons in full-sequence diffusion?</head><p>A naive way to obtain flexible horizon generation in full-sequence diffusion is via the "replacement trick": consider a full sequence model trained to diffuse x1:T , which we partition into x1:t-1, xt:T ]. Having diffused tokens x1:t-1, we can attempt to denoise tokens of the form [x k 1:t-1 , x k t:T ], where we fix xk 1:t-1 = x1:t-1 to be the previously generated token, and only have score gradients update the remaining x k t:T . One clear disadvantage of this method is inefficiency -one still needs to diffuse the whole sequence even when there is one step left at t = T -1. What's more, <ref type="bibr" target="#b31">[32]</ref> points out that this approach of conditioning, named "conditioning by replacement", is both mathematically unprincipled and can lead to inconsistency in the generated sequence. The best fix proposed by <ref type="bibr" target="#b31">[32]</ref> incorporates an additional gradient term with respect to xt:T at every diffusion step; this is still an incomplete fix and suffers the computation cost of an extra backward propagation for every sampling step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.7 Further connection to Bayesian filtering</head><p>The core idea of Diffusion Forcing can be interpreted as using diffusion to construct an interpolation between prior distribution and posterior distribution of a Bayes filter. Consider the hybrid distribution p(zt|zt-1, x k t ). When k = 0, this hybrid distribution becomes the posterior p(zt|zt-1, xt). On the other hand, when k = K, the hybrid distribution becomes p(zt|zt-1, n) for n ∼ N (0, I). Since the independent Gaussian noise term n contains no information about z, this is exactly the prior distribution p(zt|zt-1). By varying k between K and 0, the same neural network can parameterize everything between prior and posterior.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.8 Connection to other sequence training schemes</head><p>Noise as masking provides a unified view of different sequence training schemes. The following exposition uses a length 3 sequence as an example: We always start with fully masked sequence</p><p>with the goal of denoising it a "clean sequence" of zero noise. [x 0 1 , x 0 2 , x 0 3 ]. Assume all diffusions are sampled with 3-step DDIM.</p><p>Autoregressive. In teacher forcing, one trains a model to predict the next token conditioned on prior observations. One can train next-token diffusion models with teacher forcing such as <ref type="bibr" target="#b49">[50]</ref>: feed neural network with past observations as well as a current observation and ask it to predict clean current observation. A typical training pair can have the input of [x 0 1 , x 0 2 , x K 3 ] ⊤ and target of [x 0 1 , x 0 2 , x 0 3 ] ⊤ . At sampling time, one fully diffuses the next token before adding the diffused observation to history to perform an autoregressive rollout. The diffusion process would thus look like</p><p>Notably, Diffusion Forcing can also perform this sampling scheme at sampling time for applications like imitation learning, when one wants to diffuse the next action as fast as possible.</p><p>Full Sequence Diffusion. Full sequence diffusion models accept a noisy sequence and denoises level-by-level</p><p>Notably, Diffusion Forcing can also perform this sampling scheme at sampling time.</p><p>Diffusion Forcing with causal uncertainty As shown in Figure <ref type="figure">2</ref>, to model causal uncertainty, Diffusion Forcing keeps the far future more uncertain than the near future by having a larger noise level k, at any time of diffusion. An example pattern looks like this: <ref type="bibr" target="#b65">[66]</ref> is the first one to propose such a linear uncertainty sampling scheme for causal diffusion models, although Diffusion Forcing provides a generalization of such scheme in combination with other abilities.</p><p>Diffusion Forcing with stablization Previously we introduced the autoregressive sampling scheme that Diffusion Forcing can also do. However, such a scheme can accumulate single-step errors because it treats predicted x as ground truth observation. Diffusion Forcing addresses this problem by telling the model that generated images should be treated as noisy ground truth, as shown in 2.</p><p>It first fully diffuses the first token,</p><p>Then, it feed the diffused x 0 1 into the model but tell it is of a slightly higher noise level, as  Covariates Often, statistical models that approximate (E.1) benefit from manually curated features as additional input to the observations. A sequence of covariates C = {ct} T t=1 can be constructed to help the model recognize seasonal patterns and other temporal dependencies. We follow the implementation in <ref type="bibr" target="#b50">[51]</ref> to construct the covariate sequence as a function of the frequency of each dataset in Table <ref type="table">3</ref>. As such, our covariates are composed of lagged inputs, as well as learned embeddings and handcrafted temporal features that encode information such as the hour of the day or the day of the month, depending on the sampling rate of the particular time series that is</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Is conditional generative modeling all you need for decision-making?</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ajay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tenenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Jaakkola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename></persName>
		</author>
		<idno type="arXiv">arXiv:2211.15657</idno>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Gluonts: Probabilistic and neural time series modeling in python</title>
		<author>
			<persName><forename type="first">A</forename><surname>Alexandrov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Benidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Bohlke-Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Flunkert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gasthaus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Januschowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">C</forename><surname>Maddix</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rangapuram</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Salinas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schulz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Stella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Türkmen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">116</biblScope>
			<biblScope unit="page" from="1" to="6" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Dota 2 with large scale deep reinforcement learning</title>
		<author>
			<persName><forename type="first">C</forename><surname>Berner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Brockman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Cheung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Debiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Dennison</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Farhi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hashme</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hesse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Józefowicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Olsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pachocki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Petrov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">P</forename><surname>De Oliveira Pinto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Raiman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Salimans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schlatter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sidor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wolski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<idno>CoRR, abs/1912.06680</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Stable video diffusion: Scaling latent video diffusion models to large datasets</title>
		<author>
			<persName><forename type="first">A</forename><surname>Blattmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dockhorn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kulal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mendelevitch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kilian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lorenz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Levi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>English</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Voleti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Letts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Jampani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rombach</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Provable guarantees for generative behavior cloning: Bridging low-level stability and high-level behavior</title>
		<author>
			<persName><forename type="first">A</forename><surname>Block</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jadbabaie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Pfrommer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Simchowitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tedrake</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Thirty-seventh Conference on Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Language models are few-shot learners</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">B</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Mann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Ryder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Subbiah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dhariwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Neelakantan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Shyam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sastry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Askell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Herbert-Voss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Krueger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Henighan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Child</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ramesh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Ziegler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Winter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hesse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Sigler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Litwin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Chess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Berner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mccandlish</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Amodei</surname></persName>
		</author>
		<idno>CoRR, abs/2005.14165</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Chan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2403.18103</idno>
		<title level="m">Tutorial on diffusion models for imaging and vision</title>
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Generative pretraining from pixels</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Child</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Luan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<idno>PMLR</idno>
	</analytic>
	<monogr>
		<title level="m">International conference on machine learning</title>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="1691" to="1703" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">On the importance of noise scheduling for diffusion models</title>
		<author>
			<persName><forename type="first">T</forename><surname>Chen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">C</forename><surname>Chi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Cousineau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Burchfiel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tedrake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Song</surname></persName>
		</author>
		<title level="m">Diffusion policy: Visuomotor policy learning via action diffusion</title>
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Learning phrase representations using RNN encoder-decoder for statistical machine translation</title>
		<author>
			<persName><forename type="first">K</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Van Merrienboer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">¸</forename><surname>Gülc ¸ehre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Bougares</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Schwenk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<idno>CoRR, abs/1406.1078</idno>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A recurrent latent variable model for sequential data</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kastner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Dinh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Goel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Courville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Advances in neural information processing systems</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Certified adversarial robustness via randomized smoothing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Rosenfeld</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Kolter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">international conference on machine learning</title>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="1310" to="1320" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Normalizing kalman filters for multivariate time series analysis</title>
		<author>
			<persName><forename type="first">E</forename><surname>De Bézenac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Rangapuram</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Benidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Bohlke-Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kurle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Stella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hasson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Gallinari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Januschowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">33</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">BERT: pre-training of deep bidirectional transformers for language understanding</title>
		<author>
			<persName><forename type="first">J</forename><surname>Devlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Toutanova</surname></persName>
		</author>
		<idno>CoRR, abs/1810.04805</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Diffusion models beat gans on image synthesis</title>
		<author>
			<persName><forename type="first">P</forename><surname>Dhariwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Nichol</surname></persName>
		</author>
		<idno>CoRR, abs/2105.05233</idno>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Masked autoencoders as spatiotemporal learners</title>
		<author>
			<persName><forename type="first">C</forename><surname>Feichtenhofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="35946" to="35958" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">D4RL: datasets for deep data-driven reinforcement learning</title>
		<author>
			<persName><forename type="first">J</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Nachum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Levine</surname></persName>
		</author>
		<idno>CoRR, abs/2004.07219</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Masked diffusion transformer is a strong image synthesizer</title>
		<author>
			<persName><forename type="first">S</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M.-M</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/CVF International Conference on Computer Vision</title>
		<meeting>the IEEE/CVF International Conference on Computer Vision</meeting>
		<imprint>
			<date type="published" when="2023">2023</date>
			<biblScope unit="page" from="23164" to="23173" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Model predictive control: Theory and practice-a survey</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Garcia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Prett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Morari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="335" to="348" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Learning to forget: continual prediction with lstm</title>
		<author>
			<persName><forename type="first">F</forename><surname>Gers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schmidhuber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Cummins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">1999 Ninth International Conference on Artificial Neural Networks ICANN 99</title>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="850" to="855" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Dream to control: Learning behaviors by latent imagination</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hafner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Lillicrap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Norouzi</surname></persName>
		</author>
		<idno>CoRR, abs/1912.01603</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Learning latent dynamics for planning from pixels</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hafner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Lillicrap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Villegas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Davidson</surname></persName>
		</author>
		<idno>CoRR, abs/1811.04551</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Hang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Geng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Guo</surname></persName>
		</author>
		<title level="m">Efficient diffusion training via min-snr weighting strategy</title>
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Temporal difference learning for model predictive control</title>
		<author>
			<persName><forename type="first">N</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Su</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Flexible diffusion modeling of long videos</title>
		<author>
			<persName><forename type="first">W</forename><surname>Harvey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Naderiparizi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Masrani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Weilbach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Koyejo</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><surname>Mohamed</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Agarwal</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><surname>Belgrave</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K</forename><surname>Cho</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Oh</surname></persName>
		</editor>
		<imprint>
			<publisher>Curran Associates, Inc</publisher>
			<date type="published" when="2022">2022</date>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="27953" to="27965" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Masked autoencoders are scalable vision learners</title>
		<author>
			<persName><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dollár</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Girshick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/CVF conference on computer vision and pattern recognition</title>
		<meeting>the IEEE/CVF conference on computer vision and pattern recognition</meeting>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page" from="16000" to="16009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Deep residual learning for image recognition</title>
		<author>
			<persName><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<idno>CoRR, abs/1512.03385</idno>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Denoising diffusion probabilistic models</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Abbeel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NeurIPS)</title>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="6840" to="6851" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Denoising diffusion probabilistic models</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Abbeel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006.11239, 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Salimans</surname></persName>
		</author>
		<title level="m">Classifier-free diffusion guidance</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Salimans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gritsenko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Norouzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Fleet</surname></persName>
		</author>
		<title level="m">Video diffusion models</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Long short-term memory</title>
		<author>
			<persName><forename type="first">S</forename><surname>Hochreiter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Comput</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1735" to="1780" />
			<date type="published" when="1997-11">nov 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Russell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yeo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Murez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fedoseev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kendall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Shotton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Corrado</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2309.17080</idno>
		<title level="m">Gaia-1: A generative world model for autonomous driving</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Diffusion-based generation, optimization, and planning in 3d scenes</title>
		<author>
			<persName><forename type="first">S</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-C</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition</title>
		<meeting>the IEEE/CVF Conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="2023">2023</date>
			<biblScope unit="page" from="16750" to="16761" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Forecasting with Exponential Smoothing: The State Space Approach</title>
		<author>
			<persName><forename type="first">R</forename><surname>Hyndman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>Koehler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Ord</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">D</forename><surname>Snyder</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>Springer Science &amp; Business Media</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Planning with diffusion for flexible behavior synthesis</title>
		<author>
			<persName><forename type="first">M</forename><surname>Janner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Tenenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Levine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Machine Learning (ICML)</title>
		<meeting>the International Conference on Machine Learning (ICML)</meeting>
		<imprint>
			<biblScope unit="page">2022</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Transformers are rnns: Fast autoregressive transformers with linear attention</title>
		<author>
			<persName><forename type="first">A</forename><surname>Katharopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vyas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Pappas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Fleuret</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006.16236, 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Grasping with chopsticks: Combating covariate shift in model-free imitation learning for fine manipulation</title>
		<author>
			<persName><forename type="first">L</forename><surname>Ke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Bhattacharjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Boots</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Srinivasa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2021 IEEE International Conference on Robotics and Automation (ICRA)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2021">2021</date>
			<biblScope unit="page" from="6185" to="6191" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Understanding diffusion objectives as the elbo with simple data augmentation</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Gao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Advances in Neural Information Processing Systems</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Structured inference networks for nonlinear state space models</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Krishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Shalit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Sontag</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">Modeling long-and short-term temporal patterns with deep neural networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Liu</surname></persName>
		</author>
		<idno>CoRR, abs/1703.07015</idno>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Dart: Noise injection for robust imitation learning</title>
		<author>
			<persName><forename type="first">M</forename><surname>Laskey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Fox</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Dragan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Goldberg</surname></persName>
		</author>
		<idno>PMLR</idno>
	</analytic>
	<monogr>
		<title level="m">Conference on robot learning</title>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="143" to="156" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">Diffusion-lm improves controllable text generation</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Thickstun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Gulrajani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">B</forename><surname>Hashimoto</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<author>
			<persName><forename type="first">H</forename><surname>Lütkepohl</surname></persName>
		</author>
		<title level="m">New Introduction to Multiple Time Series Analysis</title>
		<imprint>
			<publisher>Springer Science &amp; Business Media</publisher>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Scoring rules for continuous probability distributions</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Matheson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Winkler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1087" to="1096" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">Improved denoising diffusion probabilistic models</title>
		<author>
			<persName><forename type="first">A</forename><surname>Nichol</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename></persName>
		</author>
		<idno>CoRR, abs/2102.09672</idno>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">RWKV: Reinventing RNNs for the transformer era</title>
		<author>
			<persName><forename type="first">B</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Alcaide</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Anthony</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Albalak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Arcadinho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Biderman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Derczynski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Grella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Gv</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kazienko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kocon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Koptyra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S I</forename><surname>Mantri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Mom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Saito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wind</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Woźniak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R.-J</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Findings of the Association for Computational Linguistics: EMNLP 2023</title>
		<editor>
			<persName><forename type="first">H</forename><surname>Bouamor</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Pino</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K</forename><surname>Bali</surname></persName>
		</editor>
		<meeting><address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2023-12">Dec. 2023</date>
			<biblScope unit="page" from="14048" to="14077" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title level="m" type="main">Exploring the limits of transfer learning with a unified text-to-text transformer</title>
		<author>
			<persName><forename type="first">C</forename><surname>Raffel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shazeer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Roberts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Narang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Matena</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Liu</surname></persName>
		</author>
		<idno>CoRR, abs/1910.10683</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Autoregressive Denoising Diffusion Models for Multivariate Probabilistic Time Series Forecasting</title>
		<author>
			<persName><forename type="first">K</forename><surname>Rasul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Seward</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Schuster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Vollgraf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 38th International Conference on Machine Learning</title>
		<meeting>the 38th International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2021">2021</date>
			<biblScope unit="volume">139</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Multivariate probabilistic time series forecasting via conditioned normalizing flows</title>
		<author>
			<persName><forename type="first">K</forename><surname>Rasul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A.-S</forename><surname>Sheikh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Schuster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">M</forename><surname>Bergmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Vollgraf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Ruhe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Salimans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Hoogeboom</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2402.09470</idno>
		<title level="m">Rolling diffusion models</title>
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<title level="m" type="main">Progressive distillation for fast sampling of diffusion models</title>
		<author>
			<persName><forename type="first">T</forename><surname>Salimans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ho</surname></persName>
		</author>
		<idno>CoRR, abs/2202.00512</idno>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title level="m" type="main">High-dimensional multivariate forecasting with low-rank gaussian copula processes</title>
		<author>
			<persName><forename type="first">D</forename><surname>Salinas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Bohlke-Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Callot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Medico</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gasthaus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Medico</surname></persName>
		</author>
		<editor>NeurIPS</editor>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Deepar: Probabilistic forecasting with autoregressive recurrent networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Salinas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Flunkert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gasthaus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Januschowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Forecasting</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1181" to="1191" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Deepar: Probabilistic forecasting with autoregressive recurrent networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Salinas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Flunkert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gasthaus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Januschowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Forecasting</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1181" to="1191" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Deep unsupervised learning using nonequilibrium thermodynamics</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sohl-Dickstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Maheswaranathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ganguli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Machine Learning (ICML)</title>
		<meeting>the International Conference on Machine Learning (ICML)</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<monogr>
		<title level="m" type="main">Denoising diffusion implicit models</title>
		<author>
			<persName><forename type="first">J</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ermon</surname></persName>
		</author>
		<idno>CoRR, abs/2010.02502</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Probabilistic transformer for time series analysis</title>
		<author>
			<persName><forename type="first">B</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Matteson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<editor>
			<persName><forename type="first">A</forename><surname>Beygelzimer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Y</forename><surname>Dauphin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Liang</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Vaughan</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m" type="main">Resmlp: Feedforward networks for image classification with data-efficient training</title>
		<author>
			<persName><forename type="first">H</forename><surname>Touvron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bojanowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Caron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Cord</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>El-Nouby</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Grave</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Joulin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Synnaeve</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Verbeek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jégou</surname></persName>
		</author>
		<idno>CoRR, abs/2105.03404</idno>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Conditional image generation with pixelcnn decoders</title>
		<author>
			<persName><forename type="first">A</forename><surname>Van Den Oord</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Kalchbrenner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Espeholt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Advances in neural information processing systems</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Go-garch: A multivariate generalized orthogonal garch model</title>
		<author>
			<persName><forename type="first">R</forename><surname>Van Der Weide</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Applied Econometrics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="549" to="564" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Diffusion models as masked autoencoders</title>
		<author>
			<persName><forename type="first">C</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mangalam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P.-Y</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Yuille</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Feichtenhofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/CVF International Conference on Computer Vision</title>
		<meeting>the IEEE/CVF International Conference on Computer Vision</meeting>
		<imprint>
			<date type="published" when="2023">2023</date>
			<biblScope unit="page" from="16284" to="16294" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<monogr>
		<author>
			<persName><forename type="first">G</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Aldrich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Theodorou</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1509.01149</idno>
		<title level="m">Model predictive path integral control using covariance variable importance sampling</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">A Learning Algorithm for Continually Running Fully Recurrent Neural Networks</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zipser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Computation</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="270" to="280" />
			<date type="published" when="1989-06">06 1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<monogr>
		<title level="m" type="main">Ar-diffusion: Auto-regressive diffusion model for text generation</title>
		<author>
			<persName><forename type="first">T</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-T</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Ar-diffusion: Auto-regressive diffusion model for text generation</title>
		<author>
			<persName><forename type="first">T</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-T</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Advances in Neural Information Processing Systems</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="39957" to="39974" />
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<monogr>
		<title level="m" type="main">Scoregrad: Multivariate probabilistic time series forecasting with continuous energy-based generative models</title>
		<author>
			<persName><forename type="first">T</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Xia</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<monogr>
		<title level="m" type="main">Temporally consistent transformers for video generation</title>
		<author>
			<persName><forename type="first">W</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Hafner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>James</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Abbeel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Diffusion probabilistic modeling for video generation</title>
		<author>
			<persName><forename type="first">R</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Srivastava</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mandt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Entropy</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page">1469</biblScope>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<monogr>
		<title level="m" type="main">Tree of thoughts: Deliberate problem solving with large language models</title>
		<author>
			<persName><forename type="first">S</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Shafran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Griffiths</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Narasimhan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<monogr>
		<title level="m" type="main">Temporal regularized matrix factorization</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">S</forename><surname>Dhillon</surname></persName>
		</author>
		<idno>CoRR, abs/1509.08333</idno>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
