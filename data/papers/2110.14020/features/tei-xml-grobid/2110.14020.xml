<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Difficulty of Passive Learning in Deep Reinforcement Learning</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Georg</forename><surname>Ostrovski</surname></persName>
							<email>ostrovski@deepmind.com</email>
						</author>
						<author>
							<persName><forename type="first">Pablo</forename><forename type="middle">Samuel</forename><surname>Castro</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Will</forename><surname>Dabney</surname></persName>
							<email>wdabney@deepmind.com</email>
						</author>
						<title level="a" type="main">The Difficulty of Passive Learning in Deep Reinforcement Learning</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">D31ABD65695C881649BFCAC840EED4EF</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.2-SNAPSHOT" ident="GROBID" when="2025-03-18T18:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Learning to act from observational data without active environmental interaction is a well-known challenge in Reinforcement Learning (RL). Recent approaches involve constraints on the learned policy or conservative updates, preventing strong deviations from the state-action distribution of the dataset. Although these methods are evaluated using non-linear function approximation, theoretical justifications are mostly limited to the tabular or linear cases. Given the impressive results of deep reinforcement learning, we argue for a need to more clearly understand the challenges in this setting. In the vein of Held &amp; Hein's classic 1963 experiment, we propose the "tandem learning" experimental paradigm which facilitates our empirical analysis of the difficulties in offline reinforcement learning. We identify function approximation in conjunction with fixed data distributions as the strongest factors, thereby extending but also challenging hypotheses stated in past work. Our results provide relevant insights for offline deep reinforcement learning, while also shedding new light on phenomena observed in the online case of learning control.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Learning to act in an environment purely from observational data (i.e. with no environment interaction), usually referred to as offline reinforcement learning, has great practical as well as theoretical importance (see <ref type="bibr" target="#b28">[Levine et al., 2020]</ref> for a recent survey). In real-world settings like robotics and healthcare, it is motivated by the ambition to learn from existing datasets and the high cost of environment interaction. Its theoretical appeal is that stationarity of the data distribution allows for more straightforward convergence analysis of learning algorithms. Moreover, decoupling learning from data generation alleviates one of the major difficulties in the empirical analysis of common reinforcement learning agents, allowing the targeted study of learning dynamics in isolation from their effects on behavior.</p><p>Recent work has identified extrapolation error as a major challenge for offline (deep) reinforcement learning <ref type="bibr" target="#b0">[Achiam et al., 2019</ref><ref type="bibr" target="#b7">, Buckman et al., 2021</ref><ref type="bibr">, Fujimoto et al., 2019b</ref><ref type="bibr" target="#b11">, Fakoor et al., 2021</ref><ref type="bibr" target="#b29">, Liu et al., 2020</ref><ref type="bibr" target="#b33">, Nair et al., 2020]</ref>, with bootstrapping often highlighted as either the cause or an amplifier of the effect: The value of missing or under-represented state-action pairs in the dataset can be over-estimated, either transiently (due to insufficient training or data) or even asymptotically (due to modelling or dataset bias), resulting in a potentially severely under-performing acquired policy. The corrective feedback-loop <ref type="bibr">[Kumar et al., 2020b]</ref>, whereby value over-estimation is self-correcting via exploitation during interaction with the environment (while under-estimation is corrected by exploration), is critically missing in the offline setting. To mitigate this, typically one of a few related strategies are proposed: policy or learning update constraints preventing deviations from states and actions well-covered by the dataset or satisfying certain uncertainty bounds <ref type="bibr">[Fujimoto et al., 2019a</ref><ref type="bibr">,b, Kumar et al., 2019</ref><ref type="bibr">, 2020c</ref><ref type="bibr" target="#b0">, Achiam et al., 2019</ref><ref type="bibr">, Wang et al., 2020b</ref><ref type="bibr">, Wu et al., 2021</ref><ref type="bibr" target="#b33">, Nair et al., 2020</ref><ref type="bibr" target="#b49">, Wu et al., 2019</ref><ref type="bibr" target="#b53">, Yu et al., 2020]</ref>, pessimism bias to battle value over-estimation <ref type="bibr" target="#b7">[Buckman et al., 2021</ref><ref type="bibr" target="#b22">, Kidambi et al., 2020]</ref>, large and diverse datasets to improve state space coverage <ref type="bibr" target="#b1">[Agarwal et al., 2020]</ref>, or learned models to fill in gaps with synthesized data <ref type="bibr" target="#b37">[Schrittwieser et al., 2021</ref><ref type="bibr" target="#b31">, Matsushima et al., 2020]</ref>. While many of these enjoy theoretical justification in the tabular or linear cases <ref type="bibr" target="#b40">[Thomas et al., 2015]</ref>, guarantees for the practically relevant non-linear case are mostly lacking.</p><p>In this paper we draw inspiration from the experimental paradigm introduced in the classic <ref type="bibr" target="#b14">Held and Hein [1963]</ref> experiment in psychology. The experiment involved coupling two young animal subjects' movements and visual perceptions to ensure that both receive the same stream of visual inputs, while only one can actively shape that stream by directing the pair's movements <ref type="bibr">(Fig. 1,</ref>. By showing that, despite identical visual experiences, only the actively moving subject acquired adequate visual acuity, the experiment established the importance of active locomotion in learning vision. Analogously, we introduce the 'Tandem RL' setup, pairing an 'active' and a 'passive' agent in a training loop where only the active agent drives data generation, while both perform identical learning updates from the generated data<ref type="foot" target="#foot_1">foot_1</ref> . By decoupling learning dynamics from its impact on data generation, while preserving the non-stationarity of the online learning setting, this experimental paradigm promises to be a valuable analytic tool for the precise empirical study of RL algorithms.</p><p>Holding architectures, losses, and crucially data distribution equal across the active and passive agents, or varying them in a controlled manner, we perform a detailed empirical analysis of the failure modes of passive (i.e. non-interactive, offline) learning, and pinpoint the contributing factors in properties of the data distribution, function approximation and learning algorithm. Our study confirms some past intuitions for the failure modes of offline learning, while refining and extending the findings in the deep RL case. In particular, our results indicate an empirically less critical role for bootstrapping than previously hypothesized, while foregrounding erroneous extrapolation or over-generalization by a function approximator trained on an inadequate data distribution as the crucial challenge. Among other things, our experiments draw a sharp boundary between the mostly well-behaved (and analytically well-studied) case of linear function approximation, and the non-linear case for which theoretical guarantees are lacking. Moreover, we delineate different, more and less effective, ways of enhancing the training data distribution to support successful offline learning, e.g. by analysing the impact of dataset size and diversity, the stochasticity of the data generating policy, or small amounts of self-generated data. Our results provide hints towards a hypothesis relevant in both offline and online RL: robust learning of control with function approximation may require interactivity not merely as a data gathering mechanism, but as a counterbalance to a (sufficiently expressive) approximator's tendency to 'exploit gaps' in an arbitrary fixed data distribution by excessive extrapolation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The Experimental Paradigm of Tandem Reinforcement Learning</head><p>The Tandem RL setting, extending a similar analytic setup in <ref type="bibr">[Fujimoto et al., 2019b]</ref>, consists of two learning agents, one of which (the 'active agent') performs the usual online training loop of interacting with an environment and learning from the generated data, while the other (the 'passive agent') learns solely from data generated by the active agent, while only interacting with the environment for evaluation. We distinguish two experimental paradigms (see Fig. <ref type="figure" target="#fig_0">1</ref>, top-right):</p><p>Tandem: Active and passive agents start with independently initialized networks, and train on an identical sequence of training batches in the exact same order.</p><p>Forked Tandem: An agent is trained for a fraction of its total training budget. It is then 'forked' into active and passive agents, which start out with identical network weights. The active agent is 'frozen', i.e. receives no further training, but continues to generate data from its policy. The passive agent is trained on this generated data for the remainder of the training budget.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Implementation</head><p>Our basic experimental agent is 'Tandem DQN', an active/passive pair of Double-DQN agents<ref type="foot" target="#foot_2">foot_2</ref>  <ref type="bibr" target="#b44">[van Hasselt et al., 2016]</ref>. Following the usual training protocol <ref type="bibr" target="#b32">[Mnih et al., 2015]</ref>, the total training budget is 200 iterations, each of which consists of 1M steps taken on the environment by the active agent, interspersed with regular learning updates (on one, or concurrently on both agents, depending on the paradigm), on batches of transitions sampled from the active agent's replay buffer. Both agents are independently evaluated on the environment for 500K steps after each training iteration.</p><p>Most of our experiments are performed on the Atari domain <ref type="bibr" target="#b3">[Bellemare et al., 2013]</ref>, using the exact algorithm and hyperparameters from <ref type="bibr" target="#b44">[van Hasselt et al., 2016]</ref>. We use a fixed set of four representative games to demonstrate most of our empirical results, two of which (BREAKOUT, PONG) can be thought of as easy and largely solved by baseline agents, while the others (SEAQUEST, SPACE INVADERS) have non-trivial learning curves and remain challenging. Unless stated otherwise, all results show averages over at least 5 seeds, with confidence intervals indicating variation over seeds. In comparative plots, boldface entries indicate the default Tandem DQN configuration, and gray lines always correspond to the active agent's performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The Tandem Effect</head><p>We begin by reproducing the striking observation in <ref type="bibr">[Fujimoto et al., 2019b]</ref> that the passive learner generally fails to adequately learn from the very data stream that is demonstrably sufficient for its architecturally identical active counterpart; we refer to this phenomenon as the 'tandem effect' (Fig. <ref type="figure" target="#fig_0">1</ref>, bottom). We ascertain the generality of this finding by replicating it across a broad suite of environments and agent architectures: Double-DQN on 57 Atari environments <ref type="bibr">(Appendix Figs. 10 &amp; 11)</ref>, adapted agent variants on four Classic Control domains from the OpenAI Gym library <ref type="bibr" target="#b6">[Brockman et al., 2016]</ref> and the MinAtar domain <ref type="bibr" target="#b52">[Young and Tian, 2019]</ref>  <ref type="bibr">(Appendix Figs. 12 &amp; 15)</ref>, and the distributed R2D2 agent <ref type="bibr" target="#b21">[Kapturowski et al., 2019]</ref> (Appendix Fig. <ref type="figure" target="#fig_9">14</ref>). Details on agents and environments are provided in the Appendix<ref type="foot" target="#foot_3">foot_3</ref> .</p><p>Empirically, we make the informal observation that while active and passive Q-networks tend to produce similar values for typical state-action pairs under the active policy (where the action is the active Q-value function's argmax for a given state), their values are less correlated for other (non-argmax) actions, and in fact the active and passive greedy policies of a Tandem DQN tend to disagree in a large fraction of states under the behavior distribution (on average &gt; 75% of states, after 100M steps of training, across 57 Atari games; see Appendix Fig. <ref type="figure" target="#fig_2">13</ref>). Moreover, in a fraction (≈ 12/57) of Atari games, we observe the passive agent's network to strongly over-estimate a fraction of state-action values, with the over-estimation growing as training progresses. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Analysis of the Tandem Effect</head><p>In line with existing explanations <ref type="bibr" target="#b28">[Levine et al., 2020]</ref>, we propose that the tandem effect is primarily caused by extrapolation error when certain state-action pairs are under-represented in the active agent's behavior data. Specifically with ε-greedy policies, even small over-estimation of the values of rarely seen actions can lead to sufficient behavior deviations to cause catastrophic under-performance.</p><p>We further extend this hypothesis: in the context of deep reinforcement learning (i.e. with non-linear function approximation), an inadequate data distribution can drive over-generalization <ref type="bibr" target="#b4">[Bengio et al., 2020]</ref>, making such erroneous extrapolation likely. While the tandem effect can show up as learning inefficiency even in the tabular case <ref type="bibr" target="#b51">[Xiao et al., 2021]</ref>, it proves especially pernicious in the case of non-linear function approximation, where erroneous extrapolation can lead to errors not just on completely unseen, but also rarely seen data, and can persist in the infinite-sample limit.</p><p>Coalescing this view and past analyses of challenges in offline RL (e.g. <ref type="bibr" target="#b28">[Levine et al., 2020</ref><ref type="bibr">, Fujimoto et al., 2019b</ref><ref type="bibr" target="#b29">, Liu et al., 2020]</ref>) into the following three potential contributing factors in the tandem effect provides a natural structure to our analysis:</p><formula xml:id="formula_0">Bootstrapping (B)</formula><p>The passive agent's bootstrapping from poorly estimated (in particular, overestimated) values causes any initially small mis-estimation to get amplified.</p><p>Data Distribution (D) Insufficient coverage of sub-optimal actions under the active agent's policy may lead to their mis-estimation by the passive agent. In the case of over-estimation, this may lead to the passive agent's under-performance.</p><p>Function Approximation (F) A non-linear function approximator used as a Q-value function may tend to wrongly extrapolate the values of state-action pairs underrepresented in the active agent's behavior distribution. This tendency can be inherent and persistent, in the sense of being independent of initialization and not being reduced with increased training on the same data distribution.</p><p>These proposed contributing factors are not at all mutually exclusive; they may interact in causing or exacerbating the tandem effect. Insufficient coverage of sub-optimal actions under the active agent's behavior distribution (D) may lead to insufficient constraint on the respective values, which allows for effects of erroneous extrapolation by a function approximator (F). Where this results in over-estimation, the use of bootstrapping (B) carries the potential to 'pollute' even well-covered state-action pairs by propagating over-estimated values (especially via the max operator in the case of Q-learning). In the next sections we empirically study these three factors in isolation, to establish their actual roles and relative contributions to the overall difficulty of passive learning.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The Role of Bootstrapping</head><p>One distinguishing feature of reinforcement learning as opposed to supervised learning is its frequent use of learned quantities as preliminary optimization targets, most prominently in what is referred to as bootstrapping in the widely used TD algorithms <ref type="bibr" target="#b38">[Sutton, 1988]</ref>, where preliminary estimates of the value function are used as update targets. In the Double-DQN algorithm these updates take the form Q(s, a) ← r + γ Q(s , arg max a Q(s , a )), where Q denotes the parametric Q-value function, and Q is the target network Q-value function, i.e. a time-delayed copy of Q.</p><p>Four value functions are involved in the active and passive updates of Tandem DQN: Q A , QA , Q P and QP , where the A/P subscripts refer to the Q-value functions of the active and passive agents, respectively. The use of its own target network by the passive agent makes bootstrapping a plausible strong contributor to the tandem effect. To test this, we replace the target values and/or policies in the update equation for the passive agent, with the values provided by the active agent's value functions:</p><formula xml:id="formula_1">Q P (s, a) ←        r + γ QP (s , arg max a Q P (s , a )) Vanilla Tandem DQN r + γ QA (s , arg max a Q P (s , a )) Same Target Q r + γ QP (s , arg max a Q A (s , a )) Same Target π r + γ QA (s , arg max a Q A (s , a ))</formula><p>Same Target π&amp;Q</p><p>As shown in Fig. <ref type="figure" target="#fig_1">2</ref>, the use of the active value functions as targets reduces the active-passive gap by only a small amount. Note that when both active target values and policy are used, both networks are receiving an identical sequence of targets for their update computations, a sequence that suffices for the active agent to learn a successful policy. Strikingly, despite this the tandem effect appears largely preserved: in all but the easiest games (e.g. PONG<ref type="foot" target="#foot_4">foot_4</ref> ) the passive agent fails to learn effectively.</p><p>To more precisely understand the effect of bootstrapping with respect to a potential value overestimation by the passive agent, in Appendix Fig. <ref type="figure" target="#fig_10">16</ref> we also show the values of the passive networks in the above experiment compared to those of the respective active networks. As hypothesised, we observe that the vanilla tandem setting leads to significant value over-estimation, and that indeed bootstrapping plays a substantial role in amplifying the effect: passive networks trained using the active network's bootstrap targets do not over-estimate compared to the active network at all.</p><p>These findings indicate that a simple notion of value over-estimation itself is not the fundamental cause of the tandem effect, and that (B) plays an amplifying, rather than causal role. Additional evidence for this is provided below, where the tandem effect occurs in a purely supervised setting without bootstrapping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">The Role of the Data Distribution</head><p>The critical role of the data distribution for offline learning is well established <ref type="bibr">[Fujimoto et al., 2019b</ref><ref type="bibr" target="#b20">, Jacq et al., 2019</ref><ref type="bibr" target="#b29">, Liu et al., 2020</ref><ref type="bibr" target="#b47">, Wang et al., 2021]</ref>. In particular, <ref type="bibr">Wang et al. [2020a]</ref> showed that simpler notions of state-space coverage may not suffice for efficient offline learning with function approximation (even in the linear case and under a strong realizability assumption); much stronger assumptions on the data distribution, typically not satisfied in practical scenarios, may actually be required. Here we extend past analysis empirically, by investigating how properties of the data distribution (e.g. stochasticity, stationarity, the size and diversity of the dataset, and its proximity to the passive agent's own behavior distribution) affect its suitability for passive learning.</p><p>The exploration parameter ε A simple way to affect the data distribution's state-action coverage (albeit in a blunt and uniform way) is by varying the exploration parameter ε of the active agent's ε-greedy behavior policy (for training, not for evaluation). Note that a higher ε parameter affects the active agent's own training performance, as its ability to navigate environments requiring precise control is reduced. In Fig. <ref type="figure" target="#fig_2">3</ref> (top) we therefore report the relative passive performance (i.e. as a fraction of the active agent's performance, which itself also varies across parameters), with absolute performance plots included in the Appendix for completeness (Fig. <ref type="figure" target="#fig_0">17</ref>). We observe that the relative passive performance is indeed substantially improved when the active behavior policy's stochasticity (and as a consequence its coverage of non-argmax actions along trajectories) is increased, and conversely it reduces with a greedier behavior policy, providing evidence for the role of (D).</p><p>Sticky actions An alternative potential source of stochasticity is the environment itself, e.g. the use of 'sticky actions' in Atari <ref type="bibr" target="#b30">[Machado et al., 2018]</ref>: with fixed probability, an agent action is ignored (and the previous action repeated instead). This type of environment-side stochasticity should not be expected to cause new actions to appear in the behavior data, and indeed Fig. <ref type="figure" target="#fig_2">3</ref> (bottom) shows no substantial impact on the tandem effect.</p><p>Replay size Our results contrast with the strong offline RL results in <ref type="bibr" target="#b1">[Agarwal et al., 2020]</ref>. We hypothesize that the difference is due to the vastly different dataset size (full training of 200M  transitions vs. replay buffer of 1M). Interpolating between the tandem and the offline RL setting from <ref type="bibr" target="#b1">[Agarwal et al., 2020]</ref>, we increase the replay buffer size, thereby giving the passive agent access to somewhat larger data diversity and state-action coverage (this does not affect the active agent's training as the active agent is constrained to only sample from the most recent 1M replay samples, as in the baseline variant). A larger replay buffer somewhat mitigates the passive agent's under-performance (Fig. <ref type="figure" target="#fig_3">4</ref>), though it appears to mostly slow down rather than prevent the passive agent from eventually under-performing its active counterpart substantially. As we suspect that a sufficient replay buffer size may depend on the effective state-space size of an environment, we also perform analogous experiments on the (much smaller) classic control domains; results (Appendix Fig. <ref type="figure" target="#fig_14">22</ref>) remain qualitatively the same.</p><p>Note that for a fixed dataset size, sample diversity can take different forms. Many samples from a single policy may provide better coverage of states on, or near, policy-typical trajectories. Meanwhile, a larger collection of policies, with fewer samples per policy, provides better coverage of many trajectories at the expense of lesser coverage of small deviations from each. To disentangle the impact of these modalities, while also shedding light on the role of stationarity of the distribution, we next switch to the 'Forked Tandem' variation of the experimental paradigm.</p><p>Fixed policy Upon forking, the frozen active policy is executed to produce training data for the passive agent, which begins its training initialized with the active network's weights. Note that this constitutes a stronger variant of the tandem experiment. At the time of forking, the agents do not merely share analogous architectures and equal 'data history', but also identical network weights (whereas in the simple tandem setting, the agents were distinguished by independently initialized networks). Moreover, the data used for passive training can be thought of as a 'best-case scenario': generated by a single fixed policy, identical to the passive policy at the beginning of passive training. Strikingly, the tandem effect is not only preserved but even exacerbated in this setting (Fig. <ref type="figure" target="#fig_4">5</ref>, top): after forking, passive performance decays rapidly in all but the easiest games, despite starting from a near-optimally performing initialization. This re-frames the tandem effect as not merely the difficulty of passively learning to act, but even to passively maintain performance. Instability appears to be inherent in the very learning process itself, providing strong support to the hypothesis that an interplay between (D) and (F) is critical to the tandem effect. In Appendix Fig. <ref type="figure" target="#fig_15">23</ref> we additionally show that similarly to the regular tandem setting, stochasticity of the active policy after forking influences the passive agent's ability to maintain performance.</p><p>Fixed replay A variation on the above experiments is to freeze the replay buffer while continuing to train the passive policy from this fixed dataset. Instead of a stream of samples from a single policy, this fixed data distribution now contains a fixed number of samples from a training process of the length of the replay buffer, i.e. from a number of different policies. The collapse of passive performance here (Fig. <ref type="figure" target="#fig_4">5</ref>, bottom) is less rapid, yet qualitatively similar. In Appendix Fig. <ref type="figure" target="#fig_3">24</ref> we present yet another variant of this experiment with similar results, showing that the effect is robust to minor variations in the exact way of fixing the data distribution of a learning agent.</p><p>These experiments provide strong evidence for the importance of (D): a larger replay buffer, containing samples from more diverse policies, can be expected to provide an improved coverage of (currently) non-greedy actions, reducing the tandem effect. While the forked tandem begins passive learning with the seemingly advantageous high-performing initialization, state-action coverage is critically limited in this case. In the frozen-policy case, a large number of samples from the very same ε-greedy policy can be expected to provide very little coverage of non-greedy actions, while in the frozen-replay case, a smaller number of samples from multiple policies can be expected to only do somewhat better in this regard. In both cases the tandem effect is highly pronounced.</p><p>On-policy evaluation The strength of the last two experiments lies in the observation that, since active and passive networks have identical parameter values at the beginning of passive training, their divergence cannot be attributed to small initial differences getting amplified by training on an inadequate data distribution. With so many factors held fixed, the collapse of passive performance when trained on the very data distribution produced by its own initial policy begs the question whether off-policy Q-learning itself is to blame for this failure mode, e.g. via statistical over-estimation bias introduced by the max operator <ref type="bibr" target="#b43">[van Hasselt, 2010</ref>]. Here we provide a negative answer, by performing on-policy evaluation with SARSA <ref type="bibr" target="#b36">[Rummery and Niranjan, 1994]</ref> (Fig. <ref type="figure">6</ref>), and even purely supervised regression on the Monte-Carlo returns (Appendix Fig. <ref type="figure" target="#fig_16">25</ref>), in the forked tandem setup. While evaluation succeeds, in the sense of minimizing evaluation error on the given behavior distribution, atypical action values under the behavior policy suffer substantial estimation error, resulting in occasional over-estimation. The resulting ε-greedy control policy under-performs the initial policy at forking time as catastrophically as in the other forked tandem experiments (more details in Appendix A.3). Strengthening the roles of (D) and (F) while further weakening that of (B), these observations point to an inherent instability of offline learning, different from that of Baird's famous example <ref type="bibr" target="#b2">[Baird, 1995]</ref> or the 'Deadly Triad' <ref type="bibr" target="#b38">[Sutton and</ref><ref type="bibr">Barto, 2018, van Hasselt et al., 2018]</ref>; an instability that results purely from erroneous extrapolation by the function approximator, when the utilized data distribution does not provide adequate coverage of relevant state-action pairs. Self-generated data Our final empirical question in this section is 'How much data generated by the passive agent is needed to correct for the tandem effect?'. While a full investigation of this question exceeds the scope of this paper and is left for future work, the tandem setup lends itself to a simple experiment: both agents interact with the environment and fill individual replay buffers, one of them (for simplicity still referred to as 'passive') however learns from data stochastically mixed from both replay buffers. Fig. <ref type="figure">7</ref> shows that even a moderate amount (10%-20%) of 'own' data yields a substantial reduction of the tandem effect, while a 50/50 mixture completely eliminates it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">The Role of Function Approximation</head><p>We structure our investigation of the role of function approximation in the tandem effect into two categories: the optimization process and the function class used.</p><p>Optimization <ref type="bibr" target="#b1">Agarwal et al. [2020]</ref> and <ref type="bibr" target="#b34">Obando-Ceron and Castro [2021]</ref> demonstrated that the Adam optimization algorithm <ref type="bibr" target="#b23">[Kingma and Ba, 2015]</ref> outperforms RMSProp <ref type="bibr" target="#b41">[Tieleman and Hinton, 2012]</ref> used in our experiments. In Appendix Fig. <ref type="figure" target="#fig_1">20</ref> we show that while both active and passive agents perform better with Adam, the tandem effect itself is unaffected by the choice of optimizer.</p><p>Another plausible hypothesis is that the passive network suffers from under-fitting and requires more updates on the same data to attain comparable performance to the active learner. Varying the number of passive agent updates per active agent update step, we find that more updates worsen the performance of the passive agent (Appendix Fig. <ref type="figure" target="#fig_1">21</ref>). This rejects insufficient training as a possible cause, and further supports the role of (D). We also note that, together with the forked tandem experiments in the previous section, this finding distinguishes the tandem effect from the issue of estimation error in the offline learning setting <ref type="bibr" target="#b51">[Xiao et al., 2021]</ref>: while in the tabular setting estimation error dominates the learning challenge and a sufficient training duration (assuming full state-space coverage) guarantees convergence to a good solution, this is not necessarily the case with function approximation trained on a given data distribution.</p><p>Function class Given that the active and passive agents share an identical network architecture, the passive agent's under-performance cannot be explained by an insufficiently expressive function approximator. Performing the tandem experiment with pure regression of the passive network's outputs towards the active network's (a variant of network distillation <ref type="bibr" target="#b18">[Hinton et al., 2015]</ref>), instead of TD based training, we observe that the performance gap is indeed vastly reduced and in some games closed entirely (see Appendix Fig. <ref type="figure" target="#fig_12">19</ref>); however, strikingly, it remains in some.</p><p>Next, we vary the function class of both networks by varying the depth and width of the utilized Q-networks on a set of Classic Control tasks. As can be seen in Fig. <ref type="figure">8</ref> (and Appendix Fig. <ref type="figure" target="#fig_1">28</ref>), the magnitude of the active-passive performance gap appears negatively correlated with network width, which is in line with (F): an increase in network capacity results in less pressure towards over-generalizing to infrequently seen action values and an ultimately smaller tandem effect. On the other hand, the gap seems to correlate positively with network depth. We speculate that this may relate to the finding that deeper networks tend to be biased towards simpler (e.g. lower rank) solutions, which may suffer from increased over-generalization <ref type="bibr" target="#b19">[Huh et al., 2021</ref><ref type="bibr">, Kumar et al., 2020a]</ref>.</p><p>Finally, we investigate varying the function class of only the passive network by sharing the weights of the first k (out of 5) layers of active and passive networks, while constraining the passive network to only update the remaining top 5 -k layers, and using the 'representation' at layer k acquired through active learning only. This reduces the 'degrees of freedom' of the passive agent, which we hypothesize reduces its potential for divergence. Indeed, Fig. <ref type="figure">9</ref> illustrates that passive performance correlates strongly with the number of tied layers, with the variant for which only the linear output layer is trained passively performing on par with the active agent. A similar result is obtained in the forked tandem setting, see Appendix Fig. <ref type="figure" target="#fig_18">27</ref>. This finding provides a strong indirect hint towards (F): with only part of the network's layers being trained passively, much of its 'generalization capacity' is shared between active and passive agents. States that are not aggregated by the shared bottom layers (only affected by active training) have to be 'erroneously' aggregated by the remaining top layers of the network for over-generalization to occur. A more thorough investigation of this, exceeding the scope of this paper, may involve attempting to measure (over-)generalization more directly, e.g. via gradient interference <ref type="bibr" target="#b4">[Bengio et al., 2020]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Applications of the Tandem Setting</head><p>In addition to being valuable for studying the challenges in offline RL, we propose that the Tandem RL setting provides analytic capabilities that make it a useful tool in the empirical analysis of general (online) reinforcement learning algorithms. At its core, the tandem setting aims to decouple learning dynamics from its impact on behavior and the data distribution, which are inseparably intertwined in the online setting. While classic offline RL achieves a similar effect, as an analytic tool it has the potential downside of typically using a stationary distribution. Tandem RL, on the other hand, presents the passive agent with a data distribution which realistically represents the type of non-stationarity encountered in an online learning process, while still holding that distribution independent from the learning dynamics being studied. This allows Tandem RL to be used to study, e.g., the impact of variations in the learning algorithm on the quality of a learned representation, without having to control for the indirect confounding effect of a different behavior causing a different data distribution.</p><p>While extensive examples of this exceed the scope of this paper, Appendix A.5 contains a single such experiment, testing QR-DQN <ref type="bibr" target="#b10">[Dabney et al., 2018]</ref> as a passive learning algorithm (the active agent being a Double-DQN). This is motivated by the observation of <ref type="bibr" target="#b1">Agarwal et al. [2020]</ref>, that QR-DQN outperforms DQN in the offline setting. QR-DQN indeed appears to be a nontrivially different passive learning algorithm, significantly better in some games, while curiously worse in others (Fig. <ref type="figure" target="#fig_1">29</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion and Conclusion</head><p>At a high level, our work can be viewed as investigating the issue of (in)compatibility between the data distribution used to train a function approximator and the data distribution relevant in its evaluation. While in supervised learning, generalization can be viewed as the problem of transfer from a training to a (given) test distribution, the fundamental challenge for control in reinforcement learning is that the test distribution is created by the very outcome of learning itself, the learned policy. The various difficulties of learning to act from offline data alone throw into focus the role of interactivity in the learning process: only by continuously interacting with the environment does an agent gradually 'unroll' the very data on which its performance will be evaluated. This need not be an obstacle in the case of exact (i.e. tabular) functions: with sufficient data, extrapolation error can be avoided entirely. In the case of function approximation however, as small errors compound rapidly into a difference in the underlying state distribution, significant divergence and, as this and past work demonstrates, ultimately catastrophic under-performance can occur. Function approximation plays a two-fold role here: (1) being an approximation, it allows deviations in the outputs; (2) as the learned quantity, it is (especially in the non-linear case) highly sensitive to variations in the input distribution. When evaluated for control after offline training, these two roles combine in a way that is 'unexplored' by the training process: minor output errors cause a drift in behavior, and thereby a drift in the test distribution.</p><p>While related, this challenge is subtly different from the well-known divergence issues of off-policy learning with function approximation, demonstrated by Baird's famous counterexample <ref type="bibr" target="#b2">[Baird, 1995]</ref> (see also <ref type="bibr" target="#b42">[Tsitsiklis and Van Roy, 1996]</ref>) and conceptualized as the Deadly Triad <ref type="bibr" target="#b38">[Sutton and</ref><ref type="bibr">Barto, 2018, van Hasselt et al., 2018]</ref>. While these depend on bootstrapping as a mechanism to cause a feedback-loop resulting in value divergence, our results show that the offline learning challenge persists even without bootstrapping, as small differences in behavior cause a drift in the 'test distribution' itself. Instead of a training-time output drift caused by bootstrapping, the central role is taken by a test-time drift of the state distribution caused by the interplay of function approximation and a fixed data distribution (as opposed to dynamically self-generated data).</p><p>Our empirical work highlights the importance of interactivity and 'learning from your own mistakes' in learning control. Starting out as an investigation of the challenges in offline reinforcement learning, it also provides a particular viewpoint on the classical online reinforcement learning case. Heuristic explanations for highly successful deep RL algorithms like DQN, based on intuitions from (e.g.) approximate policy iteration, need to be viewed with caution in light of the apparent hardness of a policy improvement step based on approximate policy evaluation with a function approximator.</p><p>Finally, the forked tandem experiments show that even high-performing initializations are not robust to a collapse of control performance, when trained under their own (but fixed!) behavior distribution. Not just learning to act, but even maintaining performance appears hard in this setting. This provides an intuition that we distill into the following working conjecture: The dynamics of deep reinforcement learning for control are unstable on (almost) any fixed data distribution.</p><p>Expanding on the classical on-vs. off-policy dichotomy, we propose that indefinitely training on any fixed data distribution, without strong explicit regularization or additional inductive bias, gives rise to 'exploitation of gaps in the data' by a function approximator, akin to the over-fitting occurring when over-training on a fixed dataset in supervised learning. Interaction, i.e. generating at least moderate amounts of one's own experience, appears to be a powerful, and for the most part necessary, regularizer and stabilizer for learning to act, by creating a dynamic equilibrium between optimization of a function approximator and its own data-generation process.</p><p>Broader impact statement This work lies in the realm of foundational RL, contributing to the fundamental understanding and development of RL algorithms, and as such is far removed from ethical issues and direct societal consequences. On the other hand, it highlights the empirical difficulty and limitations of offline deep RL for control -increasingly important for practical applications, e.g. robotics, where interactive data is costly, and learning from offline datasets is desirable. In this way it complements existing theoretical hardness results in this area and provides additional context to existing empirical techniques which aim to overcome or circumvent those limitations. We believe that an improved understanding of these challenges can play an important role in creating robust and stable offline learning algorithms whose outputs can be more safely deployed in the real world. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Appendix</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1 Implementation, Hyperparameters and Evaluation Details</head><p>The implementation of our main agent, Tandem DQN, is based on the Double-DQN <ref type="bibr" target="#b44">[van Hasselt et al., 2016]</ref> agent provided in the DQN Zoo open-source agent collection <ref type="bibr" target="#b35">[Quan and Ostrovski, 2020]</ref>. The code uses JAX <ref type="bibr" target="#b5">[Bradbury et al., 2018]</ref>, and the Rlax, Haiku and Optax libraries <ref type="bibr" target="#b8">[Budden et al., 2020</ref><ref type="bibr">, Hennigan et al., 2020</ref><ref type="bibr">, Hessel et al., 2020]</ref> for RL losses, neural networks and optimization  Note: because of the use of an untuned implementation of R2D2, active results are not directly comparable to those of the published agent <ref type="bibr" target="#b21">[Kapturowski et al., 2019]</ref>. It can be seen that the passive network in the vanilla Tandem DQN setting tends to over-estimate values (compared to the active one), which is almost perfectly mitigated by using the same bootstrap target values as the active network, and in fact reversed when using the same target policy (but not the same target values). Note that in all four configurations the passive agents substantially under-perform their active counterparts (Fig. <ref type="figure" target="#fig_1">2</ref>), showing that bootstrapping-amplified over-estimation is only part, not the main cause of the tandem effect. algorithms, respectively. All algorithmic hyperparameters correspond to those in the DQN Zoo implementation of Double-DQN.</p><p>In the 'Tandem' setting, active and passive agents' networks weights are initialized independently. Agents in this setting are trained in lockstep, i.e. active and passive agents are updated simultaneously from the same batch of sampled replay transitions, with the exception of one experiment in Section 3.3, where we study the effect of the number of passive updates relative to active agent updates.</p><p>In the 'Forked Tandem' setting, only one of the agents is trained at any one time. The active agent trains (as a regular Double-DQN) up to the time of forking, at which point the passive agent is created as a 'fork' (i.e., with identical network weights) of the active agent. After forking, only the passive agent is trained. The active agent is used for data generation, either by executing its policy and continuing to fill the replay buffer ('Fixed Policy' experiment), or by sampling batches from its 'frozen' last replay buffer obtained in the active phase of training ('Fixed Replay' experiment).</p><p>The total training budget is kept fixed at 200 iterations in both settings, split across 'active' and 'passive' training phases in the forked tandem setting. In all cases, both active and passive agents are evaluated after each training iteration for 500K environment steps. Executed with an NVidia P100 GPU accelerator, each Atari training run takes approximately 4.5 days of wall-clock time.</p><p>The majority of our Atari experiments use the regular ALE Atari environment <ref type="bibr" target="#b3">[Bellemare et al., 2013]</ref>, using DQN's default preprocessing, random noop-starts and action-repeats <ref type="bibr" target="#b32">[Mnih et al., 2015]</ref>, as well as using the reduced action-set (i.e. each game exposing the subset of Atari's total 18 actions which are relevant to this game). For the 'Sticky actions' experiment, we use the OpenAI Gym variant of Atari <ref type="bibr" target="#b6">[Brockman et al., 2016]</ref> enhanced with sticky actions <ref type="bibr" target="#b30">[Machado et al., 2018]</ref>.</p><p>Unless stated explicitly, all our results are reported as mean episode returns averaged across 5 seeds, with light and dark shading indicating 0.5 standard deviation confidence bounds and min/max bounds (across seeds), respectively. Gray curves always indicate active performance.</p><p>The 'relative passive performance' (or 'passive performance as fraction of active performance') curves are meant to illustrate the relative (under-)performance of the passive agent compared to its active counterpart in cases where the active agent's performance varies strongly across configurations. Denoting R a (t), R p (t) the active and passive (undiscounted) episodic returns at iteration t ∈   </p><formula xml:id="formula_2">R p (t) -m R a (t) -m</formula><p>with the value being clipped to lie in [0, 1] and set to 1.0 whenever R a (t) = m.</p><p>For the classic control <ref type="bibr" target="#b6">[Brockman et al., 2016]</ref> and MinAtar <ref type="bibr" target="#b52">[Young and Tian, 2019]</ref> experiments we used a modified version of the DQN agent from the Dopamine library <ref type="bibr" target="#b9">[Castro et al., 2018]</ref>. The modifications made were:</p><p>• Double- <ref type="bibr">DQN [van Hasselt et al., 2016]</ref>  connected layers of 512 units (each with ReLu activations), followed by a final fully connected layer that yields the Q-values for each action. In Figs. 8 and 28 we varied the number of hidden layers and units, where the variation of number of units is applied uniformly across all layers.</p><p>The default network architecture for the MinAtar environments is one convolutional layer with 16 features of 3 × 3 × 3 and stride of 1 followed by a ReLu activation, whose output is mapped via a fully connected layer to the network's Q-value outputs.</p><p>The classic control environments were all run on CPUs; each run took between 20 minutes (CARTPOLE) and 2 hours (MOUNTAINCAR). The MinAtar environments were all run on NVidia P100 GPUs, each run taking approximately 12 hours to complete. Results for all classic control and MinAtar environments are reported as mean episode returns averaged across 10 seeds, with light and dark shading indicating 0.5 standard deviation confidence bounds and min/max bounds (across seeds), respectively.</p><p>For the R2D2 experiment (Fig. <ref type="figure" target="#fig_9">14</ref>), an untuned variant of the distributed R2D2 algorithm <ref type="bibr" target="#b21">[Kapturowski et al., 2019]</ref> was used. Each run used 4 TPUv3 chips for learning and inference, together with a fleet of approximately 500 CPU-based actor threads for distributed environment interaction, completing a training run of approximately 150K batch updates in about 7 hours wall-clock time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 Forked Tandem: Variants</head><p>Here we present additional experimental variants performed within the Forked Tandem setup.</p><p>Varying exploration parameter ε with fixed policy: This experiment is an extension of the 'Fixed Policy' (Fig. <ref type="figure" target="#fig_4">5</ref>) and 'The exploration parameter ε' (Fig. <ref type="figure" target="#fig_2">3</ref> (top)) experiments. After freezing the active agent's policy for further data generation, its ε parameter is set to a different value, to explore the impact of the resulting policy stochasticity on the ability of the passive learning process to maintain the initial performance level. We note that because of the fixed active policy, in this case active training performance does not depend on the chosen configuration, and so absolute passive performance curves are more directly comparable.</p><p>Similar to the results in the regular tandem setup, we observe (in Fig. <ref type="figure" target="#fig_0">17</ref>) that the ability of the passive agent to maintain the initial performance level is substantially aided by the stochasticity resulting from a higher value of ε, providing further support for the importance of (D).</p><p>Training process samples ('Groundhog day'): The forked tandem experiments in Section 3.2 indicate that data distributions represented by a fixed replay buffer or a stream of data generated by a single fixed policy both show a lack of diversity leading to a catastrophic collapse of an (initially high-performing) agent when trained passively. The naive expectation that the (unbounded) stream of data generated by a fixed policy may provide a better state-action coverage than the fixed-size dataset of a single replay buffer (1M transitions) is invalidated by the observation of the fixed-replay training leading to somewhat slower degradation of passive performance. Unsurprisingly in hindsight, the diversity given by the samples stemming from many different policies along a learning trajectory of 1M training steps appears to be significantly higher than that generated by a single ε-greedy policy.</p><p>To probe this further, we devise an experiment attempting to combine both: instead of freezing the active policy after forking, we continue training it (and filling the replay buffer), however after each iteration of 1M steps, the active network is reset to its parameter values at forking time. Effectively this produces a data stream that can be viewed as producing samples of the training process of a single iteration, a variant that we refer to as the 'Groundhog day' experiment. This setting combines the multiplicity of data-generating policies with the property of an unbounded dataset being presented to the passive agent. The results are shown in Fig. <ref type="figure" target="#fig_3">24</ref> -indeed we observe that the groundhog day setting improves passive performance over the fixed-policy setting, while not clearly changing the outcome in comparison to the fixed-replay setting.</p><p>Overall we observe a general robustness of the tandem effect with respect to minor experimental variations in the forked tandem settings. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Space invaders</head><p>Forked @25 Forked @50 Forked @100 Figure 24: Forked Tandem DQN: 'groundhog day' variation, active vs. passive performance. After forking, the active agent trains for a full iteration (1M environment steps), and is then reset to its initial network parameters at the time of forking, repeatedly for the remaining number of iterations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3 Forked Tandem: Policy Evaluation</head><p>Among the most striking findings in our work are the forked tandem findings in Sections 3.2 and A.2, demonstrating a catastrophic collapse of performance when passively training from a fixed data distribution, even when the starting point for the passive policy is the very same high-performing policy generating the data. This leads to the question whether the process of Q-learning itself is to blame for this failure mode, e.g. via the well-known statistical over-estimation bias introduced by the max operator <ref type="bibr" target="#b43">[van Hasselt, 2010]</ref>. To test this, we perform two variants of the forked tandem experiment with SARSA <ref type="bibr" target="#b36">[Rummery and Niranjan, 1994]</ref> and (purely supervised) Monte-Carlo return regression based policy evaluation instead of Q-learning as the passive learning algorithm. (We note that while SARSA evaluation of an ε-greedy policy can still exhibit over-estimation bias, this is not the case for Monte-Carlo return regression.)</p><p>As can be seen in <ref type="bibr">Figs. 6 and 25(top)</ref>, even in this on-policy policy evaluation setting, the resulting control performance catastrophically collapses after a short length of training. We also observe that  this is not due to a failing of the evaluation: Fig. <ref type="figure" target="#fig_16">25</ref>(bottom) shows effective minimization of the Monte-Carlo error, indicating that the control failure is due to extrapolation error (and in particular, over-estimation) on infrequent (under the active policy) state-action pairs. These findings provide strong support for the role of (D) and (F) while weakening that of (B): In contrast to the well-known 'Deadly Triad' phenomenon <ref type="bibr" target="#b38">[Sutton and</ref><ref type="bibr">Barto, 2018, van Hasselt et al., 2018]</ref>, the tandem effect occurs without the amplifying mechanism of bootstrapping or the statistical over-estimation caused by the max operator, solely due to erroneous extrapolation by the function approximator to state-action pairs which are under-represented in the given training data distribution.</p><p>We have so far presented the equal network weights of active and passive networks at forking time as a strength of the forked tandem setting, following the intuition that an initialization by the highperforming policy should be advantageous for maintaining performance in these experiments. A plausible counter-argument could be that the representation (i.e., the network weights) learned by the active agent in service of control could be a poor, over-specialized starting point for policy evaluation. To verify that this is not a major factor, we also perform the above Monte-Carlo evaluation experiment with the passive network freshly re-initialized at the beginning of passive training. As shown in Fig. <ref type="figure" target="#fig_17">26</ref>, while a fresh initialization of the passive network indeed allows it to similarly effectively minimize Monte-Carlo error, its control performance here never exceeds random performance levels, further connecting the tandem effect to (D) and (F).</p><p>We remark that the demonstrated control performance failure of approximate policy evaluation casts a shadow over the concept of approximate policy iteration, or the application of this concept in heuristic explanations of the function of empirically successful algorithms like DQN <ref type="bibr" target="#b32">[Mnih et al., 2015]</ref>. A successful greedy improvement step on an approximately evaluated policy appears implausible given the brittleness of approximate policy evaluation even in the nominally best-case scenario of an on-policy data distribution.</p><p>Another view point emerging from these results is that the classic category of 'on-policy data' appears less relevant in this context: an appropriate data distribution for robust approximate evaluation targeting control seems to require a data distribution sufficiently overlapping with the (hypothetical, in practice unavailable) behavior distribution of the resulting policy rather than the original evaluated policy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.4 Additional Experimental Results on the Role of Function Approximation</head><p>Here we present several extra experiments, complementing the results from the end of Section 3.3.</p><p>The first set of results, shown in Fig. <ref type="figure" target="#fig_18">27</ref>, concerns the passive performance in the forked tandem setup, when the first (bottom) neural network layers are shared between active and passive agents. These bottom layers are only trained during the active training phase before forking, and are frozen after that. Similar to the corresponding experiment in the regular tandem setting (Fig. <ref type="figure">9</ref>), we observe that the passive agent's ability to maintain its initially high performance strongly correlates with the number of shared, i.e. not passively trained layers. The difference between the passive agent training a 'deep' vs. a 'linear' network (the latter corresponds to all but one of the network layers being frozen) appears stark: the tandem effect is almost equally catastrophic in all configurations except for the linear one, where it appears to be strongly reduced. While a more thorough investigation remains to future work, we remark that overall this finding appears to supports the importance of (F), in that intuitively over-extrapolation can be expected to become more problematic when passive training is applied to a larger function class (deeper part of the network).</p><p>The next experiment, shown in Fig. <ref type="figure" target="#fig_1">28</ref> and extending the results from Fig. <ref type="figure">8</ref>, investigates the impact of network architecture more generally, by varying width and depth of both active and passive agents' networks. Since changes in Atari-DQN network architecture tend to require expensive re-tuning of various hyperparameters, we chose to perform these experiments on the smaller Classic Control domains, where such changes tend to be more straightforward. Nevertheless active performance in these domains does depend on the chosen network configuration, so that we report relative performance as the more informative quantity. The findings across four domains mostly appear to echo those on CARTPOLE described in Section 3.3, showing a positive correlation of (relative) passive performance with network depth, and a negative correlation with its width. Again, a more detailed investigation of the causes for this exceeds the scope of this paper and is left to future work.</p><p>A.5 Applications of Tandem RL: Passive QR-DQN Here we provide an example application for the Tandem RL setting as an analytic tool for the study of learning algorithms in isolation from the confounding factor of behavior. As observed in <ref type="bibr">[Agarwal</ref> </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: (top-left) Held and Hein [1963] experiment setup. (top-right) Illustrations of the Tandem and Forked Tandem experiment setups. (bottom) Tandem (active and passive) performance on 4 selected Atari domains. In all figures, active agent performance is shown in gray.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Active vs. passive performance when using the active agent's target policy and/or value function for constructing passive bootstrapping targets.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure3: Passive as fraction of active performance for varying active ε-greedy behavior policies (top); regular Atari vs sticky-actions Atari (bottom). We report relative passive performance, as active performance varies across configurations. See Appendix Figs. 17 &amp; 18 for absolute performance.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Active vs. passive performance for different replay sizes (for passive agent).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Performance of a Forked Tandem DQN, training passively after freezing its data generating policy (top) or its replay buffer (bottom). Vertical lines indicate forking time points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>Figure 6: Passive performance in Forked Tandem DQN after policy evaluation with SARSA.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :Figure 9 :</head><label>89</label><figDesc>Figure 8: Passive performance as a fraction of active performance in CartPole: varying number of hidden layers and units.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: Tandem DQN: active vs. passive performance across Atari 57 (3 seeds per game).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 11 :Figure 12 :Figure 13 :</head><label>111213</label><figDesc>Figure 11: Tandem DQN: Median human-normalized scores over 57 Atari games (3 seeds per game).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 14 :</head><label>14</label><figDesc>Figure14: Tandem R2D2: active vs. passive performance on three Atari domains (3 seeds per game). Note: because of the use of an untuned implementation of R2D2, active results are not directly comparable to those of the published agent<ref type="bibr" target="#b21">[Kapturowski et al., 2019]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 16</head><label>16</label><figDesc>Figure 15: Tandem DQN evaluated on five MinAtar domains.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 17 :Figure 18 :</head><label>1718</label><figDesc>Figure17: Active vs. passive performance for varying active ε-greedy behavior policies. Note that here active performance varies across settings.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 19 :</head><label>19</label><figDesc>Figure 19: Active vs. passive performance with regular (TD-based) and regression-based Tandem DQN. The latter regresses all the passive agent's action-values towards the respective outputs of the active agent's network, which can be viewed as network distillation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 20 :Figure 21 :</head><label>2021</label><figDesc>Figure 20: Tandem DQN with the Adam optimizer (instead of RMSProp) for both active and passive network optimization. (top) Adam: Active vs. passive performance. (bottom) Passive as fraction of active performance Adam vs. RMSProp. While the Adam optimizer improves both the active and passive performance of the Tandem DQN, the relative active-passive gap is not affected strongly.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 22 :</head><label>22</label><figDesc>Figure 22: Passive performance as a fraction of active performance when varying the size of the replay buffer used by the passive agent on Classic Control domains.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 23 :</head><label>23</label><figDesc>Figure 23: Forked Tandem DQN: After 50 iterations of regular active training, the active value function is frozen and used to continuously generate data for the passive agents' training by executing an ε-greedy policy with a given value of ε.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 25 :</head><label>25</label><figDesc>Figure 25: Forked Tandem DQN: Policy evaluation with Monte-Carlo return regression. (top) Active vs. passive control performance. (bottom) Average absolute Monte-Carlo error. The Monte-Carlo error is minimized effectively by the passive training, while the control performance of the resulting ε-greedy policy collapses completely.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figure 26 :</head><label>26</label><figDesc>Figure 26: Forked Tandem DQN: Policy evaluation with Monte-Carlo return regression, passive network initialized independently of the active network at forking time. Top: Active vs. passive control performance. Bottom: Average absolute Monte-Carlo error. While Monte-Carlo error is minimized effectively by the passive training, this does not result in above-random control performance of the resulting ε-greedy policy.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Figure 27 :</head><label>27</label><figDesc>Figure 27: Forked Tandem DQN: passive performance after forking, with the first k (out of 5) layers of active and passive agent networks shared, i.e. only trained by the active agent, and fixed during the passive training phase.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>35th Conference on Neural Information Processing Systems (NeurIPS 2021).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_1"><p>The 'tandem' analogy is of course that of two riders, both of whom experience the same route, while only the front rider gets to decide on direction.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_2"><p>Our choice of Double-DQN as a baseline is motivated by its relatively strong performance and robustness compared to vanilla DQN<ref type="bibr" target="#b32">[Mnih et al., 2015]</ref>, paired with its simplicity compared to later variants like Rainbow<ref type="bibr" target="#b16">[Hessel et al., 2018]</ref>, which allows for more easily controlled experiments with fewer moving parts.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_3"><p>We provide two Tandem RL implementations: https://github.com/deepmind/deepmind-research/tree/ master/tandem_dqn based on the DQN Zoo<ref type="bibr" target="#b35">[Quan and Ostrovski, 2020]</ref>, and https://github.com/google/ dopamine/tree/master/dopamine/labs/tandem_dqn based on the Dopamine library<ref type="bibr" target="#b9">[Castro et al., 2018]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_4"><p>PONG is an outlier in that it only has 3 actions, and in a large fraction of states actions have no (irreversible) consequences, making greedy policies somewhat robust to errors in the underlying value function.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><head>Acknowledgements</head><p>We would like to thank <rs type="person">Hado van Hasselt</rs> and <rs type="person">Joshua Greaves</rs> for feedback on an early draft of this paper, and <rs type="person">Zhongwen Xu</rs> for an unpublished related piece of work at <rs type="institution">DeepMind</rs> that inspired some of our experiments. We also thank <rs type="person">Clare Lyle</rs>, <rs type="person">David Abel</rs>, <rs type="person">Diana Borsa</rs>, <rs type="person">Doina Precup</rs>, <rs type="person">John Quan</rs>, <rs type="person">Marc G. Bellemare</rs>, <rs type="person">Mark Rowland</rs>, <rs type="person">Michal Valko</rs>, <rs type="person">Remi Munos</rs>, <rs type="person">Rishabh Agarwal</rs>, <rs type="person">Tom Schaul</rs> and <rs type="person">Yaroslav Ganin</rs>, and many other colleagues at <rs type="institution">DeepMind</rs> and <rs type="person">Google Brain</rs> for the numerous discussions that helped shape this research.</p></div>
			</div>			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"> <ref type="bibr">et al., 2020]</ref><p>, the QR-DQN algorithm <ref type="bibr" target="#b10">[Dabney et al., 2018]</ref> can be preferable to DQN in the offline setting, motivating our attempt to use it as a passive agent, coupled with a regular Double-DQN active agent. As shown in Fig. <ref type="figure">29</ref>, QR-DQN indeed provides a somewhat different passive performance profile when compared to the regular Double-DQN tandem, albeit not a clearly better one. While perfectly matching active performance in one game (SPACE INVADERS) and even out-performing the active agent in another (BREAKOUT), it also shows exacerbated under-performance or instability in the other two domains. A fine-grained diagnosis of the causes of this are left to future work.</p><p>We note that any difference in performance between the DQN and QR-DQN algorithms as passive agents reflects directly on their properties as learning algorithms, i.e. their respective abilities to extract information about an appropriate control policy from observational data, while separating out any influence their learning dynamics may have on (transient) behavior and data generation. We believe that Tandem RL can become a valuable analytic tool for targeted empirical studies of such properties of learning algorithms.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Towards characterizing divergence in deep Q-learning</title>
		<author>
			<persName><forename type="first">Joshua</forename><surname>Achiam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ethan</forename><surname>Knight</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pieter</forename><surname>Abbeel</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1903.08894</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">An optimistic perspective on offline reinforcement learning</title>
		<author>
			<persName><forename type="first">Rishabh</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dale</forename><surname>Schuurmans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohammad</forename><surname>Norouzi</surname></persName>
		</author>
		<idno>PMLR</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 37th International Conference on Machine Learning</title>
		<meeting>the 37th International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">119</biblScope>
			<biblScope unit="page" from="104" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Residual algorithms: Reinforcement learning with function approximation</title>
		<author>
			<persName><forename type="first">Leemon</forename><surname>Baird</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Learning Proceedings</title>
		<imprint>
			<publisher>Elsevier</publisher>
			<date type="published" when="1995">1995. 1995</date>
			<biblScope unit="page" from="30" to="37" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The Arcade Learning Environment: an evaluation platform for general agents</title>
		<author>
			<persName><forename type="first">G</forename><surname>Marc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yavar</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joel</forename><surname>Naddaf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Veness</surname></persName>
		</author>
		<author>
			<persName><surname>Bowling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Artificial Intelligence Research</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="253" to="279" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Interference and generalization in temporal difference learning</title>
		<author>
			<persName><forename type="first">Emmanuel</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joelle</forename><surname>Pineau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Doina</forename><surname>Precup</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="767" to="777" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">JAX: composable transformations of Python+NumPy programs</title>
		<author>
			<persName><forename type="first">James</forename><surname>Bradbury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roy</forename><surname>Frostig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Hawkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matthew</forename><forename type="middle">James</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chris</forename><surname>Leary</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dougal</forename><surname>Maclaurin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">George</forename><surname>Necula</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Adam</forename><surname>Paszke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jake</forename><surname>Vanderplas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Skye</forename><surname>Wanderman-Milne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qiao</forename><surname>Zhang</surname></persName>
		</author>
		<ptr target="http://github.com/google/jax" />
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Greg</forename><surname>Brockman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vicki</forename><surname>Cheung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ludwig</forename><surname>Pettersson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonas</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Schulman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jie</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wojciech</forename><surname>Zaremba</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1606.01540</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
	<note type="report_type">OpenAI Gym. arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The importance of pessimism in fixed-dataset policy optimization</title>
		<author>
			<persName><forename type="first">Jacob</forename><surname>Buckman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carles</forename><surname>Gelada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marc</forename><forename type="middle">G</forename><surname>Bellemare</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">RLax: Reinforcement Learning in JAX</title>
		<author>
			<persName><forename type="first">David</forename><surname>Budden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matteo</forename><surname>Hessel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Quan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Kapturowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kate</forename><surname>Baumli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Surya</forename><surname>Bhupatiraju</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aurelia</forename><surname>Guy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>King</surname></persName>
		</author>
		<ptr target="http://github.com/deepmind/rlax" />
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">Pablo</forename><surname>Samuel Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Subhodeep</forename><surname>Moitra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carles</forename><surname>Gelada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Saurabh</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marc</forename><forename type="middle">G</forename><surname>Bellemare</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1812.06110</idno>
		<title level="m">Dopamine: A research framework for deep reinforcement learning</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Distributional reinforcement learning with quantile regression</title>
		<author>
			<persName><forename type="first">Will</forename><surname>Dabney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Rowland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marc</forename><forename type="middle">G</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rémi</forename><surname>Munos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the AAAI Conference on Artificial Intelligence</title>
		<meeting>the AAAI Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="volume">32</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName><forename type="first">Rasool</forename><surname>Fakoor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonas</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pratik</forename><surname>Chaudhari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><forename type="middle">J</forename><surname>Smola</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2102.09225</idno>
		<title level="m">Continuous doubly constrained batch reinforcement learning</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">Scott</forename><surname>Fujimoto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Edoardo</forename><surname>Conti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohammad</forename><surname>Ghavamzadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joelle</forename><surname>Pineau</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1910.01708</idno>
		<title level="m">Benchmarking batch deep reinforcement learning algorithms</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Off-policy deep reinforcement learning without exploration</title>
		<author>
			<persName><forename type="first">Scott</forename><surname>Fujimoto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Meger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Doina</forename><surname>Precup</surname></persName>
		</author>
		<idno>PMLR</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 36th International Conference on Machine Learning</title>
		<meeting>the 36th International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="volume">97</biblScope>
			<biblScope unit="page" from="2052" to="2062" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Movement-produced stimulation in the development of visually guided behavior</title>
		<author>
			<persName><forename type="first">Richard</forename><surname>Held</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alan</forename><surname>Hein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Comparative and Physiological Psychology</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="872" to="876" />
			<date type="published" when="1963">1963</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Haiku: Sonnet for JAX</title>
		<author>
			<persName><forename type="first">Tom</forename><surname>Hennigan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Trevor</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tamara</forename><surname>Norman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Igor</forename><surname>Babuschkin</surname></persName>
		</author>
		<ptr target="http://github.com/deepmind/dm-haiku" />
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Rainbow: combining improvements in deep reinforcement learning</title>
		<author>
			<persName><forename type="first">Matteo</forename><surname>Hessel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><surname>Modayil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tom</forename><surname>Hado Van Hasselt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Georg</forename><surname>Schaul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Will</forename><surname>Ostrovski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dan</forename><surname>Dabney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bilal</forename><surname>Horgan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohammad</forename><surname>Piot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Azar</surname></persName>
		</author>
		<author>
			<persName><surname>Silver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the AAAI Conference on Artificial Intelligence</title>
		<meeting>the AAAI Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Optax: Composable gradient transformation and optimisation</title>
		<author>
			<persName><forename type="first">Matteo</forename><surname>Hessel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Budden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fabio</forename><surname>Viola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mihaela</forename><surname>Rosca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eren</forename><surname>Sezener</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tom</forename><surname>Hennigan</surname></persName>
		</author>
		<ptr target="http://github.com/deepmind/optax" />
	</analytic>
	<monogr>
		<title level="m">JAX!</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Distilling the knowledge in a neural network</title>
		<author>
			<persName><forename type="first">Geoffrey</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oriol</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Dean</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS Deep Learning and Representation Learning Workshop</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">Minyoung</forename><surname>Huh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hossein</forename><surname>Mobahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Cheung</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2103.10427</idno>
		<title level="m">Pulkit Agrawal, and Phillip Isola. The low-rank simplicity bias in deep networks</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Learning from a learner</title>
		<author>
			<persName><forename type="first">Alexis</forename><surname>Jacq</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matthieu</forename><surname>Geist</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ana</forename><surname>Paiva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Pietquin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 36th International Conference on Machine Learning</title>
		<meeting>the 36th International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="volume">97</biblScope>
			<biblScope unit="page" from="2990" to="2999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Recurrent experience replay in distributed reinforcement learning</title>
		<author>
			<persName><forename type="first">Steven</forename><surname>Kapturowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Georg</forename><surname>Ostrovski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Quan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Remi</forename><surname>Munos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Will</forename><surname>Dabney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">MOReL: Modelbased offline reinforcement learning</title>
		<author>
			<persName><forename type="first">Rahul</forename><surname>Kidambi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aravind</forename><surname>Rajeswaran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Praneeth</forename><surname>Netrapalli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thorsten</forename><surname>Joachims</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="21810" to="21823" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Adam: A method for stochastic optimization</title>
		<author>
			<persName><forename type="first">Diederik</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jimmy</forename><surname>Ba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Learning Representations</title>
		<meeting>the International Conference on Learning Representations</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Stabilizing off-policy Q-learning via bootstrapping error reduction</title>
		<author>
			<persName><forename type="first">Aviral</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Justin</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matthew</forename><surname>Soh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">George</forename><surname>Tucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="volume">32</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Implicit under-parameterization inhibits data-efficient deep reinforcement learning</title>
		<author>
			<persName><forename type="first">Aviral</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rishabh</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dibya</forename><surname>Ghosh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2010.14498</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">DisCor: Corrective feedback in reinforcement learning via distribution correction</title>
		<author>
			<persName><forename type="first">Aviral</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abhishek</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="18560" to="18572" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Conservative Q-learning for offline reinforcement learning</title>
		<author>
			<persName><forename type="first">Aviral</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aurick</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">George</forename><surname>Tucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="1179" to="1191" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Offline reinforcement learning: Tutorial, review, and perspectives on open problems</title>
		<author>
			<persName><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aviral</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">George</forename><surname>Tucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Justin</forename><surname>Fu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2005.01643</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Provably good batch reinforcement learning without great exploration</title>
		<author>
			<persName><forename type="first">Yao</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Adith</forename><surname>Swaminathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alekh</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Emma</forename><surname>Brunskill</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2007.08202</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Revisiting the Arcade Learning Environment: Evaluation protocols and open problems for general agents</title>
		<author>
			<persName><forename type="first">C</forename><surname>Marlos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marc</forename><forename type="middle">G</forename><surname>Machado</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Erik</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joel</forename><surname>Talvitie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matthew</forename><surname>Veness</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Hausknecht</surname></persName>
		</author>
		<author>
			<persName><surname>Bowling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Artificial Intelligence Research</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="page" from="523" to="562" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Deploymentefficient reinforcement learning via model-based offline optimization</title>
		<author>
			<persName><forename type="first">Tatsuya</forename><surname>Matsushima</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hiroki</forename><surname>Furuta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yutaka</forename><surname>Matsuo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ofir</forename><surname>Nachum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shixiang</forename><surname>Gu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2006.03647</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Human-level control through deep reinforcement learning</title>
		<author>
			<persName><forename type="first">Volodymyr</forename><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Koray</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrei</forename><forename type="middle">A</forename><surname>Rusu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joel</forename><surname>Veness</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marc</forename><forename type="middle">G</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martin</forename><surname>Riedmiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andreas</forename><forename type="middle">K</forename><surname>Fidjeland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Georg</forename><surname>Ostrovski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stig</forename><surname>Petersen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Charles</forename><surname>Beattie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amir</forename><surname>Sadik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ioannis</forename><surname>Antonoglou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Helen</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dharshan</forename><surname>Kumaran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daan</forename><surname>Wierstra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shane</forename><surname>Legg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Demis</forename><surname>Hassabis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">518</biblScope>
			<biblScope unit="issue">7540</biblScope>
			<biblScope unit="page" from="529" to="533" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Accelerating online reinforcement learning with offline datasets</title>
		<author>
			<persName><forename type="first">Ashvin</forename><surname>Nair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Murtaza</forename><surname>Dalal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abhishek</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2006.09359</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Revisiting Rainbow: Promoting more insightful and inclusive deep reinforcement learning research</title>
		<author>
			<persName><forename type="first">Johan</forename><forename type="middle">S</forename><surname>Obando-Ceron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pablo</forename><surname>Samuel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Castro</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 38th International Conference on Machine Learning</title>
		<meeting>the 38th International Conference on Machine Learning</meeting>
		<imprint>
			<publisher>PMLR</publisher>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">DQN Zoo: Reference implementations of DQN-based agents</title>
		<author>
			<persName><forename type="first">John</forename><surname>Quan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Georg</forename><surname>Ostrovski</surname></persName>
		</author>
		<ptr target="http://github.com/deepmind/dqn_zoo" />
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">On-line Q-learning using connectionist systems</title>
		<author>
			<persName><forename type="first">Gavin</forename><forename type="middle">A</forename><surname>Rummery</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mahesan</forename><surname>Niranjan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
		<respStmt>
			<orgName>University of Cambridge, Department of Engineering Cambridge, UK</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Online and offline reinforcement learning by planning with a learned model</title>
		<author>
			<persName><forename type="first">Julian</forename><surname>Schrittwieser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Hubert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amol</forename><surname>Mandhane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohammadamin</forename><surname>Barekatain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ioannis</forename><surname>Antonoglou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2104.06294</idno>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Learning to predict by the methods of temporal differences</title>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">S</forename><surname>Sutton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine learning</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="9" to="44" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Reinforcement Learning: An Introduction</title>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">S</forename><surname>Sutton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">G</forename><surname>Barto</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>MIT press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">High confidence policy improvement</title>
		<author>
			<persName><forename type="first">Philip</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Georgios</forename><surname>Theocharous</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohammad</forename><surname>Ghavamzadeh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="2380" to="2388" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<author>
			<persName><forename type="first">Tijmen</forename><surname>Tieleman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geoffrey</forename><surname>Hinton</surname></persName>
		</author>
		<title level="m">Lecture 6.5: RMSProp. COURSERA: Neural Networks for Machine Learning</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Analysis of temporal-difference learning with function approximation</title>
		<author>
			<persName><forename type="first">John</forename><forename type="middle">N</forename><surname>Tsitsiklis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Benjamin</forename><surname>Van</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roy</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th International Conference on Neural Information Processing Systems</title>
		<meeting>the 9th International Conference on Neural Information Processing Systems<address><addrLine>Cambridge, MA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="1075" to="1081" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Double Q-learning</title>
		<author>
			<persName><surname>Hado Van Hasselt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="volume">23</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Deep reinforcement learning with double Qlearning</title>
		<author>
			<persName><forename type="first">Arthur</forename><surname>Hado Van Hasselt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Guez</surname></persName>
		</author>
		<author>
			<persName><surname>Silver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the AAAI Conference on Artificial Intelligence</title>
		<meeting>the AAAI Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<author>
			<persName><forename type="first">Yotam</forename><surname>Hado Van Hasselt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Florian</forename><surname>Doron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matteo</forename><surname>Strub</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nicolas</forename><surname>Hessel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><surname>Sonnerat</surname></persName>
		</author>
		<author>
			<persName><surname>Modayil</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1812.02648</idno>
		<title level="m">Deep reinforcement learning and the deadly triad</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">What are the statistical limits of offline RL with linear function approximation</title>
		<author>
			<persName><forename type="first">Ruosong</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dean</forename><forename type="middle">P</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sham</forename><forename type="middle">M</forename><surname>Kakade</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2010.11895</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<author>
			<persName><forename type="first">Ruosong</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yifan</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruslan</forename><surname>Salakhutdinov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sham</forename><forename type="middle">M</forename><surname>Kakade</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2103.04947</idno>
		<title level="m">Instabilities of offline RL with pre-trained neural representation</title>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<author>
			<persName><forename type="first">Ziyu</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><surname>Novikov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Konrad</forename><surname>Żołna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jost</forename><surname>Tobias Springenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Scott</forename><surname>Reed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bobak</forename><surname>Shahriari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Noah</forename><surname>Siegel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Josh</forename><surname>Merel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Caglar</forename><surname>Gulcehre</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2006.15134</idno>
		<title level="m">Nicolas Heess, et al. Critic regularized regression</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<author>
			<persName><forename type="first">Yifan</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">George</forename><surname>Tucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ofir</forename><surname>Nachum</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1911.11361</idno>
		<title level="m">Behavior regularized offline reinforcement learning</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Uncertainty weighted actor-critic for offline reinforcement learning</title>
		<author>
			<persName><forename type="first">Yue</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shuangfei</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nitish</forename><surname>Srivastava</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joshua</forename><surname>Susskind</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jian</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruslan</forename><surname>Salakhutdinov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hanlin</forename><surname>Goh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 38th International Conference on Machine Learning</title>
		<meeting>the 38th International Conference on Machine Learning</meeting>
		<imprint>
			<publisher>PMLR</publisher>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title level="m" type="main">On the sample complexity of batch reinforcement learning with policy-induced data</title>
		<author>
			<persName><forename type="first">Chenjun</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ilbin</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bo</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dale</forename><surname>Schuurmans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Csaba</forename><surname>Szepesvari</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2106.09973</idno>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<title level="m" type="main">MinAtar: An Atari-inspired testbed for thorough and reproducible reinforcement learning experiments</title>
		<author>
			<persName><forename type="first">Kenny</forename><surname>Young</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tian</forename><surname>Tian</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1903.03176</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<author>
			<persName><forename type="first">Tianhe</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Garrett</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lantao</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Ermon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Zou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chelsea</forename><surname>Finn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tengyu</forename><surname>Ma</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2005.13239</idno>
		<title level="m">MOPO: Model-based offline policy optimization</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
